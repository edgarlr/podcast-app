{"version":3,"file":"static/webpack/static/development/pages/[channel]/[podcast].js.64567f2cc8f755423260.hot-update.js","sources":["webpack:///./components/AudioControls.js"],"sourcesContent":["import React, { useContext, useRef, useState, useEffect } from 'react'\nimport { MdPause, MdPlayArrow, MdSkipPrevious, MdSkipNext } from 'react-icons/md';\nimport {PlayerContext} from '../contexts/PlayerContext'\n\nexport default function AudioControls({clipSrc}) {\n  const {\n    currentSong,\n    playing,\n    togglePlaying\n  } = useContext(PlayerContext)\n\n  const audio = useRef('audio_tag')\n\n  const [stateVolume, setStateVolume] = useState(0.5);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const fmtMSS = (s) => {\n    return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + ~~s;\n  };\n\n  const toggleAudio = () =>\n    audio.current.paused ? audio.current.play() : audio.current.pause();\n\n  const handleProgress = e => {\n    let compute = (e.target.value * duration) / 100;\n    setCurrentTime(compute);\n    audio.current.currentTime = compute;   \n  }\n\n  useEffect(() => {\n    audio.current.volume = stateVolume\n    if (playing) {\n      toggleAudio();\n    }\n  }, [currentSong])\n\n  return (\n    <div className='player'>\n      <audio\n        onCanPlay={(e) => setDuration(e.target.duration)}\n        onTimeUpdate={e => setCurrentTime(e.target.currentTime)}\n\n        ref={audio}\n        autoPlay={false}\n      >\n        <source preload='true' src={clipSrc} type='audio/mpeg' />\n      </audio>\n\n      <div className='main-player'>\n        <button className='controller-button'>\n          <MdSkipPrevious color='white' size='3em' />\n        </button>\n        <button\n          className='play-button'\n          onClick={() => {\n            toggleAudio();\n            togglePlaying();\n          }}\n        >\n          {playing ? (\n            <MdPause color='white' size='3em' />\n          ) : (\n            <MdPlayArrow color='white' size='3em' />\n          )}\n          {/* <MdPlayArrow color='white' size='3em' /> */}\n        </button>\n        <button className='controller-button'>\n          <MdSkipNext color='white' size='3em' />\n        </button>\n      </div>\n\n      <input\n        onChange={handleProgress}\n        value={duration ? (currentTime * 100) / duration : 0}\n        type='range'\n        name='progressbar'\n        id='pgrbar'\n        className='slider'\n      />\n      {/* <div className='control-bar'>\n        <div className='progress-bar'>\n          <div className='payback-controller' />\n        </div>\n      </div> */}\n\n      <div className='progress-time'>\n        <div>{fmtMSS(currentTime)}</div>\n        <div>{fmtMSS(duration)}</div>\n      </div>\n\n      <style jsx>{`\n        .slider {\n          -webkit-appearance: none;\n          height: 4px;\n          background-color: #5e5f5f;\n          width: 100%;\n          outline: none;\n          -webkit-transition: 0.2s;\n          transition: opacity 0.2s;\n        }\n\n        .slider::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          appearance: none;\n          width: 2.5em;\n          height: 2.5em;\n          border-radius: 50%;\n          border: 4px solid #131414;\n          cursor: pointer;\n\n          background: #fff;\n          box-shadow: -210px 0 0 200px #fff;\n        }\n\n        .slider::-webkit-slider-runnable-track {\n          -webkit-appearance: none;\n        }\n\n        .player {\n          height: auto;\n        }\n        .main-player {\n          display: flex;\n          justify-content: space-around;\n          align-items: center;\n          margin-bottom: 10%;\n        }\n        .controller-button {\n          background: none;\n          border: none;\n        }\n        .play-button {\n          width: 72px;\n          height: 72px;\n          border-radius: 50%;\n          border: 1px solid white;\n          background: none;\n        }\n        .control-bar {\n          height: 4px;\n          background: #5e5f5f;\n          width: 100%;\n          position: relative;\n          margin: 16px 0;\n        }\n        .progress-bar {\n          position: absolute;\n          height: 4px;\n          background: #ffffff;\n          left: 0;\n          right: 20%;\n        }\n        .payback-controller {\n          position: absolute;\n          height: 20px;\n          width: 20px;\n          border-radius: 50%;\n          border: 4px solid #131414;\n          right: 0;\n          top: 0;\n          background: #fff;\n          margin: -12px -12px;\n        }\n        .progress-time {\n          display: flex;\n          justify-content: space-between;\n          color: #979797;\n          font-size: 12px;\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlDA;AAAA;AAAA;AAuIA;;;;A","sourceRoot":""}