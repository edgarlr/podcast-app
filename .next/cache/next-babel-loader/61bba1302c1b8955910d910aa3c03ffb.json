{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar channel = /*#__PURE__*/function (_React$Component) {\n  _inherits(channel, _React$Component);\n\n  var _super = _createSuper(channel);\n\n  function channel() {\n    _classCallCheck(this, channel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(channel, [{\n    key: \"render\",\n    value: function render() {\n      var channel = this.props.channel;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, channel.title);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, idChannel, req, _await$req$json, channel;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query;\n              idChannel = query.id;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)));\n\n            case 4:\n              req = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(req.json());\n\n            case 7:\n              _await$req$json = _context.sent;\n              channel = _await$req$json.body.channel;\n              return _context.abrupt(\"return\", {\n                channel: channel\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return channel;\n}(React.Component);\n\nexport { channel as default };","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js"],"names":["channel","props","title","query","idChannel","id","fetch","req","json","body","React","Component"],"mappings":";;;;;;;;;;;;;;IAAqBA,O;;;;;;;;;;;;;6BAYV;AAAA,UACCA,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OAAO,CAACE,KADX,CADF;AAKD;;;;;;;;;;AAjB8BC,cAAAA,K,QAAAA,K;AACzBC,cAAAA,S,GAAYD,KAAK,CAACE,E;;+CACNC,KAAK,8CACmBF,SADnB,E;;;AAAjBG,cAAAA,G;;+CAG4BA,GAAG,CAACC,IAAJ,E;;;;AAAnBR,cAAAA,O,mBAAPS,I,CAAOT,O;+CAEN;AAAEA,gBAAAA,OAAO,EAAPA;AAAF,e;;;;;;;;;;;;EAT0BU,KAAK,CAACC,S;;SAAtBX,O","sourcesContent":["export default class channel extends React.Component {\n\n  static async getInitialProps({ query }){\n    let idChannel = query.id\n    let req = await fetch(\n      `https://api.audioboom.com/channels/${idChannel}`\n    );\n    let { body: {channel} } = await req.json();\n\n    return { channel };\n  }\n\n  render() {\n    const { channel } = this.props\n    return (\n      <div>\n        {channel.title}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}