{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/contexts/PlayerState.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer } from 'react';\nimport { PlayerContext } from './PlayerContext';\nimport { PlayerReducer } from './PlayerReducer';\nimport { SET_CURRENT_SONG, SET_CURRENT_SONG_INDEX, TOGGLE_PLAYING, SET_PLAYLIST, SET_LOADING } from './types';\nexport var PlayerState = function PlayerState(props) {\n  var initialState = {\n    currentSong: 0,\n    currentSongIndex: null,\n    playlist: null,\n    playing: false,\n    audio: null,\n    loading: true\n  };\n\n  var _useReducer = useReducer(PlayerReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var SetLoading = function SetLoading(loading) {\n    return dispatch({\n      type: SET_LOADING,\n      data: loading\n    });\n  };\n\n  var SetCurrent = function SetCurrent(currentSong) {\n    return dispatch({\n      type: SET_CURRENT_SONG,\n      data: currentSong\n    });\n  };\n\n  var SetCurrentIndex = function SetCurrentIndex(index) {\n    return dispatch({\n      type: SET_CURRENT_SONG_INDEX,\n      data: index\n    });\n  };\n\n  var SetPlaylist = function SetPlaylist(playlistArray) {\n    return dispatch({\n      type: SET_PLAYLIST,\n      data: playlistArray\n    });\n  };\n\n  var togglePlaying = function togglePlaying() {\n    return dispatch({\n      type: TOGGLE_PLAYING,\n      data: state.playing ? false : true\n    });\n  };\n\n  var prevSong = function prevSong() {\n    if (state.currentSong === 0) {\n      SetCurrentIndex(0);\n    } else {\n      SetCurrentIndex(state.currentSongIndex - 1);\n    } // console.log('hola');\n\n  };\n\n  var nextSong = function nextSong() {\n    console.log('hola');\n  };\n\n  return __jsx(PlayerContext.Provider, {\n    value: {\n      currentSong: state.currentSong,\n      currentSongIndex: state.currentSongIndex,\n      playlist: state.playlist,\n      playing: state.playing,\n      audio: state.audio,\n      loading: state.loading,\n      SetLoading: SetLoading,\n      SetCurrent: SetCurrent,\n      SetCurrentIndex: SetCurrentIndex,\n      SetPlaylist: SetPlaylist,\n      prevSong: prevSong,\n      nextSong: nextSong,\n      togglePlaying: togglePlaying\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/contexts/PlayerState.js"],"names":["useReducer","PlayerContext","PlayerReducer","SET_CURRENT_SONG","SET_CURRENT_SONG_INDEX","TOGGLE_PLAYING","SET_PLAYLIST","SET_LOADING","PlayerState","props","initialState","currentSong","currentSongIndex","playlist","playing","audio","loading","state","dispatch","SetLoading","type","data","SetCurrent","SetCurrentIndex","index","SetPlaylist","playlistArray","togglePlaying","prevSong","nextSong","console","log","children"],"mappings":"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","sourcesContent":["import {useReducer} from 'react';\nimport {PlayerContext} from './PlayerContext'\nimport {PlayerReducer} from './PlayerReducer'\nimport {\n  SET_CURRENT_SONG,\n  SET_CURRENT_SONG_INDEX,\n  TOGGLE_PLAYING,\n  SET_PLAYLIST,\n  SET_LOADING,\n} from './types';\n\nexport const PlayerState = props => {\n  const initialState = {\n    currentSong: 0,\n    currentSongIndex: null,\n    playlist: null,\n    playing: false,\n    audio: null,\n    loading: true,\n  }\n\n  const [state, dispatch] = useReducer(PlayerReducer, initialState)\n\n  const SetLoading = loading => dispatch({type: SET_LOADING, data: loading})\n\n  const SetCurrent = currentSong => dispatch({type: SET_CURRENT_SONG, data: currentSong })\n\n  const SetCurrentIndex = index => dispatch({type: SET_CURRENT_SONG_INDEX, data: index })\n\n  const SetPlaylist = playlistArray => dispatch({type: SET_PLAYLIST, data: playlistArray})\n\n  const togglePlaying = () => dispatch({type: TOGGLE_PLAYING, data: state.playing ? false : true})\n\n  const prevSong = () => {\n    if (state.currentSong === 0) {\n      SetCurrentIndex(0)\n    } else {\n      SetCurrentIndex(state.currentSongIndex - 1)\n    }\n    // console.log('hola');\n    \n  }\n\n  const nextSong = () => {\n    console.log('hola');\n  };\n  \n  return (\n    <PlayerContext.Provider\n      value={{\n        currentSong: state.currentSong,\n        currentSongIndex: state.currentSongIndex,\n        playlist: state.playlist,\n        playing: state.playing,\n        audio: state.audio,\n        loading: state.loading,\n        SetLoading,\n        SetCurrent,\n        SetCurrentIndex,\n        SetPlaylist,\n        prevSong,\n        nextSong,\n        togglePlaying,\n      }}\n    >\n      {props.children}\n    </PlayerContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}