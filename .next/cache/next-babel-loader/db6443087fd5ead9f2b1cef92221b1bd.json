{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/PodcastGrid.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PodcastCover from './PodcastCover';\nexport default class PodcastGrid extends Component {\n  render() {\n    const {\n      channels\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"jsx-859905998\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      className: \"jsx-859905998\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      className: \"jsx-859905998\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, \"Podcast\")), __jsx(\"div\", {\n      className: \"jsx-859905998\" + \" \" + 'channels',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, channels.map((channel, index) => __jsx(PodcastCover, {\n      channel: channel,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }))), __jsx(_JSXStyle, {\n      id: \"859905998\",\n      __self: this\n    }, \".channels.jsx-859905998{display:grid;grid-template-columns:repeat(auto-fill,minmax(145px,1fr));grid-gap:42px 10px;padding:15px 36px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvUG9kY2FzdEdyaWQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUJvQixBQUcwQixhQUMrQywwREFDekMsbUJBQ0Qsa0JBQ3BCIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvUG9kY2FzdEdyaWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUG9kY2FzdENvdmVyIGZyb20gJy4vUG9kY2FzdENvdmVyJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9kY2FzdEdyaWQgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge2NoYW5uZWxzfSA9IHRoaXMucHJvcHNcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGhlYWRlcj5cbiAgICAgICAgICA8aDE+UG9kY2FzdDwvaDE+XG4gICAgICAgIDwvaGVhZGVyPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY2hhbm5lbHMnPlxuICAgICAgICAgIHtjaGFubmVscy5tYXAoKGNoYW5uZWwsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICA8UG9kY2FzdENvdmVyIGNoYW5uZWw9e2NoYW5uZWx9IGluZGV4PXtpbmRleH0gLz5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIC5jaGFubmVscyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTQ1cHgsIDFmcikpO1xuICAgICAgICAgICAgZ3JpZC1nYXA6IDQycHggMTBweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE1cHggMzZweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/PodcastGrid.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/PodcastGrid.js"],"names":["React","Component","PodcastCover","PodcastGrid","render","channels","props","map","channel","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AACjDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKC,KAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE;AAAA,yCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACE,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACZ,MAAC,YAAD;AAAc,MAAA,OAAO,EAAED,OAAvB;AAAgC,MAAA,KAAK,EAAEC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAJF;AAAA;AAAA;AAAA,goDADF;AAqBD;;AAxBgD","sourcesContent":["import React, { Component } from 'react'\nimport PodcastCover from './PodcastCover';\n\nexport default class PodcastGrid extends Component {\n  render() {\n    const {channels} = this.props\n    return (\n      <div>\n        <header>\n          <h1>Podcast</h1>\n        </header>\n        <div className='channels'>\n          {channels.map((channel, index) => (\n            <PodcastCover channel={channel} index={index} />\n          ))}\n        </div>\n\n        <style jsx>{`\n          .channels {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(145px, 1fr));\n            grid-gap: 42px 10px;\n            padding: 15px 36px;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}