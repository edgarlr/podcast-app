{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error';\n\nvar channel = /*#__PURE__*/function (_React$Component) {\n  _inherits(channel, _React$Component);\n\n  var _super = _createSuper(channel);\n\n  function channel() {\n    _classCallCheck(this, channel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(channel, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series,\n          statusCode = _this$props.statusCode;\n\n      if (statusCode !== 200) {\n        return __jsx(Error, {\n          statusCode: statusCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return __jsx(Layout, {\n        title: \"\".concat(channel.title, \" | Podcast\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(channel.urls.banner_image.original, \")\")\n        },\n        className: \"jsx-3333162825\" + \" \" + 'banner',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }), __jsx(\"h1\", {\n        className: \"jsx-3333162825\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, channel.title), series.length > 0 && __jsx(\"div\", {\n        className: \"jsx-3333162825\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, __jsx(\"h2\", {\n        className: \"jsx-3333162825\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, \"Series\"), __jsx(PodcastGrid, {\n        channels: series,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      })), __jsx(\"h2\", {\n        className: \"jsx-3333162825\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, \"Ultimos Podcast\"), __jsx(EpisodeList, {\n        audioClips: audioClips,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }), __jsx(_JSXStyle, {\n        id: \"3333162825\",\n        __self: this\n      }, \"header.jsx-3333162825{color:#fff;background:#8756ca;padding:15px;text-align:center;}.banner.jsx-3333162825{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}.channels.jsx-3333162825{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}a.channel.jsx-3333162825{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-3333162825 img.jsx-3333162825{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h1.jsx-3333162825{font-weight:600;padding:15px;}h2.jsx-3333162825{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUVvQixBQUd3QixBQU9BLEFBUUUsQUFNQyxBQU1JLEFBS0YsQUFJSixXQW5DTyxBQU9BLENBNkJILENBckJGLENBTU0sRUFXUCxFQUw4QixTQVg5QixDQXFCRyxDQUpsQixDQWhDZSxBQU9lLElBY2pCLE1BTGlELEdBZjFDLENBb0NULENBZlksUUFnQkgsS0E5QkksQUFtQlgsR0F6QmIsUUEwQkEsRUFXQSxTQTlCd0IsZUFjeEIsR0FOQSxJQVBBIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2lzb21vcnBoaWMtZmV0Y2gnO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCdcbmltcG9ydCBFcGlzb2RlTGlzdCBmcm9tICcuLi9jb21wb25lbnRzL0VwaXNvZGVMaXN0JztcbmltcG9ydCBQb2RjYXN0R3JpZCBmcm9tICcuLi9jb21wb25lbnRzL1BvZGNhc3RHcmlkJztcbmltcG9ydCBFcnJvciBmcm9tICcuL19lcnJvcidcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgY2hhbm5lbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgc3RhdGljIGFzeW5jIGdldEluaXRpYWxQcm9wcyh7IHF1ZXJ5LCByZXMgPSB7fSB9KXtcbiAgICBsZXQgaWRDaGFubmVsID0gcXVlcnkuaWRcblxuICAgIHRyeSB7XG4gICAgICBsZXQgW3JlcUNoYW5uZWwsIHJlcUF1ZGlvcywgcmVxU2VyaWVzXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9P3ZlcnNpb249MmApLFxuICAgICAgICBmZXRjaChcbiAgICAgICAgICBgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHM/dmVyc2lvbj0yYFxuICAgICAgICApLFxuICAgICAgICBmZXRjaChcbiAgICAgICAgICBgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHM/dmVyc2lvbj0yYFxuICAgICAgICApLFxuICAgICAgXSk7XG5cbiAgICAgIHJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXM7XG4gICAgICAgICAgXG4gICAgICBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKTtcbiAgICAgIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsXG4gIFxuICAgICAgbGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpO1xuICAgICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHNcbiAgXG4gICAgICBsZXQgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKCk7XG4gICAgICBsZXQgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzXG4gIFxuICAgICAgcmV0dXJuIHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlOiByZXMuc3RhdHVzQ29kZSB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4ge2NoYW5uZWw6IG51bGwsIGF1ZGlvQ2xpcDogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiByZXMuc3RhdHVzQ29kZX1cbiAgICB9XG5cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZSB9ID0gdGhpcy5wcm9wc1xuICAgIFxuICAgIGlmIChzdGF0dXNDb2RlICE9PSAyMDApIHtcbiAgICAgIHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz47XG4gICAgfVxuICAgIFxuICAgIHJldHVybiAoXG4gICAgICA8TGF5b3V0IHRpdGxlPXtgJHtjaGFubmVsLnRpdGxlfSB8IFBvZGNhc3RgfT5cblxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPSdiYW5uZXInXG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogYHVybCgke2NoYW5uZWwudXJscy5iYW5uZXJfaW1hZ2Uub3JpZ2luYWx9KWAsXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cblxuICAgICAgICA8aDE+e2NoYW5uZWwudGl0bGV9PC9oMT5cblxuICAgICAgICB7c2VyaWVzLmxlbmd0aCA+IDAgJiYgXG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxoMj5TZXJpZXM8L2gyPlxuICAgICAgICAgICAgPFBvZGNhc3RHcmlkIGNoYW5uZWxzPXtzZXJpZXN9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIH1cblxuICAgICAgICA8aDI+VWx0aW1vcyBQb2RjYXN0PC9oMj5cbiAgICAgICAgPEVwaXNvZGVMaXN0IGF1ZGlvQ2xpcHM9e2F1ZGlvQ2xpcHN9IC8+XG5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIGhlYWRlciB7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICM4NzU2Y2E7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5iYW5uZXIge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjUlO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWFhO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5jaGFubmVscyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTYwcHgsIDFmcikpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBhLmNoYW5uZWwge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIH1cbiAgICAgICAgICAuY2hhbm5lbCBpbWcge1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBoMSB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICB9XG4gICAgICAgICAgaDIge1xuICAgICAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAwLjllbTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG5cbiAgICAgIDwvTGF5b3V0PlxuICAgICk7XG4gIH1cbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js */\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, _ref$res, res, idChannel, _await$Promise$all, _await$Promise$all2, reqChannel, reqAudios, reqSeries, dataChannel, _channel, dataAudios, audioClips, dataSeries, series;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query, _ref$res = _ref.res, res = _ref$res === void 0 ? {} : _ref$res;\n              idChannel = query.id;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"?version=2\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips?version=2\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels?version=2\"))]));\n\n            case 5:\n              _await$Promise$all = _context.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 3);\n              reqChannel = _await$Promise$all2[0];\n              reqAudios = _await$Promise$all2[1];\n              reqSeries = _await$Promise$all2[2];\n              res.statusCode = reqChannel.status;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 13:\n              dataChannel = _context.sent;\n              _channel = dataChannel.body.channel;\n              _context.next = 17;\n              return _regeneratorRuntime.awrap(reqAudios.json());\n\n            case 17:\n              dataAudios = _context.sent;\n              audioClips = dataAudios.body.audio_clips;\n              _context.next = 21;\n              return _regeneratorRuntime.awrap(reqSeries.json());\n\n            case 21:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                channel: _channel,\n                audioClips: audioClips,\n                series: series,\n                statusCode: res.statusCode\n              });\n\n            case 26:\n              _context.prev = 26;\n              _context.t0 = _context[\"catch\"](2);\n              return _context.abrupt(\"return\", {\n                channel: null,\n                audioClip: null,\n                series: null,\n                statusCode: res.statusCode\n              });\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 26]], Promise);\n    }\n  }]);\n\n  return channel;\n}(React.Component);\n\nexport { channel as default };","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js"],"names":["Layout","EpisodeList","PodcastGrid","Error","channel","props","audioClips","series","statusCode","title","backgroundImage","urls","banner_image","original","length","query","res","idChannel","id","Promise","all","fetch","reqChannel","reqAudios","reqSeries","status","json","dataChannel","body","dataAudios","audio_clips","dataSeries","channels","audioClip","React","Component"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch';\nimport Layout from '../components/Layout'\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error'\n\nexport default class channel extends React.Component {\n\n  static async getInitialProps({ query, res = {} }){\n    let idChannel = query.id\n\n    try {\n      let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`),\n        fetch(\n          `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n        ),\n        fetch(\n          `https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`\n        ),\n      ]);\n\n      res.statusCode = reqChannel.status;\n          \n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel\n  \n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips\n  \n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels\n  \n      return { channel, audioClips, series, statusCode: res.statusCode };\n    } catch (error) {\n      return {channel: null, audioClip: null, series: null, statusCode: res.statusCode}\n    }\n\n  }\n\n  render() {\n    const { channel, audioClips, series, statusCode } = this.props\n    \n    if (statusCode !== 200) {\n      return <Error statusCode={statusCode} />;\n    }\n    \n    return (\n      <Layout title={`${channel.title} | Podcast`}>\n\n        <div\n          className='banner'\n          style={{\n            backgroundImage: `url(${channel.urls.banner_image.original})`,\n          }}\n        />\n\n        <h1>{channel.title}</h1>\n\n        {series.length > 0 && \n          <div>\n            <h2>Series</h2>\n            <PodcastGrid channels={series} />\n          </div>\n        }\n\n        <h2>Ultimos Podcast</h2>\n        <EpisodeList audioClips={audioClips} />\n\n        <style jsx>{`\n          header {\n            color: #fff;\n            background: #8756ca;\n            padding: 15px;\n            text-align: center;\n          }\n\n          .banner {\n            width: 100%;\n            padding-bottom: 25%;\n            background-position: 50% 50%;\n            background-size: cover;\n            background-color: #aaa;\n          }\n\n          .channels {\n            display: grid;\n            grid-gap: 15px;\n            padding: 15px;\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n          }\n          a.channel {\n            display: block;\n            margin-bottom: 0.5em;\n            color: #333;\n            text-decoration: none;\n          }\n          .channel img {\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n            width: 100%;\n          }\n          h1 {\n            font-weight: 600;\n            padding: 15px;\n          }\n          h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-align: center;\n          }\n        `}</style>\n\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}