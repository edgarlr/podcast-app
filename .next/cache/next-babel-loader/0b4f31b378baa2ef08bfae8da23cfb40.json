{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error';\nimport { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nexport async function getServerSideProps(context) {\n  let idChannel = context.query.channel;\n\n  try {\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`)]);\n    context.res.statusCode = reqChannel.status;\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode: context.res.statusCode\n      }\n    };\n  } catch (error) {\n    return {\n      props: {\n        channel: null,\n        audioClip: null,\n        series: null,\n        statusCode: context.res.statusCode\n      }\n    };\n  }\n}\nexport default function channel({\n  channel,\n  audioClips,\n  series,\n  statusCode\n}) {\n  const {\n    0: bannerImage,\n    1: setBannerImage\n  } = useState({});\n  useEffect(() => {\n    if (channel.urls.banner_image.original === null) {\n      setBannerImage(channel.urls.logo_image.original);\n    } else {\n      setBannerImage(channel.urls.banner_image.original);\n    }\n  });\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    headerText: channel.title,\n    title: `${channel.title} | Podcast`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    headerText: \"Podcast\",\n    nav: true,\n    seguir: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-287616968\" + \" \" + 'content',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: `url(${bannerImage})`\n    },\n    className: \"jsx-287616968\" + \" \" + 'banner',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: `url(${bannerImage})`\n    },\n    className: \"jsx-287616968\" + \" \" + 'banner-shadow',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), series.length > 0 && __jsx(\"div\", {\n    className: \"jsx-287616968\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(PodcastGrid, {\n    channels: series,\n    title: `series de ${channel.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), __jsx(EpisodeList, {\n    audioClips: audioClips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"287616968\",\n    __self: this\n  }, \".content.jsx-287616968{padding:0 36px;}.banner.jsx-287616968{margin:24px 0 0;width:100%;background-position:50% 50%;height:120px;border-radius:20px;background-size:cover;background-color:#aaa;position:relative;}.banner-shadow.jsx-287616968{margin:20px 0 0;position:absolute;width:80%;background-position:50% 50%;height:105px;border-radius:20px;background-size:cover;background-color:#aaa;-webkit-filter:blur(15px);filter:blur(15px);left:50%;-webkit-transform:translate(-50%);-ms-transform:translate(-50%);transform:translate(-50%);z-index:-1;}.channels.jsx-287616968{display:grid;grid-gap:10px;padding:15px 36px;grid-template-columns:repeat(auto-fill,minmax(145px,1fr));}a.channel.jsx-287616968{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-287616968 img.jsx-287616968{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h1.jsx-287616968{font-weight:600;padding:15px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL1tjaGFubmVsXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpR2tCLEFBRzBCLEFBR0MsQUFVQSxBQWVILEFBTUMsQUFNSSxBQUtGLGFBaEJGLENBTU0sQ0FsQ3RCLENBR2EsQUFVTyxBQWdDTCxFQUw4QixTQXBDZixBQXlCVixFQWlCcEIsS0FoQ1ksQUFxQkMsVUFwQmlCLENBZWdDLEFBTXZDLFVBL0JSLEdBb0NGLFVBbkNRLENBb0NyQixHQTFCZSxhQUNNLEVBVkcsUUE4QnhCLFFBTkEsQ0Fid0IsS0FWQSxpQkFXQSxLQVZKLGlCQVdBLENBVnBCLDJDQVdXLFNBQ2lCLDBGQUNmLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2VkZ2FybG9wZXovQ29kZS9jb3Vyc2VzL3JlYWN0L25leHQvcG9kY2FzdHMvcGFnZXMvW2NoYW5uZWxdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xuaW1wb3J0IEVwaXNvZGVMaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvRXBpc29kZUxpc3QnO1xuaW1wb3J0IFBvZGNhc3RHcmlkIGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdEdyaWQnO1xuaW1wb3J0IEVycm9yIGZyb20gJy4vX2Vycm9yJztcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSGVhZGVyIGZyb20gJy4uL2NvbXBvbmVudHMvSGVhZGVyJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlclNpZGVQcm9wcyhjb250ZXh0KSB7XG4gIGxldCBpZENoYW5uZWwgPSBjb250ZXh0LnF1ZXJ5LmNoYW5uZWw7XG4gIHRyeSB7XG4gICAgbGV0IFtyZXFDaGFubmVsLCByZXFBdWRpb3MsIHJlcVNlcmllc10gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0/dmVyc2lvbj0yYCksXG4gICAgICBmZXRjaChcbiAgICAgICAgYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2F1ZGlvX2NsaXBzP3ZlcnNpb249MmBcbiAgICAgICksXG4gICAgICBmZXRjaChcbiAgICAgICAgYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2NoaWxkX2NoYW5uZWxzP3ZlcnNpb249MmBcbiAgICAgICksXG4gICAgXSk7XG5cbiAgICBjb250ZXh0LnJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXM7XG5cbiAgICBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKTtcbiAgICBsZXQgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbDtcblxuICAgIGxldCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKTtcbiAgICBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwcztcblxuICAgIGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKTtcbiAgICBsZXQgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHByb3BzOiB7XG4gICAgICAgIGNoYW5uZWwsXG4gICAgICAgIGF1ZGlvQ2xpcHMsXG4gICAgICAgIHNlcmllcyxcbiAgICAgICAgc3RhdHVzQ29kZTogY29udGV4dC5yZXMuc3RhdHVzQ29kZSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcHJvcHM6IHtcbiAgICAgICAgY2hhbm5lbDogbnVsbCxcbiAgICAgICAgYXVkaW9DbGlwOiBudWxsLFxuICAgICAgICBzZXJpZXM6IG51bGwsXG4gICAgICAgIHN0YXR1c0NvZGU6IGNvbnRleHQucmVzLnN0YXR1c0NvZGUsXG4gICAgICB9LFxuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY2hhbm5lbCh7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZSB9KSB7XG4gIGNvbnN0IFtiYW5uZXJJbWFnZSwgc2V0QmFubmVySW1hZ2VdID0gdXNlU3RhdGUoe30pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoY2hhbm5lbC51cmxzLmJhbm5lcl9pbWFnZS5vcmlnaW5hbCA9PT0gbnVsbCkge1xuICAgICAgc2V0QmFubmVySW1hZ2UoY2hhbm5lbC51cmxzLmxvZ29faW1hZ2Uub3JpZ2luYWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRCYW5uZXJJbWFnZShjaGFubmVsLnVybHMuYmFubmVyX2ltYWdlLm9yaWdpbmFsKVxuICAgIH1cbiAgfSlcblxuICBpZiAoc3RhdHVzQ29kZSAhPT0gMjAwKSB7XG4gICAgcmV0dXJuIDxFcnJvciBzdGF0dXNDb2RlPXtzdGF0dXNDb2RlfSAvPjtcbiAgfVxuICBcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0IGhlYWRlclRleHQ9e2NoYW5uZWwudGl0bGV9IHRpdGxlPXtgJHtjaGFubmVsLnRpdGxlfSB8IFBvZGNhc3RgfT5cbiAgICAgIDxIZWFkZXIgaGVhZGVyVGV4dD0nUG9kY2FzdCcgbmF2PXt0cnVlfSBzZWd1aXI9e3RydWV9IC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nY29udGVudCc+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9J2Jhbm5lcidcbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7YmFubmVySW1hZ2V9KWAsXG4gICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzTmFtZT0nYmFubmVyLXNoYWRvdydcbiAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogYHVybCgke2Jhbm5lckltYWdlfSlgLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7c2VyaWVzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8UG9kY2FzdEdyaWRcbiAgICAgICAgICAgICAgY2hhbm5lbHM9e3Nlcmllc31cbiAgICAgICAgICAgICAgdGl0bGU9e2BzZXJpZXMgZGUgJHtjaGFubmVsLnRpdGxlfWB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuXG4gICAgICAgIDxFcGlzb2RlTGlzdCBhdWRpb0NsaXBzPXthdWRpb0NsaXBzfSAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmNvbnRlbnQge1xuICAgICAgICAgIHBhZGRpbmc6IDAgMzZweDtcbiAgICAgICAgfVxuICAgICAgICAuYmFubmVyIHtcbiAgICAgICAgICBtYXJnaW46IDI0cHggMCAwO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgICAgICAgaGVpZ2h0OiAxMjBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICAgICAgLmJhbm5lci1zaGFkb3cge1xuICAgICAgICAgIG1hcmdpbjogMjBweCAwIDA7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEwNXB4O1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWFhO1xuICAgICAgICAgIGZpbHRlcjogYmx1cigxNXB4KTtcbiAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSk7XG4gICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgIH1cblxuICAgICAgICAuY2hhbm5lbHMge1xuICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgZ3JpZC1nYXA6IDEwcHg7XG4gICAgICAgICAgcGFkZGluZzogMTVweCAzNnB4O1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE0NXB4LCAxZnIpKTtcbiAgICAgICAgfVxuICAgICAgICBhLmNoYW5uZWwge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICAuY2hhbm5lbCBpbWcge1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgICAgIGgxIHtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel].js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel].js"],"names":["Layout","EpisodeList","PodcastGrid","Error","useState","useEffect","Header","getServerSideProps","context","idChannel","query","channel","reqChannel","reqAudios","reqSeries","Promise","all","fetch","res","statusCode","status","dataChannel","json","body","dataAudios","audioClips","audio_clips","dataSeries","series","channels","props","error","audioClip","bannerImage","setBannerImage","urls","banner_image","original","logo_image","title","backgroundImage","length"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error';\nimport { useState, useEffect } from 'react';\nimport Header from '../components/Header';\n\nexport async function getServerSideProps(context) {\n  let idChannel = context.query.channel;\n  try {\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n      ),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`\n      ),\n    ]);\n\n    context.res.statusCode = reqChannel.status;\n\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode: context.res.statusCode,\n      },\n    };\n  } catch (error) {\n    return {\n      props: {\n        channel: null,\n        audioClip: null,\n        series: null,\n        statusCode: context.res.statusCode,\n      },\n    };\n  }\n}\n\nexport default function channel({ channel, audioClips, series, statusCode }) {\n  const [bannerImage, setBannerImage] = useState({})\n\n  useEffect(() => {\n    if (channel.urls.banner_image.original === null) {\n      setBannerImage(channel.urls.logo_image.original);\n    } else {\n      setBannerImage(channel.urls.banner_image.original)\n    }\n  })\n\n  if (statusCode !== 200) {\n    return <Error statusCode={statusCode} />;\n  }\n  \n  return (\n    <Layout headerText={channel.title} title={`${channel.title} | Podcast`}>\n      <Header headerText='Podcast' nav={true} seguir={true} />\n      <div className='content'>\n        <div\n          className='banner'\n          style={{\n            backgroundImage: `url(${bannerImage})`,\n          }}\n        >\n          <div\n            className='banner-shadow'\n            style={{\n              backgroundImage: `url(${bannerImage})`,\n            }}\n          />\n        </div>\n\n        {series.length > 0 && (\n          <div>\n            <PodcastGrid\n              channels={series}\n              title={`series de ${channel.title}`}\n            />\n          </div>\n        )}\n\n        <EpisodeList audioClips={audioClips} />\n      </div>\n\n      <style jsx>{`\n        .content {\n          padding: 0 36px;\n        }\n        .banner {\n          margin: 24px 0 0;\n          width: 100%;\n          background-position: 50% 50%;\n          height: 120px;\n          border-radius: 20px;\n          background-size: cover;\n          background-color: #aaa;\n          position: relative;\n        }\n        .banner-shadow {\n          margin: 20px 0 0;\n          position: absolute;\n          width: 80%;\n          background-position: 50% 50%;\n          height: 105px;\n          border-radius: 20px;\n          background-size: cover;\n          background-color: #aaa;\n          filter: blur(15px);\n          left: 50%;\n          transform: translate(-50%);\n          z-index: -1;\n        }\n\n        .channels {\n          display: grid;\n          grid-gap: 10px;\n          padding: 15px 36px;\n          grid-template-columns: repeat(auto-fill, minmax(145px, 1fr));\n        }\n        a.channel {\n          display: block;\n          margin-bottom: 0.5em;\n          color: #333;\n          text-decoration: none;\n        }\n        .channel img {\n          border-radius: 3px;\n          box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n          width: 100%;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}