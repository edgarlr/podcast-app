{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel]/[podcast].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport { useContext, useState, useEffect } from 'react';\nimport { PlayerContext } from '../../contexts/PlayerContext';\nimport { useRouter } from 'next/router';\nimport { AudioPlayer } from '../../components/AudioPlayer';\nexport var __N_SSP = true;\nexport default function podcast(_ref) {\n  var audioClips = _ref.audioClips;\n  var router = useRouter();\n\n  var _useContext = useContext(PlayerContext),\n      SetCurrentIndex = _useContext.SetCurrentIndex,\n      SetPlaylist = _useContext.SetPlaylist,\n      SetCurrent = _useContext.SetCurrent,\n      SetLoading = _useContext.SetLoading,\n      playlist = _useContext.playlist,\n      loading = _useContext.loading; // useEffect(() => {\n  //   const setContextState = async () => {\n  //     if (playlist === null) {\n  //       SetPlaylist(audioClips)\n  //     }\n  //     for (let i = 0; i < audioClips.length; i++) {\n  //       if (router.query.podcast == audioClips[i].id) {\n  //         await SetCurrentIndex(i)\n  //         await SetCurrent(audioClips[i])\n  //         SetLoading(false)\n  //       }\n  //     }\n  //   }\n  //   setContextState()\n  // }, [])\n\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    }, \"...\");\n  }\n\n  return __jsx(AudioPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel]/[podcast].js"],"names":["useContext","useState","useEffect","PlayerContext","useRouter","AudioPlayer","podcast","audioClips","router","SetCurrentIndex","SetPlaylist","SetCurrent","SetLoading","playlist","loading"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAeA,eAAe,SAASC,OAAT,OAAiC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC9C,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAD8C,oBAU1CJ,UAAU,CAACG,aAAD,CAVgC;AAAA,MAI5CM,eAJ4C,eAI5CA,eAJ4C;AAAA,MAK5CC,WAL4C,eAK5CA,WAL4C;AAAA,MAM5CC,UAN4C,eAM5CA,UAN4C;AAAA,MAO5CC,UAP4C,eAO5CA,UAP4C;AAAA,MAQ5CC,QAR4C,eAQ5CA,QAR4C;AAAA,MAS5CC,OAT4C,eAS5CA,OAT4C,EAY9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAIA,OAAJ,EAAa;AACX,WAAO;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD","sourcesContent":["import 'isomorphic-fetch';\nimport { useContext, useState, useEffect } from 'react';\nimport { PlayerContext } from '../../contexts/PlayerContext';\nimport { useRouter } from 'next/router';\nimport { AudioPlayer } from '../../components/AudioPlayer';\n\nexport async function getServerSideProps(context) {\n  let idChannel = context.query.channel;\n\n  let req = await fetch(\n    `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n    );\n    \n  let data = await req.json()\n  let audioClips = data.body.audio_clips;\n  \n  return {props: {audioClips}}\n}\n\nexport default function podcast({ audioClips }) {\n  const router = useRouter();\n\n  const {\n    SetCurrentIndex,\n    SetPlaylist,\n    SetCurrent,\n    SetLoading,\n    playlist,\n    loading, \n  } = useContext(PlayerContext);\n\n  // useEffect(() => {\n  //   const setContextState = async () => {\n  //     if (playlist === null) {\n  //       SetPlaylist(audioClips)\n  //     }\n  //     for (let i = 0; i < audioClips.length; i++) {\n  //       if (router.query.podcast == audioClips[i].id) {\n  //         await SetCurrentIndex(i)\n  //         await SetCurrent(audioClips[i])\n  //         SetLoading(false)\n  //       }\n  //     }\n  //   }\n  //   setContextState()\n  // }, [])\n  \n  if (loading) {\n    return <div className=\"modal\">...</div>\n  }\n  \n  return (\n    <AudioPlayer />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}