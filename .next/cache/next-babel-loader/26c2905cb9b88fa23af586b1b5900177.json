{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nexport default class channel extends React.Component {\n  static async getInitialProps({\n    query\n  }) {\n    let idChannel = query.id;\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`)]);\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n    return {\n      channel,\n      audioClips,\n      series\n    };\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series\n    } = this.props;\n    console.log(series);\n    return __jsx(Layout, {\n      title: `${channel.title} | Podcast`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.banner_image.original})`\n      },\n      className: \"jsx-3333162825\" + \" \" + 'banner',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), __jsx(\"h1\", {\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Series\"), series.map(serie => __jsx(\"div\", {\n      className: \"jsx-3333162825\" + \" \" + 'channels',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, __jsx(Link, {\n      href: `/channel?id=${serie.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-3333162825\" + \" \" + 'channel',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, __jsx(\"img\", {\n      src: serie.urls.logo_image.original,\n      alt: \"\",\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), __jsx(\"h2\", {\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, serie.title)))))), __jsx(\"h2\", {\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Ultimos Podcast\"), __jsx(EpisodeList, {\n      audioClips: audioClips,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), __jsx(_JSXStyle, {\n      id: \"3333162825\",\n      __self: this\n    }, \"header.jsx-3333162825{color:#fff;background:#8756ca;padding:15px;text-align:center;}.banner.jsx-3333162825{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}.channels.jsx-3333162825{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}a.channel.jsx-3333162825{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-3333162825 img.jsx-3333162825{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h1.jsx-3333162825{font-weight:600;padding:15px;}h2.jsx-3333162825{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0VvQixBQUd3QixBQU9BLEFBUUUsQUFNQyxBQU1JLEFBS0YsQUFJSixXQW5DTyxBQU9BLENBNkJILENBckJGLENBTU0sRUFXUCxFQUw4QixTQVg5QixDQXFCRyxDQUpsQixDQWhDZSxBQU9lLElBY2pCLE1BTGlELEdBZjFDLENBb0NULENBZlksUUFnQkgsS0E5QkksQUFtQlgsR0F6QmIsUUEwQkEsRUFXQSxTQTlCd0IsZUFjeEIsR0FOQSxJQVBBIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2lzb21vcnBoaWMtZmV0Y2gnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnXG5pbXBvcnQgRXBpc29kZUxpc3QgZnJvbSAnLi4vY29tcG9uZW50cy9FcGlzb2RlTGlzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGNoYW5uZWwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gIHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoeyBxdWVyeSB9KXtcbiAgICBsZXQgaWRDaGFubmVsID0gcXVlcnkuaWRcblxuICAgIGxldCBbcmVxQ2hhbm5lbCwgcmVxQXVkaW9zLCByZXFTZXJpZXNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9P3ZlcnNpb249MmApLFxuICAgICAgZmV0Y2goXG4gICAgICAgIGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwcz92ZXJzaW9uPTJgXG4gICAgICApLFxuICAgICAgZmV0Y2goXG4gICAgICAgIGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVscz92ZXJzaW9uPTJgXG4gICAgICApLFxuICAgIF0pO1xuXG4gICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKCk7XG4gICAgbGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWxcblxuICAgIGxldCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKTtcbiAgICBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwc1xuXG4gICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpO1xuICAgIGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHNcblxuICAgIHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcyB9O1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzIH0gPSB0aGlzLnByb3BzXG4gICAgY29uc29sZS5sb2coc2VyaWVzKTtcbiAgICBcbiAgICByZXR1cm4gKFxuICAgICAgPExheW91dCB0aXRsZT17YCR7Y2hhbm5lbC50aXRsZX0gfCBQb2RjYXN0YH0+XG5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT0nYmFubmVyJ1xuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHtjaGFubmVsLnVybHMuYmFubmVyX2ltYWdlLm9yaWdpbmFsfSlgLFxuICAgICAgICAgIH19XG4gICAgICAgIC8+XG5cbiAgICAgICAgPGgxPntjaGFubmVsLnRpdGxlfTwvaDE+XG5cbiAgICAgICAge3Nlcmllcy5sZW5ndGggPiAwICYmIFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8aDI+U2VyaWVzPC9oMj5cbiAgICAgICAgICAgIHtzZXJpZXMubWFwKChzZXJpZSkgPT4gKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY2hhbm5lbHMnPlxuICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvY2hhbm5lbD9pZD0ke3NlcmllLmlkfWB9PlxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPSdjaGFubmVsJz5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3NlcmllLnVybHMubG9nb19pbWFnZS5vcmlnaW5hbH0gYWx0PVwiXCIvPlxuICAgICAgICAgICAgICAgICAgICA8aDI+e3NlcmllLnRpdGxlfTwvaDI+XG4gICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIH1cblxuICAgICAgICA8aDI+VWx0aW1vcyBQb2RjYXN0PC9oMj5cbiAgICAgICAgPEVwaXNvZGVMaXN0IGF1ZGlvQ2xpcHM9e2F1ZGlvQ2xpcHN9IC8+XG4gICAgICAgIFxuXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBoZWFkZXIge1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjODc1NmNhO1xuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuYmFubmVyIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDI1JTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuY2hhbm5lbHMge1xuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgIGdyaWQtZ2FwOiAxNXB4O1xuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYS5jaGFubmVsIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLmNoYW5uZWwgaW1nIHtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaDEge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgfVxuICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuXG4gICAgICA8L0xheW91dD5cbiAgICApO1xuICB9XG59XG4iXX0= */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js"],"names":["Link","Layout","EpisodeList","channel","React","Component","getInitialProps","query","idChannel","id","reqChannel","reqAudios","reqSeries","Promise","all","fetch","dataChannel","json","body","dataAudios","audioClips","audio_clips","dataSeries","series","channels","render","props","console","log","title","backgroundImage","urls","banner_image","original","length","map","serie","logo_image"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Layout from '../components/Layout'\nimport EpisodeList from '../components/EpisodeList';\n\nexport default class channel extends React.Component {\n\n  static async getInitialProps({ query }){\n    let idChannel = query.id\n\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n      ),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`\n      ),\n    ]);\n\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel\n\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips\n\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels\n\n    return { channel, audioClips, series };\n  }\n\n  render() {\n    const { channel, audioClips, series } = this.props\n    console.log(series);\n    \n    return (\n      <Layout title={`${channel.title} | Podcast`}>\n\n        <div\n          className='banner'\n          style={{\n            backgroundImage: `url(${channel.urls.banner_image.original})`,\n          }}\n        />\n\n        <h1>{channel.title}</h1>\n\n        {series.length > 0 && \n          <div>\n            <h2>Series</h2>\n            {series.map((serie) => (\n              <div className='channels'>\n                <Link href={`/channel?id=${serie.id}`}>\n                  <a className='channel'>\n                    <img src={serie.urls.logo_image.original} alt=\"\"/>\n                    <h2>{serie.title}</h2>\n                  </a>\n                </Link>\n              </div>\n            ))}\n          </div>\n          }\n\n        <h2>Ultimos Podcast</h2>\n        <EpisodeList audioClips={audioClips} />\n        \n\n        <style jsx>{`\n          header {\n            color: #fff;\n            background: #8756ca;\n            padding: 15px;\n            text-align: center;\n          }\n\n          .banner {\n            width: 100%;\n            padding-bottom: 25%;\n            background-position: 50% 50%;\n            background-size: cover;\n            background-color: #aaa;\n          }\n\n          .channels {\n            display: grid;\n            grid-gap: 15px;\n            padding: 15px;\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n          }\n          a.channel {\n            display: block;\n            margin-bottom: 0.5em;\n            color: #333;\n            text-decoration: none;\n          }\n          .channel img {\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n            width: 100%;\n          }\n          h1 {\n            font-weight: 600;\n            padding: 15px;\n          }\n          h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-align: center;\n          }\n        `}</style>\n\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}