{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport { PlayerContext } from '../contexts/PlayerContext';\nimport { MdVolumeUp } from 'react-icons/md';\nexport default function EpisodeList({\n  audioClips\n}) {\n  const {\n    SetCurrentIndex,\n    currentSongIndex,\n    SetCurrent,\n    SetPlaylist\n  } = useContext(PlayerContext);\n  const {\n    0: playlist,\n    1: setPlaylist\n  } = useState(null);\n  const router = useRouter();\n\n  const onPodcastClick = (podcast, channelId, index) => {\n    SetPlaylist(playlist);\n    SetCurrentIndex(index);\n    SetCurrent(podcast);\n    const podcastId = podcast.id;\n    router.push({\n      pathname: `/[channel]/[podcast]`,\n      query: {\n        podcastId: podcastId\n      },\n      as: `/${channelId}/${podcastId}`\n    }, `/${channelId}/${podcastId}`);\n    console.log(router.query);\n  };\n\n  useEffect(() => {\n    const playlistArray = audioClips.map(clip => clip.id);\n    setPlaylist(playlistArray);\n  }, []);\n\n  const sorted = (key, list, reverse = false) => {\n    if (reverse) {\n      return list.sort((a, b) => a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0);\n    } else if (key === 'counts') {\n      return list.sort((a, b) => a[key].plays > b[key].plays ? 1 : a[key].plays < b[key].plays ? -1 : 0);\n    }\n\n    return list.sort((a, b) => a[key] < b[key] ? 1 : a[key] > b[key] ? -1 : 0);\n  };\n\n  const {\n    0: list,\n    1: setList\n  } = useState(audioClips);\n  const {\n    0: sortType,\n    1: setSortType\n  } = useState('uploaded_at');\n  useEffect(() => {\n    setList(sorted(sortType, list));\n  });\n\n  const handleFilterClick = () => {\n    setSortType();\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-794169196\" + \" \" + 'episodes-header',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, `${audioClips.length} EPISODIOS`), __jsx(FiltersIcon, {\n    handleFilterClick: handleFilterClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), list.map((clip, index) => __jsx(\"div\", {\n    onClick: () => onPodcastClick(clip, clip.channel.id, index),\n    key: clip.id,\n    className: \"jsx-794169196\" + \" \" + ('episode ' + (currentSongIndex === index ? 'active' : '') || \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, clip.title), __jsx(\"div\", {\n    className: \"jsx-794169196\" + \" \" + 'meta',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, Math.ceil(clip.duration / 60), \" minutes\"), __jsx(\"p\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, clip.title), __jsx(\"div\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, clip.counts.plays, \" Plays\"), currentSongIndex === index && __jsx(\"span\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(MdVolumeUp, {\n    size: \"2em\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"794169196\",\n    __self: this\n  }, \".episodes-header.jsx-794169196{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:30px 0;text-align:left;border-bottom:1px solid #e2e2e2;}h3.jsx-794169196{font-size:12px;font-weight:600;margin:0;}.episode.jsx-794169196{display:block;-webkit-text-decoration:none;text-decoration:none;margin:0 0.6em;padding:16px 0;border-bottom:1px solid #e2e2e2;cursor:pointer;}.active.jsx-794169196{background:black;color:white;margin:0;padding:16px 1em;border-bottom:none;border-radius:20px;position:relative;text-align:left;}.active.jsx-794169196 h2.jsx-794169196,.active.jsx-794169196 p.jsx-794169196{width:70%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}.active.jsx-794169196 span.jsx-794169196{position:absolute;right:20px;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);}.episode.jsx-794169196:hover{color:#000;}h2.jsx-794169196{margin:16px 0;font-size:16px;}.episode.jsx-794169196 .meta.jsx-794169196{color:#979797;font-size:12px;margin-bottom:8px;}p.jsx-794169196{color:#979797;font-size:12px;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0ZrQixBQUd3QixBQVFFLEFBS0QsQUFRRyxBQVdQLEFBTVEsQUFNUCxBQUdHLEFBSUEsQUFLQSxVQXZCSyxDQVlyQixHQS9CdUIsQUFrQ04sQUFJQSxBQUtBLENBaERDLEVBYUosQ0FpQkQsV0FoQkYsQUFXTyxBQU1SLEFBU1YsQUFJb0IsQUFLVCxFQWhEQSxNQStCa0IsQ0FqQlYsQUFtQ25CLEVBaERBLEtBd0J5QixFQW1CekIsUUE3QnFCLFNBVkosSUFxQmpCLE1BbkNnQyxBQXlCWCxLQVZKLGNBV0csQ0FWYyxpQkFXaEIsZUFWRCxDQVdqQixHQWFBLFdBdkJBLGdEQWpCcUIsNkZBQ0osZUFDQyxnQkFDZ0IsZ0NBQ2xDIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGV9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCBGaWx0ZXJzSWNvbiBmcm9tICcuL0ZpbHRlcnNJY29uJztcbmltcG9ydCB7UGxheWVyQ29udGV4dH0gZnJvbSAnLi4vY29udGV4dHMvUGxheWVyQ29udGV4dCdcbmltcG9ydCB7TWRWb2x1bWVVcH0gZnJvbSAncmVhY3QtaWNvbnMvbWQnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVwaXNvZGVMaXN0ICh7YXVkaW9DbGlwc30pIHtcbiAgY29uc3QgeyBTZXRDdXJyZW50SW5kZXgsIGN1cnJlbnRTb25nSW5kZXgsIFNldEN1cnJlbnQsIFNldFBsYXlsaXN0fSA9IHVzZUNvbnRleHQoUGxheWVyQ29udGV4dClcbiAgY29uc3QgW3BsYXlsaXN0LCBzZXRQbGF5bGlzdF0gPSB1c2VTdGF0ZShudWxsKTtcblxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICBjb25zdCBvblBvZGNhc3RDbGljayA9IChwb2RjYXN0LCBjaGFubmVsSWQsIGluZGV4KSA9PiB7XG4gICAgU2V0UGxheWxpc3QocGxheWxpc3QpXG4gICAgU2V0Q3VycmVudEluZGV4KGluZGV4KVxuICAgIFNldEN1cnJlbnQocG9kY2FzdClcbiAgICBjb25zdCBwb2RjYXN0SWQgPSBwb2RjYXN0LmlkXG5cbiAgICByb3V0ZXIucHVzaChcbiAgICAgIHtcbiAgICAgICAgcGF0aG5hbWU6IGAvW2NoYW5uZWxdL1twb2RjYXN0XWAsXG4gICAgICAgIHF1ZXJ5OiB7IHBvZGNhc3RJZDogcG9kY2FzdElkIH0sXG4gICAgICAgIGFzOiBgLyR7Y2hhbm5lbElkfS8ke3BvZGNhc3RJZH1gLFxuICAgICAgfSxcbiAgICAgIGAvJHtjaGFubmVsSWR9LyR7cG9kY2FzdElkfWBcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKHJvdXRlci5xdWVyeSk7XG4gICAgXG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHBsYXlsaXN0QXJyYXkgPSBhdWRpb0NsaXBzLm1hcChjbGlwID0+IGNsaXAuaWQpXG4gICAgc2V0UGxheWxpc3QocGxheWxpc3RBcnJheSlcbiAgfSwgW10pXG5cblxuICBjb25zdCBzb3J0ZWQgPSAoa2V5LCBsaXN0LCByZXZlcnNlID0gZmFsc2UpID0+IHtcbiAgICBpZiAocmV2ZXJzZSkge1xuICAgICAgcmV0dXJuIGxpc3Quc29ydCgoYSxiKSA9PiAoYVtrZXldID4gYltrZXldID8gMSA6IGFba2V5XSA8IGJba2V5XSA/IC0xIDogMCkpXG4gICAgfVxuICAgIGVsc2UgaWYgKGtleSA9PT0gJ2NvdW50cycpIHtcbiAgICAgIHJldHVybiBsaXN0LnNvcnQoKGEsYikgPT4gKGFba2V5XS5wbGF5cyA+IGJba2V5XS5wbGF5cyA/IDEgOiBhW2tleV0ucGxheXMgPCBiW2tleV0ucGxheXMgPyAtMSA6IDApKVxuICAgIH1cbiAgICByZXR1cm4gbGlzdC5zb3J0KChhLGIpID0+IChhW2tleV0gPCBiW2tleV0gPyAxIDogYVtrZXldID4gYltrZXldID8gLTEgOiAwKSlcbiAgfVxuXG4gIGNvbnN0IFtsaXN0LCBzZXRMaXN0XSA9IHVzZVN0YXRlKGF1ZGlvQ2xpcHMpXG4gICAgY29uc3QgW3NvcnRUeXBlLCBzZXRTb3J0VHlwZV0gPSB1c2VTdGF0ZSgndXBsb2FkZWRfYXQnKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldExpc3Qoc29ydGVkKHNvcnRUeXBlLCBsaXN0KSk7XG4gIH0pXG5cbiAgY29uc3QgaGFuZGxlRmlsdGVyQ2xpY2sgPSAoKSA9PiB7XG4gICAgc2V0U29ydFR5cGUoKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9J2VwaXNvZGVzLWhlYWRlcic+XG4gICAgICAgIDxoMz57YCR7YXVkaW9DbGlwcy5sZW5ndGh9IEVQSVNPRElPU2B9PC9oMz5cbiAgICAgICAgPEZpbHRlcnNJY29uIGhhbmRsZUZpbHRlckNsaWNrPXtoYW5kbGVGaWx0ZXJDbGlja30gLz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7bGlzdC5tYXAoKGNsaXAsIGluZGV4KSA9PiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9eydlcGlzb2RlICcgKyAoY3VycmVudFNvbmdJbmRleCA9PT0gaW5kZXggPyAnYWN0aXZlJyA6ICcnKX1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblBvZGNhc3RDbGljayhjbGlwLCBjbGlwLmNoYW5uZWwuaWQsIGluZGV4KX1cbiAgICAgICAgICBrZXk9e2NsaXAuaWR9XG4gICAgICAgID5cbiAgICAgICAgICA8aDI+e2NsaXAudGl0bGV9PC9oMj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWV0YSc+e01hdGguY2VpbChjbGlwLmR1cmF0aW9uIC8gNjApfSBtaW51dGVzPC9kaXY+XG4gICAgICAgICAgPHA+e2NsaXAudGl0bGV9PC9wPlxuICAgICAgICAgIDxkaXY+e2NsaXAuY291bnRzLnBsYXlzfSBQbGF5czwvZGl2PlxuICAgICAgICAgIHtjdXJyZW50U29uZ0luZGV4ID09PSBpbmRleCAmJiAoXG4gICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgPE1kVm9sdW1lVXAgc2l6ZT0nMmVtJyBjb2xvcj0nd2hpdGUnIC8+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApKX1cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuZXBpc29kZXMtaGVhZGVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTJlMmUyO1xuICAgICAgICB9XG4gICAgICAgIGgzIHtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgICAgLmVwaXNvZGUge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBtYXJnaW46IDAgMC42ZW07XG4gICAgICAgICAgcGFkZGluZzogMTZweCAwO1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTJlMmUyO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuICAgICAgICAuYWN0aXZlIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDE2cHggMWVtO1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgfVxuICAgICAgICAuYWN0aXZlIGgyLFxuICAgICAgICAuYWN0aXZlIHAge1xuICAgICAgICAgIHdpZHRoOiA3MCU7XG4gICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICB9XG4gICAgICAgIC5hY3RpdmUgc3BhbiB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgICAgfVxuICAgICAgICAuZXBpc29kZTpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgIH1cbiAgICAgICAgaDIge1xuICAgICAgICAgIG1hcmdpbjogMTZweCAwO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgfVxuICAgICAgICAuZXBpc29kZSAubWV0YSB7XG4gICAgICAgICAgY29sb3I6ICM5Nzk3OTc7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgICAgICAgfVxuICAgICAgICBwIHtcbiAgICAgICAgICBjb2xvcjogIzk3OTc5NztcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js"],"names":["useContext","useEffect","useState","useRouter","FiltersIcon","PlayerContext","MdVolumeUp","EpisodeList","audioClips","SetCurrentIndex","currentSongIndex","SetCurrent","SetPlaylist","playlist","setPlaylist","router","onPodcastClick","podcast","channelId","index","podcastId","id","push","pathname","query","as","console","log","playlistArray","map","clip","sorted","key","list","reverse","sort","a","b","plays","setList","sortType","setSortType","handleFilterClick","length","channel","title","Math","ceil","duration","counts"],"mappings":"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","sourcesContent":["import {useContext, useEffect, useState} from 'react'\nimport {useRouter} from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport {PlayerContext} from '../contexts/PlayerContext'\nimport {MdVolumeUp} from 'react-icons/md'\n\nexport default function EpisodeList ({audioClips}) {\n  const { SetCurrentIndex, currentSongIndex, SetCurrent, SetPlaylist} = useContext(PlayerContext)\n  const [playlist, setPlaylist] = useState(null);\n\n  const router = useRouter();\n\n  const onPodcastClick = (podcast, channelId, index) => {\n    SetPlaylist(playlist)\n    SetCurrentIndex(index)\n    SetCurrent(podcast)\n    const podcastId = podcast.id\n\n    router.push(\n      {\n        pathname: `/[channel]/[podcast]`,\n        query: { podcastId: podcastId },\n        as: `/${channelId}/${podcastId}`,\n      },\n      `/${channelId}/${podcastId}`\n    );\n    console.log(router.query);\n    \n  }\n\n  useEffect(() => {\n    const playlistArray = audioClips.map(clip => clip.id)\n    setPlaylist(playlistArray)\n  }, [])\n\n\n  const sorted = (key, list, reverse = false) => {\n    if (reverse) {\n      return list.sort((a,b) => (a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0))\n    }\n    else if (key === 'counts') {\n      return list.sort((a,b) => (a[key].plays > b[key].plays ? 1 : a[key].plays < b[key].plays ? -1 : 0))\n    }\n    return list.sort((a,b) => (a[key] < b[key] ? 1 : a[key] > b[key] ? -1 : 0))\n  }\n\n  const [list, setList] = useState(audioClips)\n    const [sortType, setSortType] = useState('uploaded_at');\n\n  useEffect(() => {\n    setList(sorted(sortType, list));\n  })\n\n  const handleFilterClick = () => {\n    setSortType()\n  }\n\n  return (\n    <div>\n      <div className='episodes-header'>\n        <h3>{`${audioClips.length} EPISODIOS`}</h3>\n        <FiltersIcon handleFilterClick={handleFilterClick} />\n      </div>\n\n      {list.map((clip, index) => (\n        <div\n          className={'episode ' + (currentSongIndex === index ? 'active' : '')}\n          onClick={() => onPodcastClick(clip, clip.channel.id, index)}\n          key={clip.id}\n        >\n          <h2>{clip.title}</h2>\n          <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n          <p>{clip.title}</p>\n          <div>{clip.counts.plays} Plays</div>\n          {currentSongIndex === index && (\n            <span>\n              <MdVolumeUp size='2em' color='white' />\n            </span>\n          )}\n        </div>\n      ))}\n\n      <style jsx>{`\n        .episodes-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 30px 0;\n          text-align: left;\n          border-bottom: 1px solid #e2e2e2;\n        }\n        h3 {\n          font-size: 12px;\n          font-weight: 600;\n          margin: 0;\n        }\n        .episode {\n          display: block;\n          text-decoration: none;\n          margin: 0 0.6em;\n          padding: 16px 0;\n          border-bottom: 1px solid #e2e2e2;\n          cursor: pointer;\n        }\n        .active {\n          background: black;\n          color: white;\n          margin: 0;\n          padding: 16px 1em;\n          border-bottom: none;\n          border-radius: 20px;\n          position: relative;\n          text-align: left;\n        }\n        .active h2,\n        .active p {\n          width: 70%;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        .active span {\n          position: absolute;\n          right: 20px;\n          top: 50%;\n          transform: translateY(-50%);\n        }\n        .episode:hover {\n          color: #000;\n        }\n        h2 {\n          margin: 16px 0;\n          font-size: 16px;\n        }\n        .episode .meta {\n          color: #979797;\n          font-size: 12px;\n          margin-bottom: 8px;\n        }\n        p {\n          color: #979797;\n          font-size: 12px;\n          margin: 0;\n        }\n      `}</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}