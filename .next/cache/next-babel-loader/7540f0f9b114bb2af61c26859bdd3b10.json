{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport Router, { useRouter } from 'next/router';\nexport default function EpisodeList({\n  audioClips\n}) {\n  const router = useRouter();\n\n  const onPodcastClick = (podcastId, channelId) => {\n    router.push({\n      pathname: `/[channel]/[podcast]`,\n      query: {\n        podcastId: podcastId\n      },\n      as: `/${channelId}/${podcastId}`\n    }, `/${channelId}/${podcastId}`);\n    console.log(router.query);\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-4055273975\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-4055273975\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, `${audioClips.length} EPISODIOS`), audioClips.map(clip => __jsx(\"div\", {\n    onClick: () => onPodcastClick(clip.id, clip.channel.id),\n    key: clip.id,\n    className: \"jsx-4055273975\" + \" \" + 'episode',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-4055273975\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, clip.title), __jsx(\"div\", {\n    className: \"jsx-4055273975\" + \" \" + 'meta',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, Math.ceil(clip.duration / 60), \" minutes\"), clip.title)), __jsx(_JSXStyle, {\n    id: \"4055273975\",\n    __self: this\n  }, \"h3.jsx-4055273975{padding:30px 0;font-size:0.9em;font-weight:600;margin:0;text-align:left;border-bottom:1px solid #e2e2e2;}.episode.jsx-4055273975{display:block;-webkit-text-decoration:none;text-decoration:none;color:#333;margin:0 16px;padding:16px 0;border-bottom:1px solid rgba(0,0,0,0.2);cursor:pointer;}.episode.jsx-4055273975:hover{color:#000;}h2.jsx-4055273975{margin:0;font-size:16px;}.episode.jsx-4055273975 .meta.jsx-4055273975{color:#979797;margin-top:0.5em;font-size:0.8em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0NrQixBQUcwQixBQVFELEFBU0gsQUFHRixBQUlLLFNBSEMsRUFIakIsR0FUdUIsQUFnQkosQ0F4QkQsU0FxQmxCLE9BcEJrQixBQXdCQSxnQkF2QlAsQUF3QlgsU0F2QmtCLFFBTUwsUUFMcUIsR0FNbEIsY0FDQyxlQU5qQixBQU82Qyx3Q0FDNUIsZUFDakIiLCJmaWxlIjoiL1VzZXJzL2VkZ2FybG9wZXovQ29kZS9jb3Vyc2VzL3JlYWN0L25leHQvcG9kY2FzdHMvY29tcG9uZW50cy9FcGlzb2RlTGlzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcbmltcG9ydCBSb3V0ZXIsIHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXBpc29kZUxpc3QgKHthdWRpb0NsaXBzfSkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgY29uc3Qgb25Qb2RjYXN0Q2xpY2sgPSAocG9kY2FzdElkLCBjaGFubmVsSWQpID0+IHtcbiAgICByb3V0ZXIucHVzaChcbiAgICAgIHtcbiAgICAgICAgcGF0aG5hbWU6IGAvW2NoYW5uZWxdL1twb2RjYXN0XWAsXG4gICAgICAgIHF1ZXJ5OiB7IHBvZGNhc3RJZDogcG9kY2FzdElkIH0sXG4gICAgICAgIGFzOiBgLyR7Y2hhbm5lbElkfS8ke3BvZGNhc3RJZH1gLFxuICAgICAgfSxcbiAgICAgIGAvJHtjaGFubmVsSWR9LyR7cG9kY2FzdElkfWBcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKHJvdXRlci5xdWVyeSk7XG4gICAgXG4gIH1cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGgzPntgJHthdWRpb0NsaXBzLmxlbmd0aH0gRVBJU09ESU9TYH08L2gzPlxuXG4gICAgICB7YXVkaW9DbGlwcy5tYXAoKGNsaXApID0+IChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT0nZXBpc29kZSdcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblBvZGNhc3RDbGljayhjbGlwLmlkLCBjbGlwLmNoYW5uZWwuaWQpfVxuICAgICAgICAgIGtleT17Y2xpcC5pZH1cbiAgICAgICAgPlxuICAgICAgICAgIDxoMj57Y2xpcC50aXRsZX08L2gyPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtZXRhJz57TWF0aC5jZWlsKGNsaXAuZHVyYXRpb24gLyA2MCl9IG1pbnV0ZXM8L2Rpdj5cbiAgICAgICAgICB7Y2xpcC50aXRsZX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApKX1cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBoMyB7XG4gICAgICAgICAgcGFkZGluZzogMzBweCAwO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UyZTJlMjtcbiAgICAgICAgfVxuICAgICAgICAuZXBpc29kZSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICAgIG1hcmdpbjogMCAxNnB4O1xuICAgICAgICAgIHBhZGRpbmc6IDE2cHggMDtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuICAgICAgICAuZXBpc29kZTpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgIH1cbiAgICAgICAgaDIge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIH1cbiAgICAgICAgLmVwaXNvZGUgLm1ldGEge1xuICAgICAgICAgIGNvbG9yOiAjOTc5Nzk3O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDAuNWVtO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js"],"names":["React","Link","Router","useRouter","EpisodeList","audioClips","router","onPodcastClick","podcastId","channelId","push","pathname","query","as","console","log","length","map","clip","id","channel","title","Math","ceil","duration"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAgBC,SAAhB,QAAgC,aAAhC;AAEA,eAAe,SAASC,WAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAoC;AACjD,QAAMC,MAAM,GAAGH,SAAS,EAAxB;;AACA,QAAMI,cAAc,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC/CH,IAAAA,MAAM,CAACI,IAAP,CACE;AACEC,MAAAA,QAAQ,EAAG,sBADb;AAEEC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,SAAS,EAAEA;AAAb,OAFT;AAGEK,MAAAA,EAAE,EAAG,IAAGJ,SAAU,IAAGD,SAAU;AAHjC,KADF,EAMG,IAAGC,SAAU,IAAGD,SAAU,EAN7B;AAQAM,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACM,KAAnB;AAED,GAXD;;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,GAAEP,UAAU,CAACW,MAAO,YAA1B,CADF,EAGGX,UAAU,CAACY,GAAX,CAAgBC,IAAD,IACd;AAEE,IAAA,OAAO,EAAE,MAAMX,cAAc,CAACW,IAAI,CAACC,EAAN,EAAUD,IAAI,CAACE,OAAL,CAAaD,EAAvB,CAF/B;AAGE,IAAA,GAAG,EAAED,IAAI,CAACC,EAHZ;AAAA,wCACY,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACG,KAAV,CALF,EAME;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,IAAI,CAACC,IAAL,CAAUL,IAAI,CAACM,QAAL,GAAgB,EAA1B,CAAvB,aANF,EAOGN,IAAI,CAACG,KAPR,CADD,CAHH;AAAA;AAAA;AAAA,s3GADF;AAiDD","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport Router, {useRouter} from 'next/router';\n\nexport default function EpisodeList ({audioClips}) {\n  const router = useRouter();\n  const onPodcastClick = (podcastId, channelId) => {\n    router.push(\n      {\n        pathname: `/[channel]/[podcast]`,\n        query: { podcastId: podcastId },\n        as: `/${channelId}/${podcastId}`,\n      },\n      `/${channelId}/${podcastId}`\n    );\n    console.log(router.query);\n    \n  }\n  return (\n    <div>\n      <h3>{`${audioClips.length} EPISODIOS`}</h3>\n\n      {audioClips.map((clip) => (\n        <div\n          className='episode'\n          onClick={() => onPodcastClick(clip.id, clip.channel.id)}\n          key={clip.id}\n        >\n          <h2>{clip.title}</h2>\n          <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n          {clip.title}\n        </div>\n      ))}\n\n      <style jsx>{`\n        h3 {\n          padding: 30px 0;\n          font-size: 0.9em;\n          font-weight: 600;\n          margin: 0;\n          text-align: left;\n          border-bottom: 1px solid #e2e2e2;\n        }\n        .episode {\n          display: block;\n          text-decoration: none;\n          color: #333;\n          margin: 0 16px;\n          padding: 16px 0;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n          cursor: pointer;\n        }\n        .episode:hover {\n          color: #000;\n        }\n        h2 {\n          margin: 0;\n          font-size: 16px;\n        }\n        .episode .meta {\n          color: #979797;\n          margin-top: 0.5em;\n          font-size: 0.8em;\n        }\n      `}</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}