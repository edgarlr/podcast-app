{"ast":null,"code":"import 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from 'next/error';\nexport async function getServerSideProps(context) {\n  try {\n    let req = await fetch('https://api.audioboom.com/channels/recommended?api_version=2');\n    let {\n      body: channels\n    } = await req.json();\n    return {\n      props: {\n        channels,\n        statusCode: context.res.statusCode\n      }\n    };\n  } catch (error) {\n    return {\n      props: {\n        channels: null,\n        statusCode: context.res.statusCode\n      }\n    };\n  }\n}\nexport default function Home({\n  channels,\n  statusCode\n}) {\n  console.log(channels, statusCode); // if (statusCode !== 200) {\n  //   return <Error statusCode={statusCode} />;\n  // }\n  // return (\n  //   <Layout title='Podcast'>\n  //     <PodcastGrid channels={channels} />\n  //   </Layout>\n  // );\n} // export default class extends React.Component {\n//   static async getInitialProps() {\n//     try {\n//       let req = await fetch('https://api.audioboom.com/channels/recommended?api_version=2')\n//       let { body: channels } = await req.json();\n//       return {channels, statusCode: 200}\n//     } catch (error) {\n//       res.statusCode = 503;\n//       return { channels: null, statusCode: 503}\n//     }\n//   }\n//   render() {\n//     const { channels, statusCode } = this.props;\n//     if(statusCode !== 200) {\n//       return <Error statusCode={statusCode} />\n//     }\n//     return (\n//       <Layout title='Podcast'>\n//         <PodcastGrid channels={channels} />\n//       </Layout>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/index.js"],"names":["Layout","PodcastGrid","Error","getServerSideProps","context","req","fetch","body","channels","json","props","statusCode","res","error","Home","console","log"],"mappings":"AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMC,KAAK,CACnB,8DADmB,CAArB;AAGA,QAAI;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAqB,MAAMH,GAAG,CAACI,IAAJ,EAA/B;AAEA,WAAO;AAAEC,MAAAA,KAAK,EAAE;AAACF,QAAAA,QAAD;AAAWG,QAAAA,UAAU,EAAEP,OAAO,CAACQ,GAAR,CAAYD;AAAnC;AAAT,KAAP;AACD,GAPD,CAOE,OAAOE,KAAP,EAAc;AACd,WAAO;AAACH,MAAAA,KAAK,EAAE;AAAEF,QAAAA,QAAQ,EAAE,IAAZ;AAAkBG,QAAAA,UAAU,EAAEP,OAAO,CAACQ,GAAR,CAAYD;AAA1C;AAAR,KAAP;AACD;AACF;AAED,eAAe,SAASG,IAAT,CAAe;AAACN,EAAAA,QAAD;AAAWG,EAAAA;AAAX,CAAf,EAAuC;AACpDI,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBG,UAAtB,EADoD,CAGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,C,CAID;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import 'isomorphic-fetch'\nimport Layout from '../components/Layout';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from 'next/error'\n\nexport async function getServerSideProps(context) {\n  try {\n    let req = await fetch(\n      'https://api.audioboom.com/channels/recommended?api_version=2'\n    );\n    let { body: channels } = await req.json();\n\n    return { props: {channels, statusCode: context.res.statusCode} };\n  } catch (error) {\n    return {props: { channels: null, statusCode: context.res.statusCode }}\n  }\n}\n\nexport default function Home ({channels, statusCode}) {\n  console.log(channels, statusCode);\n  \n  // if (statusCode !== 200) {\n  //   return <Error statusCode={statusCode} />;\n  // }\n  // return (\n  //   <Layout title='Podcast'>\n  //     <PodcastGrid channels={channels} />\n  //   </Layout>\n  // );\n}\n\n\n\n// export default class extends React.Component {\n\n//   static async getInitialProps() {\n//     try {\n//       let req = await fetch('https://api.audioboom.com/channels/recommended?api_version=2')\n//       let { body: channels } = await req.json();\n  \n//       return {channels, statusCode: 200}\n//     } catch (error) {\n//       res.statusCode = 503;\n//       return { channels: null, statusCode: 503}\n//     }\n//   }\n\n//   render() {\n//     const { channels, statusCode } = this.props;\n\n//     if(statusCode !== 200) {\n//       return <Error statusCode={statusCode} />\n//     }\n\n//     return (\n//       <Layout title='Podcast'>\n//         <PodcastGrid channels={channels} />\n//       </Layout>\n//     )\n//   }\n// }"]},"metadata":{},"sourceType":"module"}