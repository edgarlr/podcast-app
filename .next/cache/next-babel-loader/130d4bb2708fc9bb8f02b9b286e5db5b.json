{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport Router, { useRouter } from 'next/router';\nexport default function EpisodeList(_ref) {\n  var _this = this;\n\n  var audioClips = _ref.audioClips;\n  var router = useRouter();\n\n  var onPodcastClick = function onPodcastClick(podcastId, channelId) {\n    router.push({\n      pathname: \"/[channel]/[podcast]\",\n      query: {\n        podcastId: podcastId\n      },\n      as: \"/\".concat(channelId, \"/\").concat(podcastId)\n    }, \"/\".concat(channelId, \"/\").concat(podcastId));\n    console.log(router.query);\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-2911220424\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-2911220424\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"\".concat(audioClips.length, \" Episodios\")), audioClips.map(function (clip) {\n    return __jsx(\"div\", {\n      onClick: function onClick() {\n        return onPodcastClick(clip.id, clip.channel.id);\n      },\n      key: clip.id,\n      className: \"jsx-2911220424\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      className: \"jsx-2911220424\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, clip.title), __jsx(\"div\", {\n      className: \"jsx-2911220424\" + \" \" + 'meta',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, Math.ceil(clip.duration / 60), \" minutes\"), clip.title);\n  }), __jsx(_JSXStyle, {\n    id: \"2911220424\",\n    __self: this\n  }, \".podcast.jsx-2911220424{display:block;-webkit-text-decoration:none;text-decoration:none;color:#333;padding:15px 36px;border-bottom:1px solid rgba(0,0,0,0.2);cursor:pointer;}.podcast.jsx-2911220424:hover{color:#000;}.podcast.jsx-2911220424 h3.jsx-2911220424{margin:0;}.podcast.jsx-2911220424 .meta.jsx-2911220424{color:#666;margin-top:0.5em;font-size:0.8em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUNrQixBQUd5QixBQVFILEFBR0YsQUFHRSxTQUZiLEVBSEEsQUFNbUIsR0FkSSxjQWVMLGdCQUNsQixvQkFmYSxXQUNPLGtCQUN5Qix3Q0FDNUIsZUFDakIiLCJmaWxlIjoiL1VzZXJzL2VkZ2FybG9wZXovQ29kZS9jb3Vyc2VzL3JlYWN0L25leHQvcG9kY2FzdHMvY29tcG9uZW50cy9FcGlzb2RlTGlzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcbmltcG9ydCBSb3V0ZXIsIHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXBpc29kZUxpc3QgKHthdWRpb0NsaXBzfSkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgY29uc3Qgb25Qb2RjYXN0Q2xpY2sgPSAocG9kY2FzdElkLCBjaGFubmVsSWQpID0+IHtcbiAgICByb3V0ZXIucHVzaChcbiAgICAgIHtcbiAgICAgICAgcGF0aG5hbWU6IGAvW2NoYW5uZWxdL1twb2RjYXN0XWAsXG4gICAgICAgIHF1ZXJ5OiB7IHBvZGNhc3RJZDogcG9kY2FzdElkIH0sXG4gICAgICAgIGFzOiBgLyR7Y2hhbm5lbElkfS8ke3BvZGNhc3RJZH1gLFxuICAgICAgfSxcbiAgICAgIGAvJHtjaGFubmVsSWR9LyR7cG9kY2FzdElkfWBcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKHJvdXRlci5xdWVyeSk7XG4gICAgXG4gIH1cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGgyPntgJHthdWRpb0NsaXBzLmxlbmd0aH0gRXBpc29kaW9zYH08L2gyPlxuICAgICAgXG4gICAgICB7YXVkaW9DbGlwcy5tYXAoKGNsaXApID0+IChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uUG9kY2FzdENsaWNrKGNsaXAuaWQsIGNsaXAuY2hhbm5lbC5pZCl9XG4gICAgICAgICAga2V5PXtjbGlwLmlkfVxuICAgICAgICA+XG4gICAgICAgICAgPGgzPntjbGlwLnRpdGxlfTwvaDM+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J21ldGEnPntNYXRoLmNlaWwoY2xpcC5kdXJhdGlvbiAvIDYwKX0gbWludXRlczwvZGl2PlxuICAgICAgICAgIHtjbGlwLnRpdGxlfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICkpfVxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5wb2RjYXN0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgcGFkZGluZzogMTVweCAzNnB4O1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICAgIC5wb2RjYXN0OmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgfVxuICAgICAgICAucG9kY2FzdCBoMyB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICAgIC5wb2RjYXN0IC5tZXRhIHtcbiAgICAgICAgICBjb2xvcjogIzY2NjtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAwLjVlbTtcbiAgICAgICAgICBmb250LXNpemU6IDAuOGVtO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js"],"names":["React","Link","Router","useRouter","EpisodeList","audioClips","router","onPodcastClick","podcastId","channelId","push","pathname","query","as","console","log","length","map","clip","id","channel","title","Math","ceil","duration"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAgBC,SAAhB,QAAgC,aAAhC;AAEA,eAAe,SAASC,WAAT,OAAoC;AAAA;;AAAA,MAAbC,UAAa,QAAbA,UAAa;AACjD,MAAMC,MAAM,GAAGH,SAAS,EAAxB;;AACA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC/CH,IAAAA,MAAM,CAACI,IAAP,CACE;AACEC,MAAAA,QAAQ,wBADV;AAEEC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,SAAS,EAAEA;AAAb,OAFT;AAGEK,MAAAA,EAAE,aAAMJ,SAAN,cAAmBD,SAAnB;AAHJ,KADF,aAMMC,SANN,cAMmBD,SANnB;AAQAM,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACM,KAAnB;AAED,GAXD;;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQP,UAAU,CAACW,MAAnB,gBADF,EAGGX,UAAU,CAACY,GAAX,CAAe,UAACC,IAAD;AAAA,WACd;AACE,MAAA,OAAO,EAAE;AAAA,eAAMX,cAAc,CAACW,IAAI,CAACC,EAAN,EAAUD,IAAI,CAACE,OAAL,CAAaD,EAAvB,CAApB;AAAA,OADX;AAEE,MAAA,GAAG,EAAED,IAAI,CAACC,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACG,KAAV,CAJF,EAKE;AAAA,0CAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBC,IAAI,CAACC,IAAL,CAAUL,IAAI,CAACM,QAAL,GAAgB,EAA1B,CAAvB,aALF,EAMGN,IAAI,CAACG,KANR,CADc;AAAA,GAAf,CAHH;AAAA;AAAA;AAAA,szFADF;AAsCD","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport Router, {useRouter} from 'next/router';\n\nexport default function EpisodeList ({audioClips}) {\n  const router = useRouter();\n  const onPodcastClick = (podcastId, channelId) => {\n    router.push(\n      {\n        pathname: `/[channel]/[podcast]`,\n        query: { podcastId: podcastId },\n        as: `/${channelId}/${podcastId}`,\n      },\n      `/${channelId}/${podcastId}`\n    );\n    console.log(router.query);\n    \n  }\n  return (\n    <div>\n      <h2>{`${audioClips.length} Episodios`}</h2>\n      \n      {audioClips.map((clip) => (\n        <div\n          onClick={() => onPodcastClick(clip.id, clip.channel.id)}\n          key={clip.id}\n        >\n          <h3>{clip.title}</h3>\n          <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n          {clip.title}\n        </div>\n      ))}\n\n      <style jsx>{`\n        .podcast {\n          display: block;\n          text-decoration: none;\n          color: #333;\n          padding: 15px 36px;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n          cursor: pointer;\n        }\n        .podcast:hover {\n          color: #000;\n        }\n        .podcast h3 {\n          margin: 0;\n        }\n        .podcast .meta {\n          color: #666;\n          margin-top: 0.5em;\n          font-size: 0.8em;\n        }\n      `}</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}