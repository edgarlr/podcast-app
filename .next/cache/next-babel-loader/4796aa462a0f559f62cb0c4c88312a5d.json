{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_TO_FOLLOW, REMOVE_FROM_FOLLOW } from './types';\nexport const FavsReducer = (action, state) => {\n  switch (action.type) {\n    case ADD_TO_FOLLOW:\n      return _objectSpread({}, state, {\n        myList: [...state.myList, action.data]\n      });\n\n    case REMOVE_FROM_FOLLOW:\n      return _objectSpread({}, state, {\n        myList: state.myList.filter(items => items.id !== action.data)\n      });\n\n    default:\n      return {\n        state\n      };\n  }\n};","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/contexts/FavsReducer.js"],"names":["ADD_TO_FOLLOW","REMOVE_FROM_FOLLOW","FavsReducer","action","state","type","myList","data","filter","items","id"],"mappings":";;;;;;AAAA,SAAQA,aAAR,EAAuBC,kBAAvB,QAAgD,SAAhD;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5C,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKL,aAAL;AACE,+BACKI,KADL;AAEEE,QAAAA,MAAM,EAAE,CAAC,GAAGF,KAAK,CAACE,MAAV,EAAkBH,MAAM,CAACI,IAAzB;AAFV;;AAIF,SAAKN,kBAAL;AACE,+BACKG,KADL;AAEEE,QAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,CAAaE,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaP,MAAM,CAACI,IAAjD;AAFV;;AAIF;AACE,aAAO;AACLH,QAAAA;AADK,OAAP;AAZJ;AAgBD,CAjBM","sourcesContent":["import {ADD_TO_FOLLOW, REMOVE_FROM_FOLLOW} from './types';\n\nexport const FavsReducer = (action, state) => {\n  switch (action.type) {\n    case ADD_TO_FOLLOW:\n      return {\n        ...state,\n        myList: [...state.myList, action.data]\n      };\n    case REMOVE_FROM_FOLLOW: \n      return {\n        ...state,\n        myList: state.myList.filter(items => items.id !== action.data)\n      }\n    default:\n      return {\n        state\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}