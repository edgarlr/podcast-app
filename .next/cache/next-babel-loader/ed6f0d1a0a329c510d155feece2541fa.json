{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport { PlayerContext } from '../contexts/PlayerContext';\nimport { MdVolumeUp } from 'react-icons/md';\nexport default function EpisodeList({\n  audioClips\n}) {\n  const {\n    0: playlist,\n    1: setPlaylist\n  } = useState(null);\n  const {\n    SetCurrentIndex,\n    currentSongIndex,\n    SetCurrent,\n    SetPlaylist\n  } = useContext(PlayerContext);\n  const router = useRouter();\n\n  const onPodcastClick = (podcast, channelId, index) => {\n    SetPlaylist(index);\n    SetCurrentIndex(podcast.id);\n    SetCurrent(podcast);\n    const podcastId = podcast.id;\n    router.push({\n      pathname: `/[channel]/[podcast]`,\n      query: {\n        podcastId: podcastId\n      },\n      as: `/${channelId}/${podcastId}`\n    }, `/${channelId}/${podcastId}`);\n    console.log(router.query);\n  };\n\n  useEffect(() => {\n    const playlistArray = audioClips.map(clip => clip.id);\n    setPlaylist(playlistArray);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-794169196\" + \" \" + 'episodes-header',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, `${audioClips.length} EPISODIOS`), __jsx(FiltersIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), audioClips.map((clip, index) => __jsx(\"div\", {\n    onClick: () => onPodcastClick(clip, clip.channel.id, index),\n    key: clip.id,\n    className: \"jsx-794169196\" + \" \" + ('episode ' + (currentSongIndex === clip.id ? 'active' : '') || \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, clip.title), __jsx(\"div\", {\n    className: \"jsx-794169196\" + \" \" + 'meta',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, Math.ceil(clip.duration / 60), \" minutes\"), __jsx(\"p\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, clip.title), currentSongIndex === clip.id && __jsx(\"span\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(MdVolumeUp, {\n    size: \"2em\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"794169196\",\n    __self: this\n  }, \".episodes-header.jsx-794169196{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:30px 0;text-align:left;border-bottom:1px solid #e2e2e2;}h3.jsx-794169196{font-size:12px;font-weight:600;margin:0;}.episode.jsx-794169196{display:block;-webkit-text-decoration:none;text-decoration:none;margin:0 0.6em;padding:16px 0;border-bottom:1px solid #e2e2e2;cursor:pointer;}.active.jsx-794169196{background:black;color:white;margin:0;padding:16px 1em;border-bottom:none;border-radius:20px;position:relative;text-align:left;}.active.jsx-794169196 h2.jsx-794169196,.active.jsx-794169196 p.jsx-794169196{width:70%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}.active.jsx-794169196 span.jsx-794169196{position:absolute;right:20px;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);}.episode.jsx-794169196:hover{color:#000;}h2.jsx-794169196{margin:16px 0;font-size:16px;}.episode.jsx-794169196 .meta.jsx-794169196{color:#979797;font-size:12px;margin-bottom:8px;}p.jsx-794169196{color:#979797;font-size:12px;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkRrQixBQUd3QixBQVFFLEFBS0QsQUFRRyxBQVdQLEFBTVEsQUFNUCxBQUdHLEFBSUEsQUFLQSxVQXZCSyxDQVlyQixHQS9CdUIsQUFrQ04sQUFJQSxBQUtBLENBaERDLEVBYUosQ0FpQkQsV0FoQkYsQUFXTyxBQU1SLEFBU1YsQUFJb0IsQUFLVCxFQWhEQSxNQStCa0IsQ0FqQlYsQUFtQ25CLEVBaERBLEtBd0J5QixFQW1CekIsUUE3QnFCLFNBVkosSUFxQmpCLE1BbkNnQyxBQXlCWCxLQVZKLGNBV0csQ0FWYyxpQkFXaEIsZUFWRCxDQVdqQixHQWFBLFdBdkJBLGdEQWpCcUIsNkZBQ0osZUFDQyxnQkFDZ0IsZ0NBQ2xDIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGV9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCBGaWx0ZXJzSWNvbiBmcm9tICcuL0ZpbHRlcnNJY29uJztcbmltcG9ydCB7UGxheWVyQ29udGV4dH0gZnJvbSAnLi4vY29udGV4dHMvUGxheWVyQ29udGV4dCdcbmltcG9ydCB7TWRWb2x1bWVVcH0gZnJvbSAncmVhY3QtaWNvbnMvbWQnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVwaXNvZGVMaXN0ICh7YXVkaW9DbGlwc30pIHtcbiAgY29uc3QgW3BsYXlsaXN0LCBzZXRQbGF5bGlzdF0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCB7IFNldEN1cnJlbnRJbmRleCwgY3VycmVudFNvbmdJbmRleCwgU2V0Q3VycmVudCwgU2V0UGxheWxpc3R9ID0gdXNlQ29udGV4dChQbGF5ZXJDb250ZXh0KVxuXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuXG4gIFxuICBjb25zdCBvblBvZGNhc3RDbGljayA9IChwb2RjYXN0LCBjaGFubmVsSWQsIGluZGV4KSA9PiB7XG4gICAgU2V0UGxheWxpc3QoaW5kZXgpXG4gICAgU2V0Q3VycmVudEluZGV4KHBvZGNhc3QuaWQpO1xuICAgIFNldEN1cnJlbnQocG9kY2FzdCk7XG4gICAgY29uc3QgcG9kY2FzdElkID0gcG9kY2FzdC5pZDtcbiAgICByb3V0ZXIucHVzaChcbiAgICAgIHtcbiAgICAgICAgcGF0aG5hbWU6IGAvW2NoYW5uZWxdL1twb2RjYXN0XWAsXG4gICAgICAgIHF1ZXJ5OiB7IHBvZGNhc3RJZDogcG9kY2FzdElkIH0sXG4gICAgICAgIGFzOiBgLyR7Y2hhbm5lbElkfS8ke3BvZGNhc3RJZH1gLFxuICAgICAgfSxcbiAgICAgIGAvJHtjaGFubmVsSWR9LyR7cG9kY2FzdElkfWBcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKHJvdXRlci5xdWVyeSk7XG4gICAgXG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHBsYXlsaXN0QXJyYXkgPSBhdWRpb0NsaXBzLm1hcChjbGlwID0+IGNsaXAuaWQpXG4gICAgc2V0UGxheWxpc3QocGxheWxpc3RBcnJheSlcbiAgfSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9J2VwaXNvZGVzLWhlYWRlcic+XG4gICAgICAgIDxoMz57YCR7YXVkaW9DbGlwcy5sZW5ndGh9IEVQSVNPRElPU2B9PC9oMz5cbiAgICAgICAgPEZpbHRlcnNJY29uIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAge2F1ZGlvQ2xpcHMubWFwKChjbGlwLCBpbmRleCkgPT4gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPXsnZXBpc29kZSAnICsgKGN1cnJlbnRTb25nSW5kZXggPT09IGNsaXAuaWQgPyAnYWN0aXZlJyA6ICcnKX1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblBvZGNhc3RDbGljayhjbGlwLCBjbGlwLmNoYW5uZWwuaWQsIGluZGV4KX1cbiAgICAgICAgICBrZXk9e2NsaXAuaWR9XG4gICAgICAgID5cbiAgICAgICAgICA8aDI+e2NsaXAudGl0bGV9PC9oMj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWV0YSc+e01hdGguY2VpbChjbGlwLmR1cmF0aW9uIC8gNjApfSBtaW51dGVzPC9kaXY+XG4gICAgICAgICAgPHA+e2NsaXAudGl0bGV9PC9wPlxuICAgICAgICAgIHtjdXJyZW50U29uZ0luZGV4ID09PSBjbGlwLmlkICYmIChcbiAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICA8TWRWb2x1bWVVcCBzaXplPScyZW0nIGNvbG9yPSd3aGl0ZScgLz5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICkpfVxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5lcGlzb2Rlcy1oZWFkZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgcGFkZGluZzogMzBweCAwO1xuICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMmUyZTI7XG4gICAgICAgIH1cbiAgICAgICAgaDMge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgICAuZXBpc29kZSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogMCAwLjZlbTtcbiAgICAgICAgICBwYWRkaW5nOiAxNnB4IDA7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMmUyZTI7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICAgIC5hY3RpdmUge1xuICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrO1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgcGFkZGluZzogMTZweCAxZW07XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB9XG4gICAgICAgIC5hY3RpdmUgaDIsXG4gICAgICAgIC5hY3RpdmUgcCB7XG4gICAgICAgICAgd2lkdGg6IDcwJTtcbiAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAgIH1cbiAgICAgICAgLmFjdGl2ZSBzcGFuIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICB9XG4gICAgICAgIC5lcGlzb2RlOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgfVxuICAgICAgICBoMiB7XG4gICAgICAgICAgbWFyZ2luOiAxNnB4IDA7XG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICB9XG4gICAgICAgIC5lcGlzb2RlIC5tZXRhIHtcbiAgICAgICAgICBjb2xvcjogIzk3OTc5NztcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgICAgICB9XG4gICAgICAgIHAge1xuICAgICAgICAgIGNvbG9yOiAjOTc5Nzk3O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js"],"names":["useContext","useEffect","useState","useRouter","FiltersIcon","PlayerContext","MdVolumeUp","EpisodeList","audioClips","playlist","setPlaylist","SetCurrentIndex","currentSongIndex","SetCurrent","SetPlaylist","router","onPodcastClick","podcast","channelId","index","id","podcastId","push","pathname","query","as","console","log","playlistArray","map","clip","length","channel","title","Math","ceil","duration"],"mappings":"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","sourcesContent":["import {useContext, useEffect, useState} from 'react'\nimport {useRouter} from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport {PlayerContext} from '../contexts/PlayerContext'\nimport {MdVolumeUp} from 'react-icons/md'\n\nexport default function EpisodeList ({audioClips}) {\n  const [playlist, setPlaylist] = useState(null)\n  const { SetCurrentIndex, currentSongIndex, SetCurrent, SetPlaylist} = useContext(PlayerContext)\n\n  const router = useRouter();\n\n  \n  const onPodcastClick = (podcast, channelId, index) => {\n    SetPlaylist(index)\n    SetCurrentIndex(podcast.id);\n    SetCurrent(podcast);\n    const podcastId = podcast.id;\n    router.push(\n      {\n        pathname: `/[channel]/[podcast]`,\n        query: { podcastId: podcastId },\n        as: `/${channelId}/${podcastId}`,\n      },\n      `/${channelId}/${podcastId}`\n    );\n    console.log(router.query);\n    \n  }\n\n  useEffect(() => {\n    const playlistArray = audioClips.map(clip => clip.id)\n    setPlaylist(playlistArray)\n  }, [])\n\n  return (\n    <div>\n      <div className='episodes-header'>\n        <h3>{`${audioClips.length} EPISODIOS`}</h3>\n        <FiltersIcon />\n      </div>\n\n      {audioClips.map((clip, index) => (\n        <div\n          className={'episode ' + (currentSongIndex === clip.id ? 'active' : '')}\n          onClick={() => onPodcastClick(clip, clip.channel.id, index)}\n          key={clip.id}\n        >\n          <h2>{clip.title}</h2>\n          <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n          <p>{clip.title}</p>\n          {currentSongIndex === clip.id && (\n            <span>\n              <MdVolumeUp size='2em' color='white' />\n            </span>\n          )}\n        </div>\n      ))}\n\n      <style jsx>{`\n        .episodes-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 30px 0;\n          text-align: left;\n          border-bottom: 1px solid #e2e2e2;\n        }\n        h3 {\n          font-size: 12px;\n          font-weight: 600;\n          margin: 0;\n        }\n        .episode {\n          display: block;\n          text-decoration: none;\n          margin: 0 0.6em;\n          padding: 16px 0;\n          border-bottom: 1px solid #e2e2e2;\n          cursor: pointer;\n        }\n        .active {\n          background: black;\n          color: white;\n          margin: 0;\n          padding: 16px 1em;\n          border-bottom: none;\n          border-radius: 20px;\n          position: relative;\n          text-align: left;\n        }\n        .active h2,\n        .active p {\n          width: 70%;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        .active span {\n          position: absolute;\n          right: 20px;\n          top: 50%;\n          transform: translateY(-50%);\n        }\n        .episode:hover {\n          color: #000;\n        }\n        h2 {\n          margin: 16px 0;\n          font-size: 16px;\n        }\n        .episode .meta {\n          color: #979797;\n          font-size: 12px;\n          margin-bottom: 8px;\n        }\n        p {\n          color: #979797;\n          font-size: 12px;\n          margin: 0;\n        }\n      `}</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}