{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error';\nexport var __N_SSP = true;\nexport default function channel(_ref) {\n  var channel = _ref.channel,\n      audioClips = _ref.audioClips,\n      series = _ref.series,\n      statusCode = _ref.statusCode;\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"\".concat(channel.title, \" | Podcast\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(channel.urls.banner_image.original, \")\")\n    },\n    className: \"jsx-2267132110\" + \" \" + 'banner',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    className: \"jsx-2267132110\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, channel.title), series.length > 0 && __jsx(\"div\", {\n    className: \"jsx-2267132110\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-2267132110\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Series\"), __jsx(PodcastGrid, {\n    channels: series,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), __jsx(\"h2\", {\n    className: \"jsx-2267132110\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Ultimos Podcast\"), __jsx(EpisodeList, {\n    audioClips: audioClips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"2267132110\",\n    __self: this\n  }, \"header.jsx-2267132110{color:#fff;background:#8756ca;padding:15px;text-align:center;}.banner.jsx-2267132110{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}.channels.jsx-2267132110{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}a.channel.jsx-2267132110{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-2267132110 img.jsx-2267132110{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h1.jsx-2267132110{font-weight:600;padding:15px;}h2.jsx-2267132110{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js */\"));\n} // export default class channel extends React.Component {\n//   static async getInitialProps({ query, res = {} }){\n//     let idChannel = query.id\n//     try {\n//       let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n//         fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`),\n//         fetch(\n//           `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n//         ),\n//         fetch(\n//           `https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`\n//         ),\n//       ]);\n//       res.statusCode = reqChannel.status;\n//       let dataChannel = await reqChannel.json();\n//       let channel = dataChannel.body.channel\n//       let dataAudios = await reqAudios.json();\n//       let audioClips = dataAudios.body.audio_clips\n//       let dataSeries = await reqSeries.json();\n//       let series = dataSeries.body.channels\n//       return { channel, audioClips, series, statusCode: res.statusCode };\n//     } catch (error) {\n//       return {channel: null, audioClip: null, series: null, statusCode: res.statusCode}\n//     }\n//   }\n//   render() {\n//     const { channel, audioClips, series, statusCode } = this.props\n//     if (statusCode !== 200) {\n//       return <Error statusCode={statusCode} />;\n//     }\n//     return (\n//       <Layout title={`${channel.title} | Podcast`}>\n//         <div\n//           className='banner'\n//           style={{\n//             backgroundImage: `url(${channel.urls.banner_image.original})`,\n//           }}\n//         />\n//         <h1>{channel.title}</h1>\n//         {series.length > 0 && \n//           <div>\n//             <h2>Series</h2>\n//             <PodcastGrid channels={series} />\n//           </div>\n//         }\n//         <h2>Ultimos Podcast</h2>\n//         <EpisodeList audioClips={audioClips} />\n//         <style jsx>{`\n//           header {\n//             color: #fff;\n//             background: #8756ca;\n//             padding: 15px;\n//             text-align: center;\n//           }\n//           .banner {\n//             width: 100%;\n//             padding-bottom: 25%;\n//             background-position: 50% 50%;\n//             background-size: cover;\n//             background-color: #aaa;\n//           }\n//           .channels {\n//             display: grid;\n//             grid-gap: 15px;\n//             padding: 15px;\n//             grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n//           }\n//           a.channel {\n//             display: block;\n//             margin-bottom: 0.5em;\n//             color: #333;\n//             text-decoration: none;\n//           }\n//           .channel img {\n//             border-radius: 3px;\n//             box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n//             width: 100%;\n//           }\n//           h1 {\n//             font-weight: 600;\n//             padding: 15px;\n//           }\n//           h2 {\n//             padding: 5px;\n//             font-size: 0.9em;\n//             font-weight: 600;\n//             margin: 0;\n//             text-align: center;\n//           }\n//         `}</style>\n//       </Layout>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js"],"names":["Layout","EpisodeList","PodcastGrid","Error","channel","audioClips","series","statusCode","title","backgroundImage","urls","banner_image","original","length"],"mappings":";;;;AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAqCA,eAAe,SAASC,OAAT,OAA8D;AAAA,MAA3CA,OAA2C,QAA3CA,OAA2C;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC3E,MAAIA,UAAU,KAAK,GAAnB,EAAwB;AACtB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,YAAKH,OAAO,CAACI,KAAb,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,gBAASL,OAAO,CAACM,IAAR,CAAaC,YAAb,CAA0BC,QAAnC;AADV,KAFT;AAAA,wCACY,QADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,OAAO,CAACI,KAAb,CARF,EAUGF,MAAM,CAACO,MAAP,GAAgB,CAAhB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEP,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXJ,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAjBF,EAkBE,MAAC,WAAD;AAAa,IAAA,UAAU,EAAED,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF;AAAA;AAAA;AAAA,knTADF;AAoED,C,CAGD;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import 'isomorphic-fetch';\nimport Layout from '../components/Layout'\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error'\n\nexport async function getServerSideProps(context) {\n  let idChannel = context.query.id;\n  try {\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n      ),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`\n      ),\n    ]);\n\n    context.res.statusCode = reqChannel.status;\n\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n\n    return { channel, audioClips, series, statusCode: res.statusCode };\n  } catch (error) {\n    return {\n      channel: null,\n      audioClip: null,\n      series: null,\n      statusCode: res.statusCode,\n    };\n  }\n}\n\nexport default function channel({ channel, audioClips, series, statusCode }) {\n  if (statusCode !== 200) {\n    return <Error statusCode={statusCode} />;\n  }\n\n  return (\n    <Layout title={`${channel.title} | Podcast`}>\n      <div\n        className='banner'\n        style={{\n          backgroundImage: `url(${channel.urls.banner_image.original})`,\n        }}\n      />\n\n      <h1>{channel.title}</h1>\n\n      {series.length > 0 && (\n        <div>\n          <h2>Series</h2>\n          <PodcastGrid channels={series} />\n        </div>\n      )}\n\n      <h2>Ultimos Podcast</h2>\n      <EpisodeList audioClips={audioClips} />\n\n      <style jsx>{`\n        header {\n          color: #fff;\n          background: #8756ca;\n          padding: 15px;\n          text-align: center;\n        }\n\n        .banner {\n          width: 100%;\n          padding-bottom: 25%;\n          background-position: 50% 50%;\n          background-size: cover;\n          background-color: #aaa;\n        }\n\n        .channels {\n          display: grid;\n          grid-gap: 15px;\n          padding: 15px;\n          grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n        }\n        a.channel {\n          display: block;\n          margin-bottom: 0.5em;\n          color: #333;\n          text-decoration: none;\n        }\n        .channel img {\n          border-radius: 3px;\n          box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n          width: 100%;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n        h2 {\n          padding: 5px;\n          font-size: 0.9em;\n          font-weight: 600;\n          margin: 0;\n          text-align: center;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n\n\n// export default class channel extends React.Component {\n\n//   static async getInitialProps({ query, res = {} }){\n//     let idChannel = query.id\n\n//     try {\n//       let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n//         fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`),\n//         fetch(\n//           `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n//         ),\n//         fetch(\n//           `https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`\n//         ),\n//       ]);\n\n//       res.statusCode = reqChannel.status;\n          \n//       let dataChannel = await reqChannel.json();\n//       let channel = dataChannel.body.channel\n  \n//       let dataAudios = await reqAudios.json();\n//       let audioClips = dataAudios.body.audio_clips\n  \n//       let dataSeries = await reqSeries.json();\n//       let series = dataSeries.body.channels\n  \n//       return { channel, audioClips, series, statusCode: res.statusCode };\n//     } catch (error) {\n//       return {channel: null, audioClip: null, series: null, statusCode: res.statusCode}\n//     }\n\n//   }\n\n//   render() {\n//     const { channel, audioClips, series, statusCode } = this.props\n    \n//     if (statusCode !== 200) {\n//       return <Error statusCode={statusCode} />;\n//     }\n    \n//     return (\n//       <Layout title={`${channel.title} | Podcast`}>\n\n//         <div\n//           className='banner'\n//           style={{\n//             backgroundImage: `url(${channel.urls.banner_image.original})`,\n//           }}\n//         />\n\n//         <h1>{channel.title}</h1>\n\n//         {series.length > 0 && \n//           <div>\n//             <h2>Series</h2>\n//             <PodcastGrid channels={series} />\n//           </div>\n//         }\n\n//         <h2>Ultimos Podcast</h2>\n//         <EpisodeList audioClips={audioClips} />\n\n//         <style jsx>{`\n//           header {\n//             color: #fff;\n//             background: #8756ca;\n//             padding: 15px;\n//             text-align: center;\n//           }\n\n//           .banner {\n//             width: 100%;\n//             padding-bottom: 25%;\n//             background-position: 50% 50%;\n//             background-size: cover;\n//             background-color: #aaa;\n//           }\n\n//           .channels {\n//             display: grid;\n//             grid-gap: 15px;\n//             padding: 15px;\n//             grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n//           }\n//           a.channel {\n//             display: block;\n//             margin-bottom: 0.5em;\n//             color: #333;\n//             text-decoration: none;\n//           }\n//           .channel img {\n//             border-radius: 3px;\n//             box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n//             width: 100%;\n//           }\n//           h1 {\n//             font-weight: 600;\n//             padding: 15px;\n//           }\n//           h2 {\n//             padding: 5px;\n//             font-size: 0.9em;\n//             font-weight: 600;\n//             margin: 0;\n//             text-align: center;\n//           }\n//         `}</style>\n\n//       </Layout>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}