{"ast":null,"code":"import { useState } from \"react\";\nexport const useLocalStorage = (key, initialValue) => {\n  const {\n    0: storedValue,\n    1: setStoredValue\n  } = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item !== null ? JSON.parse(item) : initialValue;\n    } catch (e) {\n      return initialValue;\n    }\n  });\n\n  const setLocalStorage = value => {\n    try {\n      const itemValue = () => {\n        if (typeof value === String) {\n          return value;\n        }\n\n        return JSON.stringify(value);\n      };\n\n      window.localStorage.setItem(key, itemValue());\n      setStoredValue(value);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return [storedValue, setLocalStorage];\n};","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/hooks/useLocalStorage.js"],"names":["useState","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","e","setLocalStorage","value","itemValue","String","stringify","setItem","console","log"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AACpD,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACF,YAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,GAA5B,CAAb;AACA,aAAQI,IAAI,KAAK,IAAT,GAAgBI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAhB,GAAmCH,YAA3C;AACD,KAHD,CAGE,OAAMS,CAAN,EAAS;AACT,aAAOT,YAAP;AACD;AACF,GAP6C,CAA9C;;AASA,QAAMU,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAI;AACF,YAAMC,SAAS,GAAG,MAAM;AACtB,YAAG,OAAOD,KAAP,KAAiBE,MAApB,EAA4B;AAC1B,iBAAOF,KAAP;AACD;;AACD,eAAOJ,IAAI,CAACO,SAAL,CAAeH,KAAf,CAAP;AACD,OALD;;AAOAP,MAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4BhB,GAA5B,EAAiCa,SAAS,EAA1C;AACAV,MAAAA,cAAc,CAACS,KAAD,CAAd;AACD,KAVD,CAUE,OAAOF,CAAP,EAAU;AACVO,MAAAA,OAAO,CAACC,GAAR,CAAYR,CAAZ;AAED;AACF,GAfD;;AAgBA,SAAO,CAACR,WAAD,EAAcS,eAAd,CAAP;AACD,CA3BM","sourcesContent":["import { useState } from \"react\"\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key)\n      return (item !== null ? JSON.parse(item) : initialValue)\n    } catch(e) {\n      return initialValue\n    }\n  })\n\n  const setLocalStorage = value => {\n    try {\n      const itemValue = () => {\n        if(typeof value === String) {\n          return value\n        }\n        return JSON.stringify(value)\n      }\n\n      window.localStorage.setItem(key, itemValue())\n      setStoredValue(value)\n    } catch (e) {\n      console.log(e);\n      \n    }\n  }\n  return [storedValue, setLocalStorage]\n}"]},"metadata":{},"sourceType":"module"}