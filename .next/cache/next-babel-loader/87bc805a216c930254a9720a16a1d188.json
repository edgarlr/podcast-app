{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel]/[podcast].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport { useContext, useState, useEffect } from 'react';\nimport { PlayerContext } from '../../contexts/PlayerContext';\nimport { useRouter } from 'next/router';\nimport { AudioPlayer } from '../../components/AudioPlayer';\nexport var __N_SSP = true;\nexport default function podcast(_ref) {\n  var audioClips = _ref.audioClips;\n  var router = useRouter();\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useContext = useContext(PlayerContext),\n      SetCurrentIndex = _useContext.SetCurrentIndex,\n      SetPlaylist = _useContext.SetPlaylist,\n      SetCurrent = _useContext.SetCurrent,\n      playlist = _useContext.playlist;\n\n  useEffect(function () {\n    var setContextState = function setContextState() {\n      var i;\n      return _regeneratorRuntime.async(function setContextState$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (playlist === null) {\n                SetPlaylist(audioClips);\n              }\n\n              i = 0;\n\n            case 2:\n              if (!(i < audioClips.length)) {\n                _context.next = 12;\n                break;\n              }\n\n              if (!(router.query.podcast == audioClips[i].id)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(SetCurrentIndex(i));\n\n            case 6:\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(SetCurrent(audioClips[i]));\n\n            case 8:\n              setLoading(false);\n\n            case 9:\n              i++;\n              _context.next = 2;\n              break;\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    setContextState();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, \"...\");\n  }\n\n  return __jsx(AudioPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel]/[podcast].js"],"names":["useContext","useState","useEffect","PlayerContext","useRouter","AudioPlayer","podcast","audioClips","router","loading","setLoading","SetCurrentIndex","SetPlaylist","SetCurrent","playlist","setContextState","i","length","query","id"],"mappings":";;;;AAAA,OAAO,kBAAP;AACA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAeA,eAAe,SAASC,OAAT,OAAiC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC9C,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAD8C,kBAEhBH,QAAQ,CAAC,IAAD,CAFQ;AAAA,MAEvCQ,OAFuC;AAAA,MAE9BC,UAF8B;;AAAA,oBAS1CV,UAAU,CAACG,aAAD,CATgC;AAAA,MAK5CQ,eAL4C,eAK5CA,eAL4C;AAAA,MAM5CC,WAN4C,eAM5CA,WAN4C;AAAA,MAO5CC,UAP4C,eAO5CA,UAP4C;AAAA,MAQ5CC,QAR4C,eAQ5CA,QAR4C;;AAW9CZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB,kBAAID,QAAQ,KAAK,IAAjB,EAAuB;AACrBF,gBAAAA,WAAW,CAACL,UAAD,CAAX;AACD;;AACQS,cAAAA,CAJa,GAIT,CAJS;;AAAA;AAAA,oBAINA,CAAC,GAAGT,UAAU,CAACU,MAJT;AAAA;AAAA;AAAA;;AAAA,oBAKhBT,MAAM,CAACU,KAAP,CAAaZ,OAAb,IAAwBC,UAAU,CAACS,CAAD,CAAV,CAAcG,EALtB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAMZR,eAAe,CAACK,CAAD,CANH;;AAAA;AAAA;AAAA,+CAOZH,UAAU,CAACN,UAAU,CAACS,CAAD,CAAX,CAPE;;AAAA;AAQlBN,cAAAA,UAAU,CAAC,KAAD,CAAV;;AARkB;AAIiBM,cAAAA,CAAC,EAJlB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB;;AAYAD,IAAAA,eAAe;AAChB,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIN,OAAJ,EAAa;AACX,WAAO;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD","sourcesContent":["import 'isomorphic-fetch';\nimport { useContext, useState, useEffect } from 'react';\nimport { PlayerContext } from '../../contexts/PlayerContext';\nimport { useRouter } from 'next/router';\nimport { AudioPlayer } from '../../components/AudioPlayer';\n\nexport async function getServerSideProps(context) {\n  let idChannel = context.query.channel;\n\n  let req = await fetch(\n    `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n    );\n    \n  let data = await req.json()\n  let audioClips = data.body.audio_clips;\n  \n  return {props: {audioClips}}\n}\n\nexport default function podcast({ audioClips }) {\n  const router = useRouter();\n  const [loading, setLoading] = useState(true)\n\n  const {\n    SetCurrentIndex,\n    SetPlaylist,\n    SetCurrent,\n    playlist\n  } = useContext(PlayerContext);\n\n  useEffect(() => {\n    const setContextState = async () => {\n      if (playlist === null) {\n        SetPlaylist(audioClips)\n      }\n      for (let i = 0; i < audioClips.length; i++) {\n        if (router.query.podcast == audioClips[i].id) {\n          await SetCurrentIndex(i)\n          await SetCurrent(audioClips[i])\n          setLoading(false)\n        }\n      }\n    }\n    setContextState()\n  }, [])\n  \n  if (loading) {\n    return <div className=\"modal\">...</div>\n  }\n  \n  return (\n    <AudioPlayer />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}