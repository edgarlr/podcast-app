{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/contexts/PlayerState.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer } from 'react';\nimport { PlayerContext } from './PlayerContext';\nimport { PlayerReducer } from './PlayerReducer';\nimport { SET_CURRENT_SONG, TOGGLE_PLAYING } from './types';\nexport const PlayerState = props => {\n  const initialState = {\n    currentSong: 0,\n    // songs: songsArr,\n    playing: false,\n    audio: null\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(PlayerReducer, initialState);\n\n  const togglePlaying = () => dispatch({\n    type: TOGGLE_PLAYING,\n    data: state.playing ? false : true\n  });\n\n  const SetCurrent = id => dispatch({\n    type: SET_CURRENT_SONG,\n    data: id\n  });\n\n  return __jsx(PlayerContext.Provider, {\n    value: {\n      currentSong: state.currentSong,\n      playing: state.playing,\n      audio: state.audio,\n      SetCurrent,\n      togglePlaying\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/contexts/PlayerState.js"],"names":["useReducer","PlayerContext","PlayerReducer","SET_CURRENT_SONG","TOGGLE_PLAYING","PlayerState","props","initialState","currentSong","playing","audio","state","dispatch","togglePlaying","type","data","SetCurrent","id","children"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,SAA/C;AAGA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAClC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,WAAW,EAAE,CADM;AAEnB;AACAC,IAAAA,OAAO,EAAE,KAHU;AAInBC,IAAAA,KAAK,EAAE;AAJY,GAArB;AAOA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,UAAU,CAACE,aAAD,EAAgBK,YAAhB,CAApC;;AAEA,QAAMM,aAAa,GAAG,MAAMD,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEV,cAAP;AAAuBW,IAAAA,IAAI,EAAEJ,KAAK,CAACF,OAAN,GAAgB,KAAhB,GAAwB;AAArD,GAAD,CAApC;;AAEA,QAAMO,UAAU,GAAGC,EAAE,IAAIL,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEX,gBAAP;AAAyBY,IAAAA,IAAI,EAAEE;AAA/B,GAAD,CAAjC;;AAGA,SACE,MAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,WAAW,EAAEG,KAAK,CAACH,WADd;AAELC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFV;AAGLC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAHR;AAILM,MAAAA,UAJK;AAKLH,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGP,KAAK,CAACY,QATT,CADF;AAaD,CA5BM","sourcesContent":["import {useReducer} from 'react';\nimport {PlayerContext} from './PlayerContext'\nimport {PlayerReducer} from './PlayerReducer'\nimport {SET_CURRENT_SONG, TOGGLE_PLAYING} from './types'\n\n\nexport const PlayerState = props => {\n  const initialState = {\n    currentSong: 0,\n    // songs: songsArr,\n    playing: false,\n    audio: null,\n  }\n\n  const [state, dispatch] = useReducer(PlayerReducer, initialState)\n\n  const togglePlaying = () => dispatch({type: TOGGLE_PLAYING, data: state.playing ? false : true})\n\n  const SetCurrent = id => dispatch({type: SET_CURRENT_SONG, data: id })\n  \n  \n  return (\n    <PlayerContext.Provider \n      value={{ \n        currentSong: state.currentSong,\n        playing: state.playing,\n        audio: state.audio,\n        SetCurrent,\n        togglePlaying,\n\n      }}>\n      {props.children}\n    </PlayerContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}