{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from 'next/error';\nexport default class extends React.Component {\n  static async getInitialProps() {\n    try {\n      let req = await fetch('https://api.audioboom.com/channels/recommended?api_version=2');\n      let {\n        body: channels\n      } = await req.json();\n      return {\n        channels,\n        statusCode: 201\n      };\n    } catch (error) {\n      return {\n        channels: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channels,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return __jsx(Layout, {\n      title: \"Podcast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, __jsx(PodcastGrid, {\n      channels: channels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/index.js"],"names":["Layout","PodcastGrid","Error","React","Component","getInitialProps","req","fetch","body","channels","json","statusCode","error","render","props"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA8B;AAE3C,eAAaC,eAAb,GAA+B;AAC7B,QAAI;AACF,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,8DAAD,CAArB;AACA,UAAI;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAqB,MAAMH,GAAG,CAACI,IAAJ,EAA/B;AAEA,aAAO;AAACD,QAAAA,QAAD;AAAWE,QAAAA,UAAU,EAAE;AAAvB,OAAP;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACd,aAAO;AAAEH,QAAAA,QAAQ,EAAE,IAAZ;AAAkBE,QAAAA,UAAU,EAAE;AAA9B,OAAP;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAA2B,KAAKG,KAAtC;;AAEA,QAAGH,UAAU,KAAK,GAAlB,EAAuB;AACrB,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAzB0C","sourcesContent":["import 'isomorphic-fetch'\nimport Layout from '../components/Layout';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from 'next/error'\n\nexport default class extends React.Component {\n\n  static async getInitialProps() {\n    try {\n      let req = await fetch('https://api.audioboom.com/channels/recommended?api_version=2')\n      let { body: channels } = await req.json();\n  \n      return {channels, statusCode: 201}\n    } catch (error) {\n      return { channels: null, statusCode: 503}\n    }\n  }\n\n  render() {\n    const { channels, statusCode } = this.props;\n\n    if(statusCode !== 200) {\n      return <Error statusCode={statusCode} />\n    }\n\n    return (\n      <Layout title='Podcast'>\n        <PodcastGrid channels={channels} />\n      </Layout>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}