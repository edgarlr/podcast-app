{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport { PlayerContext } from '../contexts/PlayerContext';\nimport { MdVolumeUp } from 'react-icons/md';\nexport default function EpisodeList(_ref) {\n  var _this = this;\n\n  var audioClips = _ref.audioClips;\n\n  var _useContext = useContext(PlayerContext),\n      SetCurrentIndex = _useContext.SetCurrentIndex,\n      currentSongIndex = _useContext.currentSongIndex,\n      SetCurrent = _useContext.SetCurrent,\n      SetPlaylist = _useContext.SetPlaylist;\n\n  var _useState = useState(null),\n      playlist = _useState[0],\n      setPlaylist = _useState[1];\n\n  var router = useRouter();\n\n  var onPodcastClick = function onPodcastClick(podcast, channelId, index) {\n    SetPlaylist(playlist);\n    SetCurrentIndex(index);\n    SetCurrent(podcast);\n    var podcastId = podcast.id;\n    router.push({\n      pathname: \"/[channel]/[podcast]\",\n      query: {\n        podcastId: podcastId\n      },\n      as: \"/\".concat(channelId, \"/\").concat(podcastId)\n    }, \"/\".concat(channelId, \"/\").concat(podcastId));\n    console.log(router.query);\n  };\n\n  useEffect(function () {\n    var playlistArray = audioClips.map(function (clip) {\n      return clip.id;\n    });\n    setPlaylist(playlistArray);\n  }, []);\n\n  var _useState2 = useState(audioClips),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var _useState3 = useState('uploaded_at'),\n      sortType = _useState3[0],\n      setSortType = _useState3[1];\n\n  var _useState4 = useState(false),\n      isReversed = _useState4[0],\n      setIsReversed = _useState4[1];\n\n  useEffect(function () {\n    var types = {\n      latest: 'upload_at',\n      oldest: 'upload_at',\n      popular: 'counts'\n    };\n\n    var sorted = function sorted(key, list, isReversed) {\n      if (isReversed) {\n        return _toConsumableArray(list).sort(function (a, b) {\n          return a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0;\n        }).reverse();\n      } else if (key === 'counts') {\n        return _toConsumableArray(list).sort(function (a, b) {\n          return a[key].plays > b[key].plays ? 1 : a[key].plays < b[key].plays ? -1 : 0;\n        });\n      }\n\n      return _toConsumableArray(list).sort(function (a, b) {\n        return a[key] < b[key] ? 1 : a[key] > b[key] ? -1 : 0;\n      });\n    };\n\n    setList(sorted(sortType, list, isReversed));\n  }, [sortType]);\n\n  var handleFilterClick = function handleFilterClick(type) {\n    if (type === 'latest') {\n      setSortType('uploaded_at');\n      setIsReversed(false);\n    } else if (type === 'popular') {\n      setSortType('counts');\n      setIsReversed(false);\n    } else {\n      setSortType('uploaded_at');\n      setIsReversed(true);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-794169196\" + \" \" + 'episodes-header',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-794169196\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"\".concat(audioClips.length, \" EPISODIOS\")), __jsx(FiltersIcon, {\n    handleFilterClick: handleFilterClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), list.map(function (clip, index) {\n    return __jsx(\"div\", {\n      onClick: function onClick() {\n        return onPodcastClick(clip, clip.channel.id, index);\n      },\n      key: clip.id,\n      className: \"jsx-794169196\" + \" \" + ('episode ' + (currentSongIndex === index ? 'active' : '') || \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      className: \"jsx-794169196\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, clip.title), __jsx(\"div\", {\n      className: \"jsx-794169196\" + \" \" + 'meta',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, Math.ceil(clip.duration / 60), \" minutes\"), __jsx(\"p\", {\n      className: \"jsx-794169196\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, clip.title), __jsx(\"div\", {\n      className: \"jsx-794169196\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, clip.counts.plays, \" Plays\"), currentSongIndex === index && __jsx(\"span\", {\n      className: \"jsx-794169196\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(MdVolumeUp, {\n      size: \"2em\",\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    })));\n  }), __jsx(_JSXStyle, {\n    id: \"794169196\",\n    __self: this\n  }, \".episodes-header.jsx-794169196{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:30px 0;text-align:left;border-bottom:1px solid #e2e2e2;}h3.jsx-794169196{font-size:12px;font-weight:600;margin:0;}.episode.jsx-794169196{display:block;-webkit-text-decoration:none;text-decoration:none;margin:0 0.6em;padding:16px 0;border-bottom:1px solid #e2e2e2;cursor:pointer;}.active.jsx-794169196{background:black;color:white;margin:0;padding:16px 1em;border-bottom:none;border-radius:20px;position:relative;text-align:left;}.active.jsx-794169196 h2.jsx-794169196,.active.jsx-794169196 p.jsx-794169196{width:70%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}.active.jsx-794169196 span.jsx-794169196{position:absolute;right:20px;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);}.episode.jsx-794169196:hover{color:#000;}h2.jsx-794169196{margin:16px 0;font-size:16px;}.episode.jsx-794169196 .meta.jsx-794169196{color:#979797;font-size:12px;margin-bottom:8px;}p.jsx-794169196{color:#979797;font-size:12px;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUdrQixBQUd3QixBQVFFLEFBS0QsQUFRRyxBQVdQLEFBTVEsQUFNUCxBQUdHLEFBSUEsQUFLQSxVQXZCSyxDQVlyQixHQS9CdUIsQUFrQ04sQUFJQSxBQUtBLENBaERDLEVBYUosQ0FpQkQsV0FoQkYsQUFXTyxBQU1SLEFBU1YsQUFJb0IsQUFLVCxFQWhEQSxNQStCa0IsQ0FqQlYsQUFtQ25CLEVBaERBLEtBd0J5QixFQW1CekIsUUE3QnFCLFNBVkosSUFxQmpCLE1BbkNnQyxBQXlCWCxLQVZKLGNBV0csQ0FWYyxpQkFXaEIsZUFWRCxDQVdqQixHQWFBLFdBdkJBLGdEQWpCcUIsNkZBQ0osZUFDQyxnQkFDZ0IsZ0NBQ2xDIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGV9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCBGaWx0ZXJzSWNvbiBmcm9tICcuL0ZpbHRlcnNJY29uJztcbmltcG9ydCB7UGxheWVyQ29udGV4dH0gZnJvbSAnLi4vY29udGV4dHMvUGxheWVyQ29udGV4dCdcbmltcG9ydCB7TWRWb2x1bWVVcH0gZnJvbSAncmVhY3QtaWNvbnMvbWQnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVwaXNvZGVMaXN0ICh7YXVkaW9DbGlwc30pIHtcbiAgY29uc3QgeyBTZXRDdXJyZW50SW5kZXgsIGN1cnJlbnRTb25nSW5kZXgsIFNldEN1cnJlbnQsIFNldFBsYXlsaXN0fSA9IHVzZUNvbnRleHQoUGxheWVyQ29udGV4dClcbiAgY29uc3QgW3BsYXlsaXN0LCBzZXRQbGF5bGlzdF0gPSB1c2VTdGF0ZShudWxsKTtcblxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICBjb25zdCBvblBvZGNhc3RDbGljayA9IChwb2RjYXN0LCBjaGFubmVsSWQsIGluZGV4KSA9PiB7XG4gICAgU2V0UGxheWxpc3QocGxheWxpc3QpXG4gICAgU2V0Q3VycmVudEluZGV4KGluZGV4KVxuICAgIFNldEN1cnJlbnQocG9kY2FzdClcbiAgICBjb25zdCBwb2RjYXN0SWQgPSBwb2RjYXN0LmlkXG5cbiAgICByb3V0ZXIucHVzaChcbiAgICAgIHtcbiAgICAgICAgcGF0aG5hbWU6IGAvW2NoYW5uZWxdL1twb2RjYXN0XWAsXG4gICAgICAgIHF1ZXJ5OiB7IHBvZGNhc3RJZDogcG9kY2FzdElkIH0sXG4gICAgICAgIGFzOiBgLyR7Y2hhbm5lbElkfS8ke3BvZGNhc3RJZH1gLFxuICAgICAgfSxcbiAgICAgIGAvJHtjaGFubmVsSWR9LyR7cG9kY2FzdElkfWBcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKHJvdXRlci5xdWVyeSk7XG4gICAgXG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHBsYXlsaXN0QXJyYXkgPSBhdWRpb0NsaXBzLm1hcChjbGlwID0+IGNsaXAuaWQpXG4gICAgc2V0UGxheWxpc3QocGxheWxpc3RBcnJheSlcbiAgfSwgW10pXG5cbiAgY29uc3QgW2xpc3QsIHNldExpc3RdID0gdXNlU3RhdGUoYXVkaW9DbGlwcylcblxuICBjb25zdCBbc29ydFR5cGUsIHNldFNvcnRUeXBlXSA9IHVzZVN0YXRlKCd1cGxvYWRlZF9hdCcpXG4gIGNvbnN0IFtpc1JldmVyc2VkLCBzZXRJc1JldmVyc2VkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBcbiAgdXNlRWZmZWN0KCgpID0+IHsgXG4gICAgY29uc3QgdHlwZXMgPSB7XG4gICAgICBsYXRlc3Q6ICd1cGxvYWRfYXQnLFxuICAgICAgb2xkZXN0OiAndXBsb2FkX2F0JyxcbiAgICAgIHBvcHVsYXI6ICdjb3VudHMnXG4gICAgfVxuXG4gICAgY29uc3Qgc29ydGVkID0gKGtleSwgbGlzdCwgaXNSZXZlcnNlZCkgPT4ge1xuICAgICAgaWYgKGlzUmV2ZXJzZWQpIHtcbiAgICAgICAgcmV0dXJuIFsuLi5saXN0XS5zb3J0KChhLGIpID0+IChhW2tleV0gPiBiW2tleV0gPyAxIDogYVtrZXldIDwgYltrZXldID8gLTEgOiAwKSkucmV2ZXJzZSgpXG4gICAgICB9XG4gICAgICBlbHNlIGlmIChrZXkgPT09ICdjb3VudHMnKSB7XG4gICAgICAgIHJldHVybiBbLi4ubGlzdF0uc29ydCgoYSxiKSA9PiAoYVtrZXldLnBsYXlzID4gYltrZXldLnBsYXlzID8gMSA6IGFba2V5XS5wbGF5cyA8IGJba2V5XS5wbGF5cyA/IC0xIDogMCkpXG4gICAgICB9XG4gICAgICByZXR1cm4gWy4uLmxpc3RdLnNvcnQoKGEsYikgPT4gKGFba2V5XSA8IGJba2V5XSA/IDEgOiBhW2tleV0gPiBiW2tleV0gPyAtMSA6IDApKVxuICAgIH1cbiAgICBcbiAgICBzZXRMaXN0KHNvcnRlZChzb3J0VHlwZSwgbGlzdCwgaXNSZXZlcnNlZCkpO1xuICB9LCBbc29ydFR5cGVdKVxuXG4gIGNvbnN0IGhhbmRsZUZpbHRlckNsaWNrID0gKHR5cGUpID0+IHtcbiAgICBpZiAodHlwZSA9PT0gJ2xhdGVzdCcpIHtcbiAgICAgIHNldFNvcnRUeXBlKCd1cGxvYWRlZF9hdCcpXG4gICAgICBzZXRJc1JldmVyc2VkKGZhbHNlKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZSA9PT0gJ3BvcHVsYXInKSB7XG4gICAgICBzZXRTb3J0VHlwZSgnY291bnRzJyk7XG4gICAgICBzZXRJc1JldmVyc2VkKGZhbHNlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBzZXRTb3J0VHlwZSgndXBsb2FkZWRfYXQnKTtcbiAgICAgIHNldElzUmV2ZXJzZWQodHJ1ZSk7XG4gICAgfVxuICB9XG5cblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nZXBpc29kZXMtaGVhZGVyJz5cbiAgICAgICAgPGgzPntgJHthdWRpb0NsaXBzLmxlbmd0aH0gRVBJU09ESU9TYH08L2gzPlxuICAgICAgICA8RmlsdGVyc0ljb24gaGFuZGxlRmlsdGVyQ2xpY2s9e2hhbmRsZUZpbHRlckNsaWNrfSAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHtsaXN0Lm1hcCgoY2xpcCwgaW5kZXgpID0+IChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT17J2VwaXNvZGUgJyArIChjdXJyZW50U29uZ0luZGV4ID09PSBpbmRleCA/ICdhY3RpdmUnIDogJycpfVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uUG9kY2FzdENsaWNrKGNsaXAsIGNsaXAuY2hhbm5lbC5pZCwgaW5kZXgpfVxuICAgICAgICAgIGtleT17Y2xpcC5pZH1cbiAgICAgICAgPlxuICAgICAgICAgIDxoMj57Y2xpcC50aXRsZX08L2gyPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtZXRhJz57TWF0aC5jZWlsKGNsaXAuZHVyYXRpb24gLyA2MCl9IG1pbnV0ZXM8L2Rpdj5cbiAgICAgICAgICA8cD57Y2xpcC50aXRsZX08L3A+XG4gICAgICAgICAgPGRpdj57Y2xpcC5jb3VudHMucGxheXN9IFBsYXlzPC9kaXY+XG4gICAgICAgICAge2N1cnJlbnRTb25nSW5kZXggPT09IGluZGV4ICYmIChcbiAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICA8TWRWb2x1bWVVcCBzaXplPScyZW0nIGNvbG9yPSd3aGl0ZScgLz5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICkpfVxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5lcGlzb2Rlcy1oZWFkZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgcGFkZGluZzogMzBweCAwO1xuICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMmUyZTI7XG4gICAgICAgIH1cbiAgICAgICAgaDMge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgICAuZXBpc29kZSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogMCAwLjZlbTtcbiAgICAgICAgICBwYWRkaW5nOiAxNnB4IDA7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMmUyZTI7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICAgIC5hY3RpdmUge1xuICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrO1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgcGFkZGluZzogMTZweCAxZW07XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB9XG4gICAgICAgIC5hY3RpdmUgaDIsXG4gICAgICAgIC5hY3RpdmUgcCB7XG4gICAgICAgICAgd2lkdGg6IDcwJTtcbiAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAgIH1cbiAgICAgICAgLmFjdGl2ZSBzcGFuIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICB9XG4gICAgICAgIC5lcGlzb2RlOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgfVxuICAgICAgICBoMiB7XG4gICAgICAgICAgbWFyZ2luOiAxNnB4IDA7XG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICB9XG4gICAgICAgIC5lcGlzb2RlIC5tZXRhIHtcbiAgICAgICAgICBjb2xvcjogIzk3OTc5NztcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgICAgICB9XG4gICAgICAgIHAge1xuICAgICAgICAgIGNvbG9yOiAjOTc5Nzk3O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js"],"names":["useContext","useEffect","useState","useRouter","FiltersIcon","PlayerContext","MdVolumeUp","EpisodeList","audioClips","SetCurrentIndex","currentSongIndex","SetCurrent","SetPlaylist","playlist","setPlaylist","router","onPodcastClick","podcast","channelId","index","podcastId","id","push","pathname","query","as","console","log","playlistArray","map","clip","list","setList","sortType","setSortType","isReversed","setIsReversed","types","latest","oldest","popular","sorted","key","sort","a","b","reverse","plays","handleFilterClick","type","length","channel","title","Math","ceil","duration","counts"],"mappings":"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","sourcesContent":["import {useContext, useEffect, useState} from 'react'\nimport {useRouter} from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport {PlayerContext} from '../contexts/PlayerContext'\nimport {MdVolumeUp} from 'react-icons/md'\n\nexport default function EpisodeList ({audioClips}) {\n  const { SetCurrentIndex, currentSongIndex, SetCurrent, SetPlaylist} = useContext(PlayerContext)\n  const [playlist, setPlaylist] = useState(null);\n\n  const router = useRouter();\n\n  const onPodcastClick = (podcast, channelId, index) => {\n    SetPlaylist(playlist)\n    SetCurrentIndex(index)\n    SetCurrent(podcast)\n    const podcastId = podcast.id\n\n    router.push(\n      {\n        pathname: `/[channel]/[podcast]`,\n        query: { podcastId: podcastId },\n        as: `/${channelId}/${podcastId}`,\n      },\n      `/${channelId}/${podcastId}`\n    );\n    console.log(router.query);\n    \n  }\n\n  useEffect(() => {\n    const playlistArray = audioClips.map(clip => clip.id)\n    setPlaylist(playlistArray)\n  }, [])\n\n  const [list, setList] = useState(audioClips)\n\n  const [sortType, setSortType] = useState('uploaded_at')\n  const [isReversed, setIsReversed] = useState(false)\n  \n  useEffect(() => { \n    const types = {\n      latest: 'upload_at',\n      oldest: 'upload_at',\n      popular: 'counts'\n    }\n\n    const sorted = (key, list, isReversed) => {\n      if (isReversed) {\n        return [...list].sort((a,b) => (a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0)).reverse()\n      }\n      else if (key === 'counts') {\n        return [...list].sort((a,b) => (a[key].plays > b[key].plays ? 1 : a[key].plays < b[key].plays ? -1 : 0))\n      }\n      return [...list].sort((a,b) => (a[key] < b[key] ? 1 : a[key] > b[key] ? -1 : 0))\n    }\n    \n    setList(sorted(sortType, list, isReversed));\n  }, [sortType])\n\n  const handleFilterClick = (type) => {\n    if (type === 'latest') {\n      setSortType('uploaded_at')\n      setIsReversed(false);\n    }\n    else if (type === 'popular') {\n      setSortType('counts');\n      setIsReversed(false);\n    }\n    else {\n      setSortType('uploaded_at');\n      setIsReversed(true);\n    }\n  }\n\n\n  return (\n    <div>\n      <div className='episodes-header'>\n        <h3>{`${audioClips.length} EPISODIOS`}</h3>\n        <FiltersIcon handleFilterClick={handleFilterClick} />\n      </div>\n\n      {list.map((clip, index) => (\n        <div\n          className={'episode ' + (currentSongIndex === index ? 'active' : '')}\n          onClick={() => onPodcastClick(clip, clip.channel.id, index)}\n          key={clip.id}\n        >\n          <h2>{clip.title}</h2>\n          <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n          <p>{clip.title}</p>\n          <div>{clip.counts.plays} Plays</div>\n          {currentSongIndex === index && (\n            <span>\n              <MdVolumeUp size='2em' color='white' />\n            </span>\n          )}\n        </div>\n      ))}\n\n      <style jsx>{`\n        .episodes-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 30px 0;\n          text-align: left;\n          border-bottom: 1px solid #e2e2e2;\n        }\n        h3 {\n          font-size: 12px;\n          font-weight: 600;\n          margin: 0;\n        }\n        .episode {\n          display: block;\n          text-decoration: none;\n          margin: 0 0.6em;\n          padding: 16px 0;\n          border-bottom: 1px solid #e2e2e2;\n          cursor: pointer;\n        }\n        .active {\n          background: black;\n          color: white;\n          margin: 0;\n          padding: 16px 1em;\n          border-bottom: none;\n          border-radius: 20px;\n          position: relative;\n          text-align: left;\n        }\n        .active h2,\n        .active p {\n          width: 70%;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        .active span {\n          position: absolute;\n          right: 20px;\n          top: 50%;\n          transform: translateY(-50%);\n        }\n        .episode:hover {\n          color: #000;\n        }\n        h2 {\n          margin: 16px 0;\n          font-size: 16px;\n        }\n        .episode .meta {\n          color: #979797;\n          font-size: 12px;\n          margin-bottom: 8px;\n        }\n        p {\n          color: #979797;\n          font-size: 12px;\n          margin: 0;\n        }\n      `}</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}