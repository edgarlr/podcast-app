{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_CURRENT_SONG, SET_CURRENT_SONG_INDEX, TOGGLE_PLAYING, SET_PLAYLIST } from './types';\nexport var PlayerReducer = function PlayerReducer(state, action) {\n  switch (action.type) {\n    case SET_CURRENT_SONG:\n      return _objectSpread({}, state, {\n        currentSong: action.data\n      });\n\n    case SET_CURRENT_SONG_INDEX:\n      return _objectSpread({}, state, {\n        currentSongIndex: action.data,\n        playing: true\n      });\n\n    case TOGGLE_PLAYING:\n      return _objectSpread({}, state, {\n        playing: action.data\n      });\n\n    case SET_PLAYLIST:\n      return _objectSpread({}, state, {\n        playlist: action.data\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/contexts/PlayerReducer.js"],"names":["SET_CURRENT_SONG","SET_CURRENT_SONG_INDEX","TOGGLE_PLAYING","SET_PLAYLIST","PlayerReducer","state","action","type","currentSong","data","currentSongIndex","playing","playlist"],"mappings":";;;;;;AAAA,SACEA,gBADF,EAEEC,sBAFF,EAGEC,cAHF,EAIEC,YAJF,QAKO,SALP;AAOA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,gBAAL;AACE,+BACKK,KADL;AAEEG,QAAAA,WAAW,EAAEF,MAAM,CAACG;AAFtB;;AAIF,SAAKR,sBAAL;AACE,+BACKI,KADL;AAEEK,QAAAA,gBAAgB,EAAEJ,MAAM,CAACG,IAF3B;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKT,cAAL;AACE,+BACKG,KADL;AAEEM,QAAAA,OAAO,EAAEL,MAAM,CAACG;AAFlB;;AAIF,SAAKN,YAAL;AACE,+BACKE,KADL;AAEEO,QAAAA,QAAQ,EAAEN,MAAM,CAACG;AAFnB;;AAIF;AACE,aAAOJ,KAAP;AAvBJ;AAyBD,CA1BM","sourcesContent":["import {\n  SET_CURRENT_SONG, \n  SET_CURRENT_SONG_INDEX,\n  TOGGLE_PLAYING, \n  SET_PLAYLIST\n} from './types'\n\nexport const PlayerReducer = (state, action) => {\n  switch (action.type) {\n    case SET_CURRENT_SONG:\n      return {\n        ...state,\n        currentSong: action.data,\n      }\n    case SET_CURRENT_SONG_INDEX:\n      return {\n        ...state,\n        currentSongIndex: action.data,\n        playing: true\n      };\n    case TOGGLE_PLAYING:\n      return {\n        ...state,\n        playing: action.data\n      }\n    case SET_PLAYLIST:\n      return {\n        ...state,\n        playlist: action.data\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}