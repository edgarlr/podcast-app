{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from 'next/error';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channels = _this$props.channels,\n          statusCode = _this$props.statusCode;\n\n      if (statusCode !== 200) {\n        return __jsx(Error, {\n          statusCode: statusCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return __jsx(Layout, {\n        title: \"Podcast\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, __jsx(PodcastGrid, {\n        channels: channels,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var req, _await$req$json, channels;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://api.audioboom.com/channels/recommended?api_version=2'));\n\n            case 3:\n              req = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(req.json());\n\n            case 6:\n              _await$req$json = _context.sent;\n              channels = _await$req$json.body;\n              return _context.abrupt(\"return\", {\n                channels: channels,\n                statusCode: 503\n              });\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                channels: null,\n                statusCode: 503\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/index.js"],"names":["Layout","PodcastGrid","Error","props","channels","statusCode","fetch","req","json","body","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;;;;;;;;;;;;;6BAeW;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,UADX,eACWA,UADX;;AAGP,UAAGA,UAAU,KAAK,GAAlB,EAAuB;AACrB,eAAO,MAAC,KAAD;AAAO,UAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAED,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;;;;;;;;;+CArBmBE,KAAK,CAAC,8DAAD,C;;;AAAjBC,cAAAA,G;;+CAC2BA,GAAG,CAACC,IAAJ,E;;;;AAAnBJ,cAAAA,Q,mBAANK,I;+CAEC;AAACL,gBAAAA,QAAQ,EAARA,QAAD;AAAWC,gBAAAA,UAAU,EAAE;AAAvB,e;;;;;+CAEA;AAAED,gBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,gBAAAA,UAAU,EAAE;AAA9B,e;;;;;;;;;;;;EATgBK,KAAK,CAACC,S","sourcesContent":["import 'isomorphic-fetch'\nimport Layout from '../components/Layout';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from 'next/error'\n\nexport default class extends React.Component {\n\n  static async getInitialProps() {\n    try {\n      let req = await fetch('https://api.audioboom.com/channels/recommended?api_version=2')\n      let { body: channels } = await req.json();\n  \n      return {channels, statusCode: 503}\n    } catch (error) {\n      return { channels: null, statusCode: 503}\n    }\n  }\n\n  render() {\n    const { channels, statusCode } = this.props;\n\n    if(statusCode !== 200) {\n      return <Error statusCode={statusCode} />\n    }\n\n    return (\n      <Layout title='Podcast'>\n        <PodcastGrid channels={channels} />\n      </Layout>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}