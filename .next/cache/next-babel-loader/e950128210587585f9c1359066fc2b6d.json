{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error';\nimport { useState, useEffect, useContext } from 'react';\nimport Header from '../components/Header';\nimport { FavsContext } from '../contexts/FavsContext';\nexport async function getServerSideProps(context) {\n  let idChannel = context.query.channel;\n\n  try {\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`)]);\n    context.res.statusCode = reqChannel.status;\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode: context.res.statusCode\n      }\n    };\n  } catch (error) {\n    return {\n      props: {\n        channel: null,\n        audioClip: null,\n        series: null,\n        statusCode: context.res.statusCode\n      }\n    };\n  }\n}\nexport default function channel({\n  channel,\n  audioClips,\n  series,\n  statusCode\n}) {\n  const {\n    myList,\n    Follow,\n    Unfollow\n  } = useContext(FavsContext);\n  const {\n    0: bannerImage,\n    1: setBannerImage\n  } = useState({});\n  const {\n    0: isFollowed,\n    1: setIsFollowed\n  } = useState(false);\n  useEffect(() => {\n    if (channel.urls.banner_image.original === null) {\n      setBannerImage(channel.urls.logo_image.original);\n    } else {\n      setBannerImage(channel.urls.banner_image.original);\n    }\n\n    console.log(myList.includes('id'));\n  }, []);\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const handleFollowClick = () => {\n    Follow(channel);\n  };\n\n  return __jsx(Layout, {\n    title: `${channel.title} | Podcast`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    headerText: channel.title,\n    nav: true,\n    followed: true,\n    handleFollowClick: handleFollowClick,\n    serie: channel.parent_channel_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-2164519683\" + \" \" + 'content',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: `url(${bannerImage})`\n    },\n    className: \"jsx-2164519683\" + \" \" + 'banner',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: `url(${bannerImage})`\n    },\n    className: \"jsx-2164519683\" + \" \" + 'banner-shadow',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), series.length > 0 && __jsx(\"div\", {\n    className: \"jsx-2164519683\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(PodcastGrid, {\n    channels: series,\n    title: `series de ${channel.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), __jsx(EpisodeList, {\n    audioClips: audioClips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"2164519683\",\n    __self: this\n  }, \".content.jsx-2164519683{padding:0 1.5em;}.banner.jsx-2164519683{margin:24px 0 0;width:100%;background-position:50% 50%;height:120px;border-radius:20px;background-size:cover;background-color:#aaa;position:relative;}.banner-shadow.jsx-2164519683{margin:20px 0 0;position:absolute;width:80%;background-position:50% 50%;height:105px;border-radius:20px;background-size:cover;background-color:#aaa;-webkit-filter:blur(15px);filter:blur(15px);left:50%;-webkit-transform:translate(-50%);-ms-transform:translate(-50%);transform:translate(-50%);z-index:-1;}.channels.jsx-2164519683{display:grid;grid-gap:10px;padding:15px 36px;grid-template-columns:repeat(auto-fill,minmax(145px,1fr));}a.channel.jsx-2164519683{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-2164519683 img.jsx-2164519683{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h1.jsx-2164519683{font-weight:600;padding:15px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL1tjaGFubmVsXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtSGtCLEFBRzJCLEFBR0EsQUFVQSxBQWVILEFBTUMsQUFNSSxBQUtGLGFBaEJGLENBTU0sRUFsQ3RCLEFBR2EsQUFVTyxBQWdDTCxFQUw4QixTQXBDZixBQXlCVixFQWlCcEIsS0FoQ1ksQUFxQkMsVUFwQmlCLENBZWdDLEFBTXZDLFVBL0JSLEdBb0NGLFVBbkNRLENBb0NyQixHQTFCZSxhQUNNLEVBVkcsUUE4QnhCLFFBTkEsQ0Fid0IsS0FWQSxpQkFXQSxLQVZKLGlCQVdBLENBVnBCLDJDQVdXLFNBQ2lCLDBGQUNmLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2VkZ2FybG9wZXovQ29kZS9jb3Vyc2VzL3JlYWN0L25leHQvcG9kY2FzdHMvcGFnZXMvW2NoYW5uZWxdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xuaW1wb3J0IEVwaXNvZGVMaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvRXBpc29kZUxpc3QnO1xuaW1wb3J0IFBvZGNhc3RHcmlkIGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdEdyaWQnO1xuaW1wb3J0IEVycm9yIGZyb20gJy4vX2Vycm9yJztcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSGVhZGVyIGZyb20gJy4uL2NvbXBvbmVudHMvSGVhZGVyJztcbmltcG9ydCB7RmF2c0NvbnRleHR9IGZyb20gJy4uL2NvbnRleHRzL0ZhdnNDb250ZXh0J1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgbGV0IGlkQ2hhbm5lbCA9IGNvbnRleHQucXVlcnkuY2hhbm5lbDtcbiAgdHJ5IHtcbiAgICBsZXQgW3JlcUNoYW5uZWwsIHJlcUF1ZGlvcywgcmVxU2VyaWVzXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfT92ZXJzaW9uPTJgKSxcbiAgICAgIGZldGNoKFxuICAgICAgICBgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHM/dmVyc2lvbj0yYFxuICAgICAgKSxcbiAgICAgIGZldGNoKFxuICAgICAgICBgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHM/dmVyc2lvbj0yYFxuICAgICAgKSxcbiAgICBdKTtcblxuICAgIGNvbnRleHQucmVzLnN0YXR1c0NvZGUgPSByZXFDaGFubmVsLnN0YXR1cztcblxuICAgIGxldCBkYXRhQ2hhbm5lbCA9IGF3YWl0IHJlcUNoYW5uZWwuanNvbigpO1xuICAgIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsO1xuXG4gICAgbGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpO1xuICAgIGxldCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvcy5ib2R5LmF1ZGlvX2NsaXBzO1xuXG4gICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpO1xuICAgIGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgcHJvcHM6IHtcbiAgICAgICAgY2hhbm5lbCxcbiAgICAgICAgYXVkaW9DbGlwcyxcbiAgICAgICAgc2VyaWVzLFxuICAgICAgICBzdGF0dXNDb2RlOiBjb250ZXh0LnJlcy5zdGF0dXNDb2RlLFxuICAgICAgfSxcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB7XG4gICAgICBwcm9wczoge1xuICAgICAgICBjaGFubmVsOiBudWxsLFxuICAgICAgICBhdWRpb0NsaXA6IG51bGwsXG4gICAgICAgIHNlcmllczogbnVsbCxcbiAgICAgICAgc3RhdHVzQ29kZTogY29udGV4dC5yZXMuc3RhdHVzQ29kZSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjaGFubmVsKHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlIH0pIHtcbiAgY29uc3Qge215TGlzdCwgRm9sbG93LCBVbmZvbGxvdyB9ID0gdXNlQ29udGV4dChGYXZzQ29udGV4dClcbiAgY29uc3QgW2Jhbm5lckltYWdlLCBzZXRCYW5uZXJJbWFnZV0gPSB1c2VTdGF0ZSh7fSlcbiAgY29uc3QgW2lzRm9sbG93ZWQsIHNldElzRm9sbG93ZWRdID0gdXNlU3RhdGUoZmFsc2UpXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoY2hhbm5lbC51cmxzLmJhbm5lcl9pbWFnZS5vcmlnaW5hbCA9PT0gbnVsbCkge1xuICAgICAgc2V0QmFubmVySW1hZ2UoY2hhbm5lbC51cmxzLmxvZ29faW1hZ2Uub3JpZ2luYWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRCYW5uZXJJbWFnZShjaGFubmVsLnVybHMuYmFubmVyX2ltYWdlLm9yaWdpbmFsKVxuICAgIH1cblxuICAgIFxuXG4gICAgY29uc29sZS5sb2cobXlMaXN0LmluY2x1ZGVzKCdpZCcpKVxuICB9LCBbXSlcblxuICBpZiAoc3RhdHVzQ29kZSAhPT0gMjAwKSB7XG4gICAgcmV0dXJuIDxFcnJvciBzdGF0dXNDb2RlPXtzdGF0dXNDb2RlfSAvPjtcbiAgfVxuXG5cbiAgY29uc3QgaGFuZGxlRm9sbG93Q2xpY2sgPSAoKSA9PiB7XG4gICAgRm9sbG93KGNoYW5uZWwpXG4gIH1cbiAgXG4gIHJldHVybiAoXG4gICAgPExheW91dCB0aXRsZT17YCR7Y2hhbm5lbC50aXRsZX0gfCBQb2RjYXN0YH0+XG4gICAgICA8SGVhZGVyXG4gICAgICAgIGhlYWRlclRleHQ9e2NoYW5uZWwudGl0bGV9XG4gICAgICAgIG5hdj17dHJ1ZX1cbiAgICAgICAgZm9sbG93ZWQ9e3RydWV9XG4gICAgICAgIGhhbmRsZUZvbGxvd0NsaWNrPXtoYW5kbGVGb2xsb3dDbGlja31cbiAgICAgICAgc2VyaWU9e2NoYW5uZWwucGFyZW50X2NoYW5uZWxfaWR9XG4gICAgICAvPlxuICAgICAgPGRpdiBjbGFzc05hbWU9J2NvbnRlbnQnPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPSdiYW5uZXInXG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogYHVybCgke2Jhbm5lckltYWdlfSlgLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjbGFzc05hbWU9J2Jhbm5lci1zaGFkb3cnXG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHtiYW5uZXJJbWFnZX0pYCxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAge3Nlcmllcy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPFBvZGNhc3RHcmlkXG4gICAgICAgICAgICAgIGNoYW5uZWxzPXtzZXJpZXN9XG4gICAgICAgICAgICAgIHRpdGxlPXtgc2VyaWVzIGRlICR7Y2hhbm5lbC50aXRsZX1gfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cblxuICAgICAgICA8RXBpc29kZUxpc3QgYXVkaW9DbGlwcz17YXVkaW9DbGlwc30gLz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5jb250ZW50IHtcbiAgICAgICAgICBwYWRkaW5nOiAwIDEuNWVtO1xuICAgICAgICB9XG4gICAgICAgIC5iYW5uZXIge1xuICAgICAgICAgIG1hcmdpbjogMjRweCAwIDA7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEyMHB4O1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWFhO1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfVxuICAgICAgICAuYmFubmVyLXNoYWRvdyB7XG4gICAgICAgICAgbWFyZ2luOiAyMHB4IDAgMDtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICAgICAgICAgIGhlaWdodDogMTA1cHg7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNhYWE7XG4gICAgICAgICAgZmlsdGVyOiBibHVyKDE1cHgpO1xuICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlKTtcbiAgICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jaGFubmVscyB7XG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICBncmlkLWdhcDogMTBweDtcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4IDM2cHg7XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTQ1cHgsIDFmcikpO1xuICAgICAgICB9XG4gICAgICAgIGEuY2hhbm5lbCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICB9XG4gICAgICAgIC5jaGFubmVsIGltZyB7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgaDEge1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApO1xufVxuIl19 */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel].js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel].js"],"names":["Layout","EpisodeList","PodcastGrid","Error","useState","useEffect","useContext","Header","FavsContext","getServerSideProps","context","idChannel","query","channel","reqChannel","reqAudios","reqSeries","Promise","all","fetch","res","statusCode","status","dataChannel","json","body","dataAudios","audioClips","audio_clips","dataSeries","series","channels","props","error","audioClip","myList","Follow","Unfollow","bannerImage","setBannerImage","isFollowed","setIsFollowed","urls","banner_image","original","logo_image","console","log","includes","handleFollowClick","title","parent_channel_id","backgroundImage","length"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error';\nimport { useState, useEffect, useContext } from 'react';\nimport Header from '../components/Header';\nimport {FavsContext} from '../contexts/FavsContext'\n\nexport async function getServerSideProps(context) {\n  let idChannel = context.query.channel;\n  try {\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n      ),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`\n      ),\n    ]);\n\n    context.res.statusCode = reqChannel.status;\n\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode: context.res.statusCode,\n      },\n    };\n  } catch (error) {\n    return {\n      props: {\n        channel: null,\n        audioClip: null,\n        series: null,\n        statusCode: context.res.statusCode,\n      },\n    };\n  }\n}\n\nexport default function channel({ channel, audioClips, series, statusCode }) {\n  const {myList, Follow, Unfollow } = useContext(FavsContext)\n  const [bannerImage, setBannerImage] = useState({})\n  const [isFollowed, setIsFollowed] = useState(false)\n\n  useEffect(() => {\n    if (channel.urls.banner_image.original === null) {\n      setBannerImage(channel.urls.logo_image.original);\n    } else {\n      setBannerImage(channel.urls.banner_image.original)\n    }\n\n    \n\n    console.log(myList.includes('id'))\n  }, [])\n\n  if (statusCode !== 200) {\n    return <Error statusCode={statusCode} />;\n  }\n\n\n  const handleFollowClick = () => {\n    Follow(channel)\n  }\n  \n  return (\n    <Layout title={`${channel.title} | Podcast`}>\n      <Header\n        headerText={channel.title}\n        nav={true}\n        followed={true}\n        handleFollowClick={handleFollowClick}\n        serie={channel.parent_channel_id}\n      />\n      <div className='content'>\n        <div\n          className='banner'\n          style={{\n            backgroundImage: `url(${bannerImage})`,\n          }}\n        >\n          <div\n            className='banner-shadow'\n            style={{\n              backgroundImage: `url(${bannerImage})`,\n            }}\n          />\n        </div>\n\n        {series.length > 0 && (\n          <div>\n            <PodcastGrid\n              channels={series}\n              title={`series de ${channel.title}`}\n            />\n          </div>\n        )}\n\n        <EpisodeList audioClips={audioClips} />\n      </div>\n\n      <style jsx>{`\n        .content {\n          padding: 0 1.5em;\n        }\n        .banner {\n          margin: 24px 0 0;\n          width: 100%;\n          background-position: 50% 50%;\n          height: 120px;\n          border-radius: 20px;\n          background-size: cover;\n          background-color: #aaa;\n          position: relative;\n        }\n        .banner-shadow {\n          margin: 20px 0 0;\n          position: absolute;\n          width: 80%;\n          background-position: 50% 50%;\n          height: 105px;\n          border-radius: 20px;\n          background-size: cover;\n          background-color: #aaa;\n          filter: blur(15px);\n          left: 50%;\n          transform: translate(-50%);\n          z-index: -1;\n        }\n\n        .channels {\n          display: grid;\n          grid-gap: 10px;\n          padding: 15px 36px;\n          grid-template-columns: repeat(auto-fill, minmax(145px, 1fr));\n        }\n        a.channel {\n          display: block;\n          margin-bottom: 0.5em;\n          color: #333;\n          text-decoration: none;\n        }\n        .channel img {\n          border-radius: 3px;\n          box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n          width: 100%;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}