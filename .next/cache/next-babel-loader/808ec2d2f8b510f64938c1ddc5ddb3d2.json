{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/PodcastGrid.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PodcastCover from './PodcastCover';\nexport default class PodcastGrid extends Component {\n  render() {\n    const {\n      channels\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"jsx-850678733\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-850678733\" + \" \" + 'header-channels',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      className: \"jsx-850678733\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, \"Podcast\")), __jsx(\"div\", {\n      className: \"jsx-850678733\" + \" \" + 'channels',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, channels.map((channel, index) => __jsx(PodcastCover, {\n      channel: channel,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }))), __jsx(_JSXStyle, {\n      id: \"850678733\",\n      __self: this\n    }, \".header-channels.jsx-850678733{color:gray;}.channels.jsx-850678733{display:grid;grid-template-columns:repeat(auto-fill,minmax(145px,1fr));grid-gap:42px 10px;padding:15px 36px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvUG9kY2FzdEdyaWQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUJvQixBQUl3QixBQUdFLFdBRmYsRUFHOEQsMERBQ3pDLG1CQUNELGtCQUNwQiIsImZpbGUiOiIvVXNlcnMvZWRnYXJsb3Blei9Db2RlL2NvdXJzZXMvcmVhY3QvbmV4dC9wb2RjYXN0cy9jb21wb25lbnRzL1BvZGNhc3RHcmlkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFBvZGNhc3RDb3ZlciBmcm9tICcuL1BvZGNhc3RDb3Zlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvZGNhc3RHcmlkIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtjaGFubmVsc30gPSB0aGlzLnByb3BzXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdoZWFkZXItY2hhbm5lbHMnPlxuICAgICAgICAgIDxoMz5Qb2RjYXN0PC9oMz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjaGFubmVscyc+XG4gICAgICAgICAge2NoYW5uZWxzLm1hcCgoY2hhbm5lbCwgaW5kZXgpID0+IChcbiAgICAgICAgICAgIDxQb2RjYXN0Q292ZXIgY2hhbm5lbD17Y2hhbm5lbH0gaW5kZXg9e2luZGV4fSAvPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgLmhlYWRlci1jaGFubmVscyB7XG5cbiAgICAgICAgICAgIGNvbG9yOiBncmF5O1xuICAgICAgICAgIH1cbiAgICAgICAgICAuY2hhbm5lbHMge1xuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE0NXB4LCAxZnIpKTtcbiAgICAgICAgICAgIGdyaWQtZ2FwOiA0MnB4IDEwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4IDM2cHg7XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXX0= */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/PodcastGrid.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/PodcastGrid.js"],"names":["React","Component","PodcastCover","PodcastGrid","render","channels","props","map","channel","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AACjDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKC,KAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA,yCAAe,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE;AAAA,yCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACE,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACZ,MAAC,YAAD;AAAc,MAAA,OAAO,EAAED,OAAvB;AAAgC,MAAA,KAAK,EAAEC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAJF;AAAA;AAAA;AAAA,mzDADF;AAyBD;;AA5BgD","sourcesContent":["import React, { Component } from 'react'\nimport PodcastCover from './PodcastCover';\n\nexport default class PodcastGrid extends Component {\n  render() {\n    const {channels} = this.props\n    return (\n      <div>\n        <div className='header-channels'>\n          <h3>Podcast</h3>\n        </div>\n        <div className='channels'>\n          {channels.map((channel, index) => (\n            <PodcastCover channel={channel} index={index} />\n          ))}\n        </div>\n\n        <style jsx>{`\n          .header-channels {\n\n            color: gray;\n          }\n          .channels {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(145px, 1fr));\n            grid-gap: 42px 10px;\n            padding: 15px 36px;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}