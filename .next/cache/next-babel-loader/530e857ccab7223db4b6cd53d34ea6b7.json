{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error';\nexport var __N_SSP = true;\nexport default function channel(_ref) {\n  var channel = _ref.channel,\n      audioClips = _ref.audioClips,\n      series = _ref.series,\n      statusCode = _ref.statusCode;\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    });\n  }\n\n  console.log(channel.urls.banner_image.original === null);\n  var banner_image = channel.urls.banner_image.original;\n  return __jsx(Layout, {\n    headerText: channel.title,\n    title: \"\".concat(channel.title, \" | Podcast\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-753791459\" + \" \" + 'content',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(banner_image, \")\")\n    },\n    className: \"jsx-753791459\" + \" \" + 'banner',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(banner_image, \")\")\n    },\n    className: \"jsx-753791459\" + \" \" + 'banner-shadow',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), series.length > 0 && __jsx(\"div\", {\n    className: \"jsx-753791459\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(PodcastGrid, {\n    channels: series,\n    title: \"series de \".concat(channel.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), __jsx(EpisodeList, {\n    audioClips: audioClips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"753791459\",\n    __self: this\n  }, \".banner.jsx-753791459{margin:24px 0 0;width:100%;background-position:50% 50%;height:120px;border-radius:20px;background-size:cover;background-color:#aaa;position:relative;}.banner-shadow.jsx-753791459{margin:20px 0 0;position:absolute;width:80%;background-position:50% 50%;height:105px;border-radius:20px;background-size:cover;background-color:#aaa;-webkit-filter:blur(15px);filter:blur(15px);left:50%;-webkit-transform:translate(-50%);-ms-transform:translate(-50%);transform:translate(-50%);z-index:-1;}.channels.jsx-753791459{display:grid;grid-gap:10px;padding:15px 36px;grid-template-columns:repeat(auto-fill,minmax(145px,1fr));}a.channel.jsx-753791459{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-753791459 img.jsx-753791459{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h1.jsx-753791459{font-weight:600;padding:15px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL1tjaGFubmVsXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RmtCLEFBRzJCLEFBVUEsQUFlSCxBQU1DLEFBTUksQUFLRixhQWhCRixDQU1NLEVBL0JULEFBVU8sQUFnQ0wsRUFMOEIsU0FwQ2YsQUF5QlYsRUFpQnBCLEtBaENZLEFBcUJDLFVBcEJpQixDQWVnQyxBQU12QyxVQS9CUixHQW9DRixVQW5DUSxDQW9DckIsR0ExQmUsYUFDTSxFQVZHLFFBOEJ4QixRQU5BLENBYndCLEtBVkEsaUJBV0EsS0FWSixpQkFXQSxDQVZwQiwyQ0FXVyxTQUNpQiwwRkFDZixXQUNiIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL1tjaGFubmVsXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnaXNvbW9ycGhpYy1mZXRjaCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBFcGlzb2RlTGlzdCBmcm9tICcuLi9jb21wb25lbnRzL0VwaXNvZGVMaXN0JztcbmltcG9ydCBQb2RjYXN0R3JpZCBmcm9tICcuLi9jb21wb25lbnRzL1BvZGNhc3RHcmlkJztcbmltcG9ydCBFcnJvciBmcm9tICcuL19lcnJvcic7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJTaWRlUHJvcHMoY29udGV4dCkge1xuICBsZXQgaWRDaGFubmVsID0gY29udGV4dC5xdWVyeS5jaGFubmVsO1xuICB0cnkge1xuICAgIGxldCBbcmVxQ2hhbm5lbCwgcmVxQXVkaW9zLCByZXFTZXJpZXNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9P3ZlcnNpb249MmApLFxuICAgICAgZmV0Y2goXG4gICAgICAgIGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwcz92ZXJzaW9uPTJgXG4gICAgICApLFxuICAgICAgZmV0Y2goXG4gICAgICAgIGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVscz92ZXJzaW9uPTJgXG4gICAgICApLFxuICAgIF0pO1xuXG4gICAgY29udGV4dC5yZXMuc3RhdHVzQ29kZSA9IHJlcUNoYW5uZWwuc3RhdHVzO1xuXG4gICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKCk7XG4gICAgbGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWw7XG5cbiAgICBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKCk7XG4gICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHM7XG5cbiAgICBsZXQgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKCk7XG4gICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVscztcblxuICAgIHJldHVybiB7XG4gICAgICBwcm9wczoge1xuICAgICAgICBjaGFubmVsLFxuICAgICAgICBhdWRpb0NsaXBzLFxuICAgICAgICBzZXJpZXMsXG4gICAgICAgIHN0YXR1c0NvZGU6IGNvbnRleHQucmVzLnN0YXR1c0NvZGUsXG4gICAgICB9LFxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHByb3BzOiB7XG4gICAgICAgIGNoYW5uZWw6IG51bGwsXG4gICAgICAgIGF1ZGlvQ2xpcDogbnVsbCxcbiAgICAgICAgc2VyaWVzOiBudWxsLFxuICAgICAgICBzdGF0dXNDb2RlOiBjb250ZXh0LnJlcy5zdGF0dXNDb2RlLFxuICAgICAgfSxcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNoYW5uZWwoeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGUgfSkge1xuICBpZiAoc3RhdHVzQ29kZSAhPT0gMjAwKSB7XG4gICAgcmV0dXJuIDxFcnJvciBzdGF0dXNDb2RlPXtzdGF0dXNDb2RlfSAvPjtcbiAgfVxuICBjb25zb2xlLmxvZyhjaGFubmVsLnVybHMuYmFubmVyX2ltYWdlLm9yaWdpbmFsID09PSBudWxsKTtcbiAgXG4gIGNvbnN0IGJhbm5lcl9pbWFnZSA9IGNoYW5uZWwudXJscy5iYW5uZXJfaW1hZ2Uub3JpZ2luYWxcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQgaGVhZGVyVGV4dD17Y2hhbm5lbC50aXRsZX0gdGl0bGU9e2Ake2NoYW5uZWwudGl0bGV9IHwgUG9kY2FzdGB9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9J2NvbnRlbnQnPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPSdiYW5uZXInXG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogYHVybCgke2Jhbm5lcl9pbWFnZX0pYCxcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3NOYW1lPSdiYW5uZXItc2hhZG93J1xuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7YmFubmVyX2ltYWdlfSlgLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7c2VyaWVzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8UG9kY2FzdEdyaWRcbiAgICAgICAgICAgICAgY2hhbm5lbHM9e3Nlcmllc31cbiAgICAgICAgICAgICAgdGl0bGU9e2BzZXJpZXMgZGUgJHtjaGFubmVsLnRpdGxlfWB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuXG4gICAgICAgIDxFcGlzb2RlTGlzdCBhdWRpb0NsaXBzPXthdWRpb0NsaXBzfSAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmJhbm5lciB7XG4gICAgICAgICAgbWFyZ2luOiAyNHB4IDAgMDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICAgICAgICAgIGhlaWdodDogMTIwcHg7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNhYWE7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB9XG4gICAgICAgIC5iYW5uZXItc2hhZG93IHtcbiAgICAgICAgICBtYXJnaW46IDIwcHggMCAwO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB3aWR0aDogODAlO1xuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgICAgICAgaGVpZ2h0OiAxMDVweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcbiAgICAgICAgICBmaWx0ZXI6IGJsdXIoMTVweCk7XG4gICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUpO1xuICAgICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNoYW5uZWxzIHtcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGdyaWQtZ2FwOiAxMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHggMzZweDtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgxNDVweCwgMWZyKSk7XG4gICAgICAgIH1cbiAgICAgICAgYS5jaGFubmVsIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIH1cbiAgICAgICAgLmNoYW5uZWwgaW1nIHtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgICBoMSB7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel].js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/[channel].js"],"names":["Layout","EpisodeList","PodcastGrid","Error","channel","audioClips","series","statusCode","console","log","urls","banner_image","original","title","backgroundImage","length"],"mappings":";;;;AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AA8CA,eAAe,SAASC,OAAT,OAA8D;AAAA,MAA3CA,OAA2C,QAA3CA,OAA2C;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC3E,MAAIA,UAAU,KAAK,GAAnB,EAAwB;AACtB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,IAAR,CAAaC,YAAb,CAA0BC,QAA1B,KAAuC,IAAnD;AAEA,MAAMD,YAAY,GAAGP,OAAO,CAACM,IAAR,CAAaC,YAAb,CAA0BC,QAA/C;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAER,OAAO,CAACS,KAA5B;AAAmC,IAAA,KAAK,YAAKT,OAAO,CAACS,KAAb,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,uCAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,gBAASH,YAAT;AADV,KAFT;AAAA,uCACY,QADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAEE,IAAA,KAAK,EAAE;AACLG,MAAAA,eAAe,gBAASH,YAAT;AADV,KAFT;AAAA,uCACY,eADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EAeGL,MAAM,CAACS,MAAP,GAAgB,CAAhB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,QAAQ,EAAET,MADZ;AAEE,IAAA,KAAK,sBAAeF,OAAO,CAACS,KAAvB,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBJ,EAwBE,MAAC,WAAD;AAAa,IAAA,UAAU,EAAER,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADF;AAAA;AAAA;AAAA,48MADF;AA+ED","sourcesContent":["import 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from './_error';\n\nexport async function getServerSideProps(context) {\n  let idChannel = context.query.channel;\n  try {\n    let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n      ),\n      fetch(\n        `https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`\n      ),\n    ]);\n\n    context.res.statusCode = reqChannel.status;\n\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode: context.res.statusCode,\n      },\n    };\n  } catch (error) {\n    return {\n      props: {\n        channel: null,\n        audioClip: null,\n        series: null,\n        statusCode: context.res.statusCode,\n      },\n    };\n  }\n}\n\nexport default function channel({ channel, audioClips, series, statusCode }) {\n  if (statusCode !== 200) {\n    return <Error statusCode={statusCode} />;\n  }\n  console.log(channel.urls.banner_image.original === null);\n  \n  const banner_image = channel.urls.banner_image.original\n\n  return (\n    <Layout headerText={channel.title} title={`${channel.title} | Podcast`}>\n      <div className='content'>\n        <div\n          className='banner'\n          style={{\n            backgroundImage: `url(${banner_image})`,\n          }}\n        >\n          <div\n            className='banner-shadow'\n            style={{\n              backgroundImage: `url(${banner_image})`,\n            }}\n          />\n        </div>\n\n        {series.length > 0 && (\n          <div>\n            <PodcastGrid\n              channels={series}\n              title={`series de ${channel.title}`}\n            />\n          </div>\n        )}\n\n        <EpisodeList audioClips={audioClips} />\n      </div>\n\n      <style jsx>{`\n        .banner {\n          margin: 24px 0 0;\n          width: 100%;\n          background-position: 50% 50%;\n          height: 120px;\n          border-radius: 20px;\n          background-size: cover;\n          background-color: #aaa;\n          position: relative;\n        }\n        .banner-shadow {\n          margin: 20px 0 0;\n          position: absolute;\n          width: 80%;\n          background-position: 50% 50%;\n          height: 105px;\n          border-radius: 20px;\n          background-size: cover;\n          background-color: #aaa;\n          filter: blur(15px);\n          left: 50%;\n          transform: translate(-50%);\n          z-index: -1;\n        }\n\n        .channels {\n          display: grid;\n          grid-gap: 10px;\n          padding: 15px 36px;\n          grid-template-columns: repeat(auto-fill, minmax(145px, 1fr));\n        }\n        a.channel {\n          display: block;\n          margin-bottom: 0.5em;\n          color: #333;\n          text-decoration: none;\n        }\n        .channel img {\n          border-radius: 3px;\n          box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n          width: 100%;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}