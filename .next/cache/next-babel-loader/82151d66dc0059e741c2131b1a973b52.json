{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport { PlayerContext } from '../contexts/PlayerContext';\nimport podcast from '../pages/[channel]/[podcast]';\nexport default function EpisodeList({\n  audioClips\n}) {\n  const {\n    SetCurrent,\n    currentSong\n  } = useContext(PlayerContext);\n  const router = useRouter();\n  console.log(audioClips[0]);\n\n  const onPodcastClick = (podcastId, channelId) => {\n    SetCurrent(podcastId);\n    router.push({\n      pathname: `/[channel]/[podcast]`,\n      query: {\n        podcastId: podcastId\n      },\n      as: `/${channelId}/${podcastId}`\n    }, `/${channelId}/${podcastId}`);\n    console.log(router.query);\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1013584370\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1013584370\" + \" \" + 'episodes-header',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-1013584370\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, `${audioClips.length} EPISODIOS`), __jsx(FiltersIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), audioClips.map((clip, index) => __jsx(\"div\", {\n    onClick: () => onPodcastClick(clip.id, clip.channel.id),\n    key: clip.id,\n    className: \"jsx-1013584370\" + \" \" + ('episode ' + (currentSong === clip.id ? 'active' : '') || \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-1013584370\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, clip.title), __jsx(\"div\", {\n    className: \"jsx-1013584370\" + \" \" + 'meta',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, Math.ceil(clip.duration / 60), \" minutes\"), __jsx(\"p\", {\n    className: \"jsx-1013584370\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, clip.title))), __jsx(_JSXStyle, {\n    id: \"1013584370\",\n    __self: this\n  }, \".episodes-header.jsx-1013584370{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:30px 0;text-align:left;border-bottom:1px solid #e2e2e2;}h3.jsx-1013584370{font-size:12px;font-weight:600;margin:0;}.episode.jsx-1013584370{display:block;-webkit-text-decoration:none;text-decoration:none;margin:0 .6em;padding:16px 0;border-bottom:1px solid #e2e2e2;cursor:pointer;}.active.jsx-1013584370{background:black;}.episode.jsx-1013584370:hover{color:#000;}h2.jsx-1013584370{margin:16px 0;font-size:16px;}.episode.jsx-1013584370 .meta.jsx-1013584370{color:#979797;font-size:12px;margin-bottom:8px;}p.jsx-1013584370{color:#979797;font-size:12px;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOENrQixBQUd3QixBQVFFLEFBS0QsQUFRRyxBQUdOLEFBR0csQUFJQSxBQUtBLFdBWGhCLEdBWHVCLEFBY04sQUFJQSxBQUtBLENBNUJDLEVBYWxCLFlBT0EsQUFJb0IsQUFLVCxFQTVCQSxPQTZCWCxFQTVCQSxPQXVCQSxpQkFuQmdCLFVBZGdCLElBZWYsZUFDaUIsZ0NBQ2pCLGVBQ2pCLGlEQWpCcUIsNkZBQ0osZUFDQyxnQkFDZ0IsZ0NBQ2xDIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZUNvbnRleHR9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCBGaWx0ZXJzSWNvbiBmcm9tICcuL0ZpbHRlcnNJY29uJztcbmltcG9ydCB7UGxheWVyQ29udGV4dH0gZnJvbSAnLi4vY29udGV4dHMvUGxheWVyQ29udGV4dCdcbmltcG9ydCBwb2RjYXN0IGZyb20gJy4uL3BhZ2VzL1tjaGFubmVsXS9bcG9kY2FzdF0nO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBFcGlzb2RlTGlzdCAoe2F1ZGlvQ2xpcHN9KSB7XG4gIGNvbnN0IHsgU2V0Q3VycmVudCwgY3VycmVudFNvbmd9ID0gdXNlQ29udGV4dChQbGF5ZXJDb250ZXh0KVxuXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICBjb25zb2xlLmxvZyhhdWRpb0NsaXBzWzBdKTtcblxuXG4gIFxuICBjb25zdCBvblBvZGNhc3RDbGljayA9IChwb2RjYXN0SWQsIGNoYW5uZWxJZCkgPT4ge1xuICAgIFNldEN1cnJlbnQocG9kY2FzdElkKTtcbiAgICByb3V0ZXIucHVzaChcbiAgICAgIHtcbiAgICAgICAgcGF0aG5hbWU6IGAvW2NoYW5uZWxdL1twb2RjYXN0XWAsXG4gICAgICAgIHF1ZXJ5OiB7IHBvZGNhc3RJZDogcG9kY2FzdElkIH0sXG4gICAgICAgIGFzOiBgLyR7Y2hhbm5lbElkfS8ke3BvZGNhc3RJZH1gLFxuICAgICAgfSxcbiAgICAgIGAvJHtjaGFubmVsSWR9LyR7cG9kY2FzdElkfWBcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKHJvdXRlci5xdWVyeSk7XG4gICAgXG4gIH1cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9J2VwaXNvZGVzLWhlYWRlcic+XG4gICAgICAgIDxoMz57YCR7YXVkaW9DbGlwcy5sZW5ndGh9IEVQSVNPRElPU2B9PC9oMz5cbiAgICAgICAgPEZpbHRlcnNJY29uIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAge2F1ZGlvQ2xpcHMubWFwKChjbGlwLCBpbmRleCkgPT4gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPXsnZXBpc29kZSAnICsgKGN1cnJlbnRTb25nID09PSBjbGlwLmlkID8gJ2FjdGl2ZScgOiAnJyl9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4gb25Qb2RjYXN0Q2xpY2soY2xpcC5pZCwgY2xpcC5jaGFubmVsLmlkKX1cbiAgICAgICAgICBrZXk9e2NsaXAuaWR9XG4gICAgICAgID5cbiAgICAgICAgICA8aDI+e2NsaXAudGl0bGV9PC9oMj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWV0YSc+e01hdGguY2VpbChjbGlwLmR1cmF0aW9uIC8gNjApfSBtaW51dGVzPC9kaXY+XG4gICAgICAgICAgPHA+e2NsaXAudGl0bGV9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICkpfVxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5lcGlzb2Rlcy1oZWFkZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgcGFkZGluZzogMzBweCAwO1xuICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMmUyZTI7XG4gICAgICAgIH1cbiAgICAgICAgaDMge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgICAuZXBpc29kZSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogMCAuNmVtO1xuICAgICAgICAgIHBhZGRpbmc6IDE2cHggMDtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UyZTJlMjtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgLmFjdGl2ZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7XG4gICAgICAgIH1cbiAgICAgICAgLmVwaXNvZGU6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICB9XG4gICAgICAgIGgyIHtcbiAgICAgICAgICBtYXJnaW46IDE2cHggMDtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIH1cbiAgICAgICAgLmVwaXNvZGUgLm1ldGEge1xuICAgICAgICAgIGNvbG9yOiAjOTc5Nzk3O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgICAgIH1cbiAgICAgICAgcCB7XG4gICAgICAgICAgY29sb3I6ICM5Nzk3OTc7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufVxuIl19 */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js"],"names":["useContext","useRouter","FiltersIcon","PlayerContext","podcast","EpisodeList","audioClips","SetCurrent","currentSong","router","console","log","onPodcastClick","podcastId","channelId","push","pathname","query","as","length","map","clip","index","id","channel","title","Math","ceil","duration"],"mappings":";;;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,eAAe,SAASC,WAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAoC;AACjD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BR,UAAU,CAACG,aAAD,CAA7C;AAEA,QAAMM,MAAM,GAAGR,SAAS,EAAxB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAU,CAAC,CAAD,CAAtB;;AAIA,QAAMM,cAAc,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC/CP,IAAAA,UAAU,CAACM,SAAD,CAAV;AACAJ,IAAAA,MAAM,CAACM,IAAP,CACE;AACEC,MAAAA,QAAQ,EAAG,sBADb;AAEEC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,SAAS,EAAEA;AAAb,OAFT;AAGEK,MAAAA,EAAE,EAAG,IAAGJ,SAAU,IAAGD,SAAU;AAHjC,KADF,EAMG,IAAGC,SAAU,IAAGD,SAAU,EAN7B;AAQAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACQ,KAAnB;AAED,GAZD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,GAAEX,UAAU,CAACa,MAAO,YAA1B,CADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAMGb,UAAU,CAACc,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KACd;AAEE,IAAA,OAAO,EAAE,MAAMV,cAAc,CAACS,IAAI,CAACE,EAAN,EAAUF,IAAI,CAACG,OAAL,CAAaD,EAAvB,CAF/B;AAGE,IAAA,GAAG,EAAEF,IAAI,CAACE,EAHZ;AAAA,yCACa,cAAcf,WAAW,KAAKa,IAAI,CAACE,EAArB,GAA0B,QAA1B,GAAqC,EAAnD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACI,KAAV,CALF,EAME;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,IAAI,CAACC,IAAL,CAAUN,IAAI,CAACO,QAAL,GAAgB,EAA1B,CAAvB,aANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAI,CAACI,KAAT,CAPF,CADD,CANH;AAAA;AAAA;AAAA,2rJADF;AAgED","sourcesContent":["import {useContext} from 'react'\nimport {useRouter} from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport {PlayerContext} from '../contexts/PlayerContext'\nimport podcast from '../pages/[channel]/[podcast]';\n\nexport default function EpisodeList ({audioClips}) {\n  const { SetCurrent, currentSong} = useContext(PlayerContext)\n\n  const router = useRouter();\n  console.log(audioClips[0]);\n\n\n  \n  const onPodcastClick = (podcastId, channelId) => {\n    SetCurrent(podcastId);\n    router.push(\n      {\n        pathname: `/[channel]/[podcast]`,\n        query: { podcastId: podcastId },\n        as: `/${channelId}/${podcastId}`,\n      },\n      `/${channelId}/${podcastId}`\n    );\n    console.log(router.query);\n    \n  }\n  return (\n    <div>\n      <div className='episodes-header'>\n        <h3>{`${audioClips.length} EPISODIOS`}</h3>\n        <FiltersIcon />\n      </div>\n\n      {audioClips.map((clip, index) => (\n        <div\n          className={'episode ' + (currentSong === clip.id ? 'active' : '')}\n          onClick={() => onPodcastClick(clip.id, clip.channel.id)}\n          key={clip.id}\n        >\n          <h2>{clip.title}</h2>\n          <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n          <p>{clip.title}</p>\n        </div>\n      ))}\n\n      <style jsx>{`\n        .episodes-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 30px 0;\n          text-align: left;\n          border-bottom: 1px solid #e2e2e2;\n        }\n        h3 {\n          font-size: 12px;\n          font-weight: 600;\n          margin: 0;\n        }\n        .episode {\n          display: block;\n          text-decoration: none;\n          margin: 0 .6em;\n          padding: 16px 0;\n          border-bottom: 1px solid #e2e2e2;\n          cursor: pointer;\n        }\n        .active {\n          background: black;\n        }\n        .episode:hover {\n          color: #000;\n        }\n        h2 {\n          margin: 16px 0;\n          font-size: 16px;\n        }\n        .episode .meta {\n          color: #979797;\n          font-size: 12px;\n          margin-bottom: 8px;\n        }\n        p {\n          color: #979797;\n          font-size: 12px;\n          margin: 0;\n        }\n      `}</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}