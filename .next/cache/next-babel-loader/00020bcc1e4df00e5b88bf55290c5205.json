{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport Router, { useRouter } from 'next/router';\nexport default function EpisodeList({\n  audioClips\n}) {\n  const router = useRouter();\n\n  const onPodcastClick = (podcastId, channelId) => {\n    router.push({\n      pathname: `/[channel]`,\n      query: {\n        podcastId: podcastId\n      }\n    }, `/${channelId}/${podcastId}`);\n    console.log(router.query);\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-4221894053\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, audioClips.map(clip => // <div onClick={() => {Router.push(`/[channel]/?podcastId=${clip.id}`, `/${clip.channel.id}/${clip.id}`)}} key={clip.id}>\n  __jsx(\"div\", {\n    onClick: () => onPodcastClick(clip.id, clip.channel.id),\n    key: clip.id,\n    className: \"jsx-4221894053\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-4221894053\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, clip.title), __jsx(\"div\", {\n    className: \"jsx-4221894053\" + \" \" + 'meta',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, Math.ceil(clip.duration / 60), \" minutes\"), clip.title) // <Link\n  //   href={`/[channel]/[podcast]?id=${clip.id}`}\n  //   as={`/${clip.channel.id}/${clip.id}`}\n  //   key={clip.id}\n  // >\n  //   <a className='podcast'>\n  //     <h3>{clip.title}</h3>\n  //     <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n  //     {clip.title}\n  //   </a>\n  // </Link>\n  ), __jsx(_JSXStyle, {\n    id: \"4221894053\",\n    __self: this\n  }, \".podcast.jsx-4221894053{display:block;-webkit-text-decoration:none;text-decoration:none;color:#333;padding:15px;border-bottom:1px solid rgba(0,0,0,0.2);cursor:pointer;}.podcast.jsx-4221894053:hover{color:#000;}.podcast.jsx-4221894053 h3.jsx-4221894053{margin:0;}.podcast.jsx-4221894053 .meta.jsx-4221894053{color:#666;margin-top:0.5em;font-size:0.8em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUNrQixBQUd5QixBQVFILEFBR0YsQUFHRSxTQUZiLEVBSEEsQUFNbUIsR0FkSSxjQWVMLGdCQUNsQixvQkFmYSxXQUNFLGFBQzhCLHdDQUM1QixlQUNqQiIsImZpbGUiOiIvVXNlcnMvZWRnYXJsb3Blei9Db2RlL2NvdXJzZXMvcmVhY3QvbmV4dC9wb2RjYXN0cy9jb21wb25lbnRzL0VwaXNvZGVMaXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuaW1wb3J0IFJvdXRlciwge3VzZVJvdXRlcn0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBFcGlzb2RlTGlzdCAoe2F1ZGlvQ2xpcHN9KSB7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICBjb25zdCBvblBvZGNhc3RDbGljayA9IChwb2RjYXN0SWQsIGNoYW5uZWxJZCkgPT4ge1xuICAgIHJvdXRlci5wdXNoKFxuICAgICAge1xuICAgICAgICBwYXRobmFtZTogYC9bY2hhbm5lbF1gLFxuICAgICAgICBxdWVyeTogeyBwb2RjYXN0SWQ6IHBvZGNhc3RJZCB9LFxuICAgICAgfSxcbiAgICAgIGAvJHtjaGFubmVsSWR9LyR7cG9kY2FzdElkfWBcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKHJvdXRlci5xdWVyeSk7XG4gICAgXG4gIH1cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAge2F1ZGlvQ2xpcHMubWFwKChjbGlwKSA9PiAoXG4gICAgICAgIC8vIDxkaXYgb25DbGljaz17KCkgPT4ge1JvdXRlci5wdXNoKGAvW2NoYW5uZWxdLz9wb2RjYXN0SWQ9JHtjbGlwLmlkfWAsIGAvJHtjbGlwLmNoYW5uZWwuaWR9LyR7Y2xpcC5pZH1gKX19IGtleT17Y2xpcC5pZH0+XG4gICAgICAgIDxkaXYgb25DbGljaz17KCkgPT4gb25Qb2RjYXN0Q2xpY2soY2xpcC5pZCwgY2xpcC5jaGFubmVsLmlkKX0ga2V5PXtjbGlwLmlkfT5cbiAgICAgICAgICA8aDM+e2NsaXAudGl0bGV9PC9oMz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWV0YSc+e01hdGguY2VpbChjbGlwLmR1cmF0aW9uIC8gNjApfSBtaW51dGVzPC9kaXY+XG4gICAgICAgICAge2NsaXAudGl0bGV9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICAvLyA8TGlua1xuICAgICAgICAvLyAgIGhyZWY9e2AvW2NoYW5uZWxdL1twb2RjYXN0XT9pZD0ke2NsaXAuaWR9YH1cbiAgICAgICAgLy8gICBhcz17YC8ke2NsaXAuY2hhbm5lbC5pZH0vJHtjbGlwLmlkfWB9XG4gICAgICAgIC8vICAga2V5PXtjbGlwLmlkfVxuICAgICAgICAvLyA+XG4gICAgICAgIC8vICAgPGEgY2xhc3NOYW1lPSdwb2RjYXN0Jz5cbiAgICAgICAgLy8gICAgIDxoMz57Y2xpcC50aXRsZX08L2gzPlxuICAgICAgICAvLyAgICAgPGRpdiBjbGFzc05hbWU9J21ldGEnPntNYXRoLmNlaWwoY2xpcC5kdXJhdGlvbiAvIDYwKX0gbWludXRlczwvZGl2PlxuICAgICAgICAvLyAgICAge2NsaXAudGl0bGV9XG4gICAgICAgIC8vICAgPC9hPlxuICAgICAgICAvLyA8L0xpbms+XG4gICAgICApKX1cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAucG9kY2FzdCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgLnBvZGNhc3Q6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICB9XG4gICAgICAgIC5wb2RjYXN0IGgzIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgICAgLnBvZGNhc3QgLm1ldGEge1xuICAgICAgICAgIGNvbG9yOiAjNjY2O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDAuNWVtO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js"],"names":["React","Link","Router","useRouter","EpisodeList","audioClips","router","onPodcastClick","podcastId","channelId","push","pathname","query","console","log","map","clip","id","channel","title","Math","ceil","duration"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAgBC,SAAhB,QAAgC,aAAhC;AAEA,eAAe,SAASC,WAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAoC;AACjD,QAAMC,MAAM,GAAGH,SAAS,EAAxB;;AACA,QAAMI,cAAc,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC/CH,IAAAA,MAAM,CAACI,IAAP,CACE;AACEC,MAAAA,QAAQ,EAAG,YADb;AAEEC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,SAAS,EAAEA;AAAb;AAFT,KADF,EAKG,IAAGC,SAAU,IAAGD,SAAU,EAL7B;AAOAK,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACM,KAAnB;AAED,GAVD;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,UAAU,CAACU,GAAX,CAAgBC,IAAD,IACd;AACA;AAAK,IAAA,OAAO,EAAE,MAAMT,cAAc,CAACS,IAAI,CAACC,EAAN,EAAUD,IAAI,CAACE,OAAL,CAAaD,EAAvB,CAAlC;AAA8D,IAAA,GAAG,EAAED,IAAI,CAACC,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACG,KAAV,CADF,EAEE;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,IAAI,CAACC,IAAL,CAAUL,IAAI,CAACM,QAAL,GAAgB,EAA1B,CAAvB,aAFF,EAGGN,IAAI,CAACG,KAHR,CAFc,CAOd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBD,GADH;AAAA;AAAA;AAAA,6yGADF;AA6CD","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport Router, {useRouter} from 'next/router';\n\nexport default function EpisodeList ({audioClips}) {\n  const router = useRouter();\n  const onPodcastClick = (podcastId, channelId) => {\n    router.push(\n      {\n        pathname: `/[channel]`,\n        query: { podcastId: podcastId },\n      },\n      `/${channelId}/${podcastId}`\n    );\n    console.log(router.query);\n    \n  }\n  return (\n    <div>\n      {audioClips.map((clip) => (\n        // <div onClick={() => {Router.push(`/[channel]/?podcastId=${clip.id}`, `/${clip.channel.id}/${clip.id}`)}} key={clip.id}>\n        <div onClick={() => onPodcastClick(clip.id, clip.channel.id)} key={clip.id}>\n          <h3>{clip.title}</h3>\n          <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n          {clip.title}\n        </div>\n        // <Link\n        //   href={`/[channel]/[podcast]?id=${clip.id}`}\n        //   as={`/${clip.channel.id}/${clip.id}`}\n        //   key={clip.id}\n        // >\n        //   <a className='podcast'>\n        //     <h3>{clip.title}</h3>\n        //     <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n        //     {clip.title}\n        //   </a>\n        // </Link>\n      ))}\n\n      <style jsx>{`\n        .podcast {\n          display: block;\n          text-decoration: none;\n          color: #333;\n          padding: 15px;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n          cursor: pointer;\n        }\n        .podcast:hover {\n          color: #000;\n        }\n        .podcast h3 {\n          margin: 0;\n        }\n        .podcast .meta {\n          color: #666;\n          margin-top: 0.5em;\n          font-size: 0.8em;\n        }\n      `}</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}