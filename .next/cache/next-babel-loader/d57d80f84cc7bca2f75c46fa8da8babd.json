{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from 'next/error';\nexport default class channel extends React.Component {\n  static async getInitialProps({\n    query,\n    res = {}\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqAudios, reqSeries] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`)]); // if (reqChannel.status == 404) {\n      //   res.statusCode = reqChannel.status;\n      //   return {\n      //     channel: null,\n      //     audioClip: null,\n      //     series: null,\n      //     statusCode: 404,\n      //   }\n      // }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n    } catch (error) {\n      return {\n        channel: null,\n        audioClip: null,\n        series: null,\n        statusCode: res.statusCode\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return __jsx(Layout, {\n      title: `${channel.title} | Podcast`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.banner_image.original})`\n      },\n      className: \"jsx-3333162825\" + \" \" + 'banner',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), __jsx(\"h1\", {\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Series\"), __jsx(PodcastGrid, {\n      channels: series,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), __jsx(\"h2\", {\n      className: \"jsx-3333162825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Ultimos Podcast\"), __jsx(EpisodeList, {\n      audioClips: audioClips,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), __jsx(_JSXStyle, {\n      id: \"3333162825\",\n      __self: this\n    }, \"header.jsx-3333162825{color:#fff;background:#8756ca;padding:15px;text-align:center;}.banner.jsx-3333162825{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}.channels.jsx-3333162825{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}a.channel.jsx-3333162825{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-3333162825 img.jsx-3333162825{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h1.jsx-3333162825{font-weight:600;padding:15px;}h2.jsx-3333162825{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkVvQixBQUd3QixBQU9BLEFBUUUsQUFNQyxBQU1JLEFBS0YsQUFJSixXQW5DTyxBQU9BLENBNkJILENBckJGLENBTU0sRUFXUCxFQUw4QixTQVg5QixDQXFCRyxDQUpsQixDQWhDZSxBQU9lLElBY2pCLE1BTGlELEdBZjFDLENBb0NULENBZlksUUFnQkgsS0E5QkksQUFtQlgsR0F6QmIsUUEwQkEsRUFXQSxTQTlCd0IsZUFjeEIsR0FOQSxJQVBBIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2lzb21vcnBoaWMtZmV0Y2gnO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCdcbmltcG9ydCBFcGlzb2RlTGlzdCBmcm9tICcuLi9jb21wb25lbnRzL0VwaXNvZGVMaXN0JztcbmltcG9ydCBQb2RjYXN0R3JpZCBmcm9tICcuLi9jb21wb25lbnRzL1BvZGNhc3RHcmlkJztcbmltcG9ydCBFcnJvciBmcm9tICduZXh0L2Vycm9yJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBjaGFubmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICBzdGF0aWMgYXN5bmMgZ2V0SW5pdGlhbFByb3BzKHsgcXVlcnksIHJlcyA9IHt9IH0pe1xuICAgIGxldCBpZENoYW5uZWwgPSBxdWVyeS5pZFxuXG4gICAgdHJ5IHtcbiAgICAgIGxldCBbcmVxQ2hhbm5lbCwgcmVxQXVkaW9zLCByZXFTZXJpZXNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0/dmVyc2lvbj0yYCksXG4gICAgICAgIGZldGNoKFxuICAgICAgICAgIGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwcz92ZXJzaW9uPTJgXG4gICAgICAgICksXG4gICAgICAgIGZldGNoKFxuICAgICAgICAgIGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVscz92ZXJzaW9uPTJgXG4gICAgICAgICksXG4gICAgICBdKTtcblxuICAgICAgLy8gaWYgKHJlcUNoYW5uZWwuc3RhdHVzID09IDQwNCkge1xuICAgICAgLy8gICByZXMuc3RhdHVzQ29kZSA9IHJlcUNoYW5uZWwuc3RhdHVzO1xuICAgICAgLy8gICByZXR1cm4ge1xuICAgICAgLy8gICAgIGNoYW5uZWw6IG51bGwsXG4gICAgICAvLyAgICAgYXVkaW9DbGlwOiBudWxsLFxuICAgICAgLy8gICAgIHNlcmllczogbnVsbCxcbiAgICAgIC8vICAgICBzdGF0dXNDb2RlOiA0MDQsXG4gICAgICAvLyAgIH1cbiAgICAgIC8vIH1cbiAgXG4gICAgICBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKTtcbiAgICAgIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsXG4gIFxuICAgICAgbGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpO1xuICAgICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHNcbiAgXG4gICAgICBsZXQgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKCk7XG4gICAgICBsZXQgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzXG4gIFxuICAgICAgcmV0dXJuIHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlOiAyMDAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIHtjaGFubmVsOiBudWxsLCBhdWRpb0NsaXA6IG51bGwsIHNlcmllczogbnVsbCwgc3RhdHVzQ29kZTogcmVzLnN0YXR1c0NvZGV9XG4gICAgfVxuXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGUgfSA9IHRoaXMucHJvcHNcbiAgICBcbiAgICBpZiAoc3RhdHVzQ29kZSAhPT0gMjAwKSB7XG4gICAgICByZXR1cm4gPEVycm9yIHN0YXR1c0NvZGU9e3N0YXR1c0NvZGV9IC8+O1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gKFxuICAgICAgPExheW91dCB0aXRsZT17YCR7Y2hhbm5lbC50aXRsZX0gfCBQb2RjYXN0YH0+XG5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT0nYmFubmVyJ1xuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHtjaGFubmVsLnVybHMuYmFubmVyX2ltYWdlLm9yaWdpbmFsfSlgLFxuICAgICAgICAgIH19XG4gICAgICAgIC8+XG5cbiAgICAgICAgPGgxPntjaGFubmVsLnRpdGxlfTwvaDE+XG5cbiAgICAgICAge3Nlcmllcy5sZW5ndGggPiAwICYmIFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8aDI+U2VyaWVzPC9oMj5cbiAgICAgICAgICAgIDxQb2RjYXN0R3JpZCBjaGFubmVscz17c2VyaWVzfSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICB9XG5cbiAgICAgICAgPGgyPlVsdGltb3MgUG9kY2FzdDwvaDI+XG4gICAgICAgIDxFcGlzb2RlTGlzdCBhdWRpb0NsaXBzPXthdWRpb0NsaXBzfSAvPlxuXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBoZWFkZXIge1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjODc1NmNhO1xuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuYmFubmVyIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDI1JTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuY2hhbm5lbHMge1xuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgIGdyaWQtZ2FwOiAxNXB4O1xuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYS5jaGFubmVsIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLmNoYW5uZWwgaW1nIHtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaDEge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgfVxuICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuXG4gICAgICA8L0xheW91dD5cbiAgICApO1xuICB9XG59XG4iXX0= */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/pages/channel.js"],"names":["Layout","EpisodeList","PodcastGrid","Error","channel","React","Component","getInitialProps","query","res","idChannel","id","reqChannel","reqAudios","reqSeries","Promise","all","fetch","dataChannel","json","body","dataAudios","audioClips","audio_clips","dataSeries","series","channels","statusCode","error","audioClip","render","props","title","backgroundImage","urls","banner_image","original","length"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch';\nimport Layout from '../components/Layout'\nimport EpisodeList from '../components/EpisodeList';\nimport PodcastGrid from '../components/PodcastGrid';\nimport Error from 'next/error'\n\nexport default class channel extends React.Component {\n\n  static async getInitialProps({ query, res = {} }){\n    let idChannel = query.id\n\n    try {\n      let [reqChannel, reqAudios, reqSeries] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}?version=2`),\n        fetch(\n          `https://api.audioboom.com/channels/${idChannel}/audio_clips?version=2`\n        ),\n        fetch(\n          `https://api.audioboom.com/channels/${idChannel}/child_channels?version=2`\n        ),\n      ]);\n\n      // if (reqChannel.status == 404) {\n      //   res.statusCode = reqChannel.status;\n      //   return {\n      //     channel: null,\n      //     audioClip: null,\n      //     series: null,\n      //     statusCode: 404,\n      //   }\n      // }\n  \n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel\n  \n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips\n  \n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels\n  \n      return { channel, audioClips, series, statusCode: 200 };\n    } catch (error) {\n      return {channel: null, audioClip: null, series: null, statusCode: res.statusCode}\n    }\n\n  }\n\n  render() {\n    const { channel, audioClips, series, statusCode } = this.props\n    \n    if (statusCode !== 200) {\n      return <Error statusCode={statusCode} />;\n    }\n    \n    return (\n      <Layout title={`${channel.title} | Podcast`}>\n\n        <div\n          className='banner'\n          style={{\n            backgroundImage: `url(${channel.urls.banner_image.original})`,\n          }}\n        />\n\n        <h1>{channel.title}</h1>\n\n        {series.length > 0 && \n          <div>\n            <h2>Series</h2>\n            <PodcastGrid channels={series} />\n          </div>\n        }\n\n        <h2>Ultimos Podcast</h2>\n        <EpisodeList audioClips={audioClips} />\n\n        <style jsx>{`\n          header {\n            color: #fff;\n            background: #8756ca;\n            padding: 15px;\n            text-align: center;\n          }\n\n          .banner {\n            width: 100%;\n            padding-bottom: 25%;\n            background-position: 50% 50%;\n            background-size: cover;\n            background-color: #aaa;\n          }\n\n          .channels {\n            display: grid;\n            grid-gap: 15px;\n            padding: 15px;\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n          }\n          a.channel {\n            display: block;\n            margin-bottom: 0.5em;\n            color: #333;\n            text-decoration: none;\n          }\n          .channel img {\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n            width: 100%;\n          }\n          h1 {\n            font-weight: 600;\n            padding: 15px;\n          }\n          h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-align: center;\n          }\n        `}</style>\n\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}