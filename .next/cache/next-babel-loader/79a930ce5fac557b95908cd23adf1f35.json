{"ast":null,"code":"var _jsxFileName = \"/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport { PlayerContext } from '../contexts/PlayerContext';\nimport { MdVolumeUp } from 'react-icons/md';\nexport default function EpisodeList({\n  audioClips\n}) {\n  const {\n    SetCurrent,\n    currentSong\n  } = useContext(PlayerContext);\n  const router = useRouter();\n  console.log(audioClips[0]);\n\n  const onPodcastClick = (podcastId, channelId) => {\n    SetCurrent(podcastId);\n    router.push({\n      pathname: `/[channel]/[podcast]`,\n      query: {\n        podcastId: podcastId\n      },\n      as: `/${channelId}/${podcastId}`\n    }, `/${channelId}/${podcastId}`);\n    console.log(router.query);\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-675685358\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-675685358\" + \" \" + 'episodes-header',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-675685358\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, `${audioClips.length} EPISODIOS`), __jsx(FiltersIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), audioClips.map((clip, index) => __jsx(\"div\", {\n    onClick: () => onPodcastClick(clip.id, clip.channel.id),\n    key: clip.id,\n    className: \"jsx-675685358\" + \" \" + ('episode ' + (currentSong === clip.id ? 'active' : '') || \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-675685358\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, clip.title), __jsx(\"div\", {\n    className: \"jsx-675685358\" + \" \" + 'meta',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, Math.ceil(clip.duration / 60), \" minutes\"), __jsx(\"p\", {\n    className: \"jsx-675685358\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, clip.title), currentSong === clip.id && __jsx(\"span\", {\n    className: \"jsx-675685358\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(MdVolumeUp, {\n    size: \"2em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"675685358\",\n    __self: this\n  }, \".episodes-header.jsx-675685358{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:30px 0;text-align:left;border-bottom:1px solid #e2e2e2;}h3.jsx-675685358{font-size:12px;font-weight:600;margin:0;}.episode.jsx-675685358{display:block;-webkit-text-decoration:none;text-decoration:none;margin:0 0.6em;padding:16px 0;border-bottom:1px solid #e2e2e2;cursor:pointer;}.active.jsx-675685358{background:black;color:white;margin:0;padding:16px 1em;border-bottom:none;border-radius:20px;position:relative;}.active.jsx-675685358 h2.jsx-675685358,.active.jsx-675685358 p.jsx-675685358{width:70%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-align:center;}.active.jsx-675685358 span.jsx-675685358{position:absolute;right:20px;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);}.episode.jsx-675685358:hover{color:#000;}h2.jsx-675685358{margin:16px 0;font-size:16px;}.episode.jsx-675685358 .meta.jsx-675685358{color:#979797;font-size:12px;margin-bottom:8px;}p.jsx-675685358{color:#979797;font-size:12px;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbURrQixBQUd3QixBQVFFLEFBS0QsQUFRRyxBQVVQLEFBT1EsQUFNUCxBQUdHLEFBSUEsQUFLQSxVQXhCSyxDQWFyQixHQS9CdUIsQUFrQ04sQUFJQSxBQUtBLENBaERDLEVBYUosQ0FpQkQsV0FoQkYsQUFVTyxBQU9SLEFBU1YsQUFJb0IsQUFLVCxFQWhEQSxNQStCa0IsQ0FqQlYsQUFtQ25CLEVBaERBLEtBdUJ5QixFQW9CekIsUUE3QnFCLFNBVkosSUFvQkcsTUFsQ1ksQUF5QlgsS0FWSixPQW9CakIsT0FUb0IsQ0FWYyxpQkFXbEMsZUFWaUIsSUF3QmpCLFdBdkJBLGdEQWpCcUIsNkZBQ0osZUFDQyxnQkFDZ0IsZ0NBQ2xDIiwiZmlsZSI6Ii9Vc2Vycy9lZGdhcmxvcGV6L0NvZGUvY291cnNlcy9yZWFjdC9uZXh0L3BvZGNhc3RzL2NvbXBvbmVudHMvRXBpc29kZUxpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZUNvbnRleHR9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCBGaWx0ZXJzSWNvbiBmcm9tICcuL0ZpbHRlcnNJY29uJztcbmltcG9ydCB7UGxheWVyQ29udGV4dH0gZnJvbSAnLi4vY29udGV4dHMvUGxheWVyQ29udGV4dCdcbmltcG9ydCB7TWRWb2x1bWVVcH0gZnJvbSAncmVhY3QtaWNvbnMvbWQnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVwaXNvZGVMaXN0ICh7YXVkaW9DbGlwc30pIHtcbiAgY29uc3QgeyBTZXRDdXJyZW50LCBjdXJyZW50U29uZ30gPSB1c2VDb250ZXh0KFBsYXllckNvbnRleHQpXG5cbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGNvbnNvbGUubG9nKGF1ZGlvQ2xpcHNbMF0pO1xuXG5cbiAgXG4gIGNvbnN0IG9uUG9kY2FzdENsaWNrID0gKHBvZGNhc3RJZCwgY2hhbm5lbElkKSA9PiB7XG4gICAgU2V0Q3VycmVudChwb2RjYXN0SWQpO1xuICAgIHJvdXRlci5wdXNoKFxuICAgICAge1xuICAgICAgICBwYXRobmFtZTogYC9bY2hhbm5lbF0vW3BvZGNhc3RdYCxcbiAgICAgICAgcXVlcnk6IHsgcG9kY2FzdElkOiBwb2RjYXN0SWQgfSxcbiAgICAgICAgYXM6IGAvJHtjaGFubmVsSWR9LyR7cG9kY2FzdElkfWAsXG4gICAgICB9LFxuICAgICAgYC8ke2NoYW5uZWxJZH0vJHtwb2RjYXN0SWR9YFxuICAgICk7XG4gICAgY29uc29sZS5sb2cocm91dGVyLnF1ZXJ5KTtcbiAgICBcbiAgfVxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nZXBpc29kZXMtaGVhZGVyJz5cbiAgICAgICAgPGgzPntgJHthdWRpb0NsaXBzLmxlbmd0aH0gRVBJU09ESU9TYH08L2gzPlxuICAgICAgICA8RmlsdGVyc0ljb24gLz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7YXVkaW9DbGlwcy5tYXAoKGNsaXAsIGluZGV4KSA9PiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9eydlcGlzb2RlICcgKyAoY3VycmVudFNvbmcgPT09IGNsaXAuaWQgPyAnYWN0aXZlJyA6ICcnKX1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblBvZGNhc3RDbGljayhjbGlwLmlkLCBjbGlwLmNoYW5uZWwuaWQpfVxuICAgICAgICAgIGtleT17Y2xpcC5pZH1cbiAgICAgICAgPlxuICAgICAgICAgIDxoMj57Y2xpcC50aXRsZX08L2gyPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtZXRhJz57TWF0aC5jZWlsKGNsaXAuZHVyYXRpb24gLyA2MCl9IG1pbnV0ZXM8L2Rpdj5cbiAgICAgICAgICA8cD57Y2xpcC50aXRsZX08L3A+XG4gICAgICAgICAge2N1cnJlbnRTb25nID09PSBjbGlwLmlkICYmIChcbiAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICA8TWRWb2x1bWVVcCBzaXplPScyZW0nIC8+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApKX1cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuZXBpc29kZXMtaGVhZGVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTJlMmUyO1xuICAgICAgICB9XG4gICAgICAgIGgzIHtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgICAgLmVwaXNvZGUge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBtYXJnaW46IDAgMC42ZW07XG4gICAgICAgICAgcGFkZGluZzogMTZweCAwO1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTJlMmUyO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuICAgICAgICAuYWN0aXZlIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDE2cHggMWVtO1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICAgICAgLmFjdGl2ZSBoMixcbiAgICAgICAgLmFjdGl2ZSBwIHtcbiAgICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgLmFjdGl2ZSBzcGFuIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICB9XG4gICAgICAgIC5lcGlzb2RlOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgfVxuICAgICAgICBoMiB7XG4gICAgICAgICAgbWFyZ2luOiAxNnB4IDA7XG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICB9XG4gICAgICAgIC5lcGlzb2RlIC5tZXRhIHtcbiAgICAgICAgICBjb2xvcjogIzk3OTc5NztcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgICAgICB9XG4gICAgICAgIHAge1xuICAgICAgICAgIGNvbG9yOiAjOTc5Nzk3O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js */\"));\n}","map":{"version":3,"sources":["/Users/edgarlopez/Code/courses/react/next/podcasts/components/EpisodeList.js"],"names":["useContext","useRouter","FiltersIcon","PlayerContext","MdVolumeUp","EpisodeList","audioClips","SetCurrent","currentSong","router","console","log","onPodcastClick","podcastId","channelId","push","pathname","query","as","length","map","clip","index","id","channel","title","Math","ceil","duration"],"mappings":";;;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AAEA,eAAe,SAASC,WAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAoC;AACjD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BR,UAAU,CAACG,aAAD,CAA7C;AAEA,QAAMM,MAAM,GAAGR,SAAS,EAAxB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAU,CAAC,CAAD,CAAtB;;AAIA,QAAMM,cAAc,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC/CP,IAAAA,UAAU,CAACM,SAAD,CAAV;AACAJ,IAAAA,MAAM,CAACM,IAAP,CACE;AACEC,MAAAA,QAAQ,EAAG,sBADb;AAEEC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,SAAS,EAAEA;AAAb,OAFT;AAGEK,MAAAA,EAAE,EAAG,IAAGJ,SAAU,IAAGD,SAAU;AAHjC,KADF,EAMG,IAAGC,SAAU,IAAGD,SAAU,EAN7B;AAQAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACQ,KAAnB;AAED,GAZD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,uCAAe,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,GAAEX,UAAU,CAACa,MAAO,YAA1B,CADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAMGb,UAAU,CAACc,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KACd;AAEE,IAAA,OAAO,EAAE,MAAMV,cAAc,CAACS,IAAI,CAACE,EAAN,EAAUF,IAAI,CAACG,OAAL,CAAaD,EAAvB,CAF/B;AAGE,IAAA,GAAG,EAAEF,IAAI,CAACE,EAHZ;AAAA,wCACa,cAAcf,WAAW,KAAKa,IAAI,CAACE,EAArB,GAA0B,QAA1B,GAAqC,EAAnD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACI,KAAV,CALF,EAME;AAAA,uCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,IAAI,CAACC,IAAL,CAAUN,IAAI,CAACO,QAAL,GAAgB,EAA1B,CAAvB,aANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAI,CAACI,KAAT,CAPF,EAQGjB,WAAW,KAAKa,IAAI,CAACE,EAArB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATJ,CADD,CANH;AAAA;AAAA;AAAA,qlMADF;AAyFD","sourcesContent":["import {useContext} from 'react'\nimport {useRouter} from 'next/router';\nimport FiltersIcon from './FiltersIcon';\nimport {PlayerContext} from '../contexts/PlayerContext'\nimport {MdVolumeUp} from 'react-icons/md'\n\nexport default function EpisodeList ({audioClips}) {\n  const { SetCurrent, currentSong} = useContext(PlayerContext)\n\n  const router = useRouter();\n  console.log(audioClips[0]);\n\n\n  \n  const onPodcastClick = (podcastId, channelId) => {\n    SetCurrent(podcastId);\n    router.push(\n      {\n        pathname: `/[channel]/[podcast]`,\n        query: { podcastId: podcastId },\n        as: `/${channelId}/${podcastId}`,\n      },\n      `/${channelId}/${podcastId}`\n    );\n    console.log(router.query);\n    \n  }\n  return (\n    <div>\n      <div className='episodes-header'>\n        <h3>{`${audioClips.length} EPISODIOS`}</h3>\n        <FiltersIcon />\n      </div>\n\n      {audioClips.map((clip, index) => (\n        <div\n          className={'episode ' + (currentSong === clip.id ? 'active' : '')}\n          onClick={() => onPodcastClick(clip.id, clip.channel.id)}\n          key={clip.id}\n        >\n          <h2>{clip.title}</h2>\n          <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n          <p>{clip.title}</p>\n          {currentSong === clip.id && (\n            <span>\n              <MdVolumeUp size='2em' />\n            </span>\n          )}\n        </div>\n      ))}\n\n      <style jsx>{`\n        .episodes-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 30px 0;\n          text-align: left;\n          border-bottom: 1px solid #e2e2e2;\n        }\n        h3 {\n          font-size: 12px;\n          font-weight: 600;\n          margin: 0;\n        }\n        .episode {\n          display: block;\n          text-decoration: none;\n          margin: 0 0.6em;\n          padding: 16px 0;\n          border-bottom: 1px solid #e2e2e2;\n          cursor: pointer;\n        }\n        .active {\n          background: black;\n          color: white;\n          margin: 0;\n          padding: 16px 1em;\n          border-bottom: none;\n          border-radius: 20px;\n          position: relative;\n        }\n        .active h2,\n        .active p {\n          width: 70%;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          text-align: center;\n        }\n        .active span {\n          position: absolute;\n          right: 20px;\n          top: 50%;\n          transform: translateY(-50%);\n        }\n        .episode:hover {\n          color: #000;\n        }\n        h2 {\n          margin: 16px 0;\n          font-size: 16px;\n        }\n        .episode .meta {\n          color: #979797;\n          font-size: 12px;\n          margin-bottom: 8px;\n        }\n        p {\n          color: #979797;\n          font-size: 12px;\n          margin: 0;\n        }\n      `}</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}